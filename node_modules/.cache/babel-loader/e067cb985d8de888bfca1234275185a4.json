{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51J5EPQFOiWwOoK1YSaHbByG1mDZJJtKtGiutqeKKTrAs6Vr4hN8r6fprQXNA1x7BoxU5dvXL9jNdwtqTxwGHbiXk00TTjPMNxL\");\nconsole.log(stripePromise);\n\nconst CheckoutForm = ({\n  guideCost,\n  createGuide\n}) => {\n  _s();\n\n  console.log(guideCost);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async e => {\n    console.log('FROM SUBMITTED');\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod, 'PAYMENT METHOD');\n    console.log(error, 'ERROR');\n    setLoading(true);\n\n    if (!error) {\n      console.log(paymentMethod);\n      const {\n        id\n      } = paymentMethod;\n\n      try {\n        const {\n          data\n        } = await axios.post(\"/api/checkout/payment\", {\n          id,\n          amount: guideCost * 100 //cents\n\n        });\n        console.log(data);\n        elements.getElement(CardElement).clear();\n        createGuide();\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    }\n  };\n\n  console.log(!stripe || loading);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"card card-body\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(CardElement, {\n        options: CARD_OPTIONS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !stripe,\n      className: \"btn btn-success\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-light\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"GyjitGMhIec78XX8Ioi2UT7LwoQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\n\nconst CheckoutStripe = ({\n  guideCost,\n  createGuide\n}) => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 offset-md-4 h-100\",\n          children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n            guideCost: guideCost,\n            createGuide: createGuide\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CheckoutStripe;\nexport default CheckoutStripe;\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"black\",\n      color: \"black\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"CheckoutStripe\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Cart/Checkout.js"],"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","axios","stripePromise","console","log","CheckoutForm","guideCost","createGuide","stripe","elements","loading","setLoading","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","data","post","amount","clear","CARD_OPTIONS","CheckoutStripe","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Elements,\n  CardElement,\n  useStripe,\n  useElements,\n} from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nconst stripePromise = loadStripe(\"pk_test_51J5EPQFOiWwOoK1YSaHbByG1mDZJJtKtGiutqeKKTrAs6Vr4hN8r6fprQXNA1x7BoxU5dvXL9jNdwtqTxwGHbiXk00TTjPMNxL\");\n\nconsole.log(stripePromise)\n\nconst CheckoutForm = ( {guideCost, createGuide} ) => {\n  console.log(guideCost)\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    console.log('FROM SUBMITTED')\n    e.preventDefault();\n\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod, 'PAYMENT METHOD')\n    console.log(error, 'ERROR')\n    setLoading(true);\n\n    if (!error) {\n      console.log(paymentMethod)\n      const { id } = paymentMethod;\n      try {\n        const { data } = await axios.post(\n          \"/api/checkout/payment\",\n          {\n            id,\n            amount: guideCost * 100, //cents\n          }\n\n        );\n        \n        console.log(data);\n        elements.getElement(CardElement).clear();\n        createGuide()\n      } catch (error) {\n        console.log(error);\n      }\n      setLoading(false);\n    }\n  };\n\n  console.log(!stripe || loading);\n\n  return (\n    <form className=\"card card-body\" onSubmit={handleSubmit}>\n      {/* Product Information */}\n      {/* <img\n        src=\"https://www.corsair.com/medias/sys_master/images/images/h80/hdd/9029904465950/-CH-9109011-ES-Gallery-K70-RGB-MK2-01.png\"\n        alt=\"Corsair Gaming Keyboard RGB\"\n        className=\"img-fluid\"\n      /> */}\n\n      {/* <h3 className=\"text-center my-2\">Price: 100$</h3> */}\n\n      {/* User Card Input */}\n      <div className=\"form-group\">\n        <CardElement options={CARD_OPTIONS}/>\n      </div>\n\n      <button disabled={!stripe} className=\"btn btn-success\">\n        {loading ? (\n          <div className=\"spinner-border text-light\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        ) : (\n          \"Buy\"\n        )}\n      </button>\n    </form>\n  );\n};\n\nconst CheckoutStripe =({ guideCost, createGuide }) => {\n  \n  return (\n    <Elements stripe={stripePromise}>\n      <div className=\"container p-4\">\n        <div className=\"row h-100\">\n          <div className=\"col-md-4 offset-md-4 h-100\">\n            <CheckoutForm guideCost={guideCost} createGuide={createGuide}/>\n          </div>\n        </div>\n      </div>\n    </Elements>\n  );\n}\n\nexport default CheckoutStripe;\n\n\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"black\",\n      color: \"black\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}