{"ast":null,"code":"'use strict';\n\nvar isString = require('./helpers').isString;\n\nvar isNumber = require('./helpers').isNumber;\n\nvar isObject = require('./helpers').isObject;\n\nvar isArray = require('./helpers').isArray;\n\nvar isUndefined = require('./helpers').isUndefined;\n\nvar LineBreaker = require('linebreak');\n\nvar LEADING = /^(\\s)+/g;\nvar TRAILING = /(\\s)+$/g;\n/**\r\n * Creates an instance of TextTools - text measurement utility\r\n *\r\n * @constructor\r\n * @param {FontProvider} fontProvider\r\n */\n\nfunction TextTools(fontProvider) {\n  this.fontProvider = fontProvider;\n}\n/**\r\n * Converts an array of strings (or inline-definition-objects) into a collection\r\n * of inlines and calculated minWidth/maxWidth.\r\n * and their min/max widths\r\n * @param  {Object} textArray - an array of inline-definition-objects (or strings)\r\n * @param  {Object} styleContextStack current style stack\r\n * @return {Object}                   collection of inlines, minWidth, maxWidth\r\n */\n\n\nTextTools.prototype.buildInlines = function (textArray, styleContextStack) {\n  var measured = measure(this.fontProvider, textArray, styleContextStack);\n  var minWidth = 0,\n      maxWidth = 0,\n      currentLineWidth;\n  measured.forEach(function (inline) {\n    minWidth = Math.max(minWidth, inline.width - inline.leadingCut - inline.trailingCut);\n\n    if (!currentLineWidth) {\n      currentLineWidth = {\n        width: 0,\n        leadingCut: inline.leadingCut,\n        trailingCut: 0\n      };\n    }\n\n    currentLineWidth.width += inline.width;\n    currentLineWidth.trailingCut = inline.trailingCut;\n    maxWidth = Math.max(maxWidth, getTrimmedWidth(currentLineWidth));\n\n    if (inline.lineEnd) {\n      currentLineWidth = null;\n    }\n  });\n\n  if (getStyleProperty({}, styleContextStack, 'noWrap', false)) {\n    minWidth = maxWidth;\n  }\n\n  return {\n    items: measured,\n    minWidth: minWidth,\n    maxWidth: maxWidth\n  };\n\n  function getTrimmedWidth(item) {\n    return Math.max(0, item.width - item.leadingCut - item.trailingCut);\n  }\n};\n/**\r\n * Returns size of the specified string (without breaking it) using the current style\r\n * @param  {String} text              text to be measured\r\n * @param  {Object} styleContextStack current style stack\r\n * @return {Object}                   size of the specified string\r\n */\n\n\nTextTools.prototype.sizeOfString = function (text, styleContextStack) {\n  text = text ? text.toString().replace(/\\t/g, '    ') : ''; //TODO: refactor - extract from measure\n\n  var fontName = getStyleProperty({}, styleContextStack, 'font', 'Roboto');\n  var fontSize = getStyleProperty({}, styleContextStack, 'fontSize', 12);\n  var fontFeatures = getStyleProperty({}, styleContextStack, 'fontFeatures', null);\n  var bold = getStyleProperty({}, styleContextStack, 'bold', false);\n  var italics = getStyleProperty({}, styleContextStack, 'italics', false);\n  var lineHeight = getStyleProperty({}, styleContextStack, 'lineHeight', 1);\n  var characterSpacing = getStyleProperty({}, styleContextStack, 'characterSpacing', 0);\n  var font = this.fontProvider.provideFont(fontName, bold, italics);\n  return {\n    width: widthOfString(text, font, fontSize, characterSpacing, fontFeatures),\n    height: font.lineHeight(fontSize) * lineHeight,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    ascender: font.ascender / 1000 * fontSize,\n    descender: font.descender / 1000 * fontSize\n  };\n};\n/**\r\n * Returns size of the specified rotated string (without breaking it) using the current style\r\n *\r\n * @param  {string} text text to be measured\r\n * @param  {number} angle\r\n * @param  {object} styleContextStack current style stack\r\n * @returns {object} size of the specified string\r\n */\n\n\nTextTools.prototype.sizeOfRotatedText = function (text, angle, styleContextStack) {\n  var angleRad = angle * Math.PI / -180;\n  var size = this.sizeOfString(text, styleContextStack);\n  return {\n    width: Math.abs(size.height * Math.sin(angleRad)) + Math.abs(size.width * Math.cos(angleRad)),\n    height: Math.abs(size.width * Math.sin(angleRad)) + Math.abs(size.height * Math.cos(angleRad))\n  };\n};\n\nTextTools.prototype.widthOfString = function (text, font, fontSize, characterSpacing, fontFeatures) {\n  return widthOfString(text, font, fontSize, characterSpacing, fontFeatures);\n};\n\nfunction splitWords(text, noWrap) {\n  var results = [];\n  text = text.replace(/\\t/g, '    ');\n\n  if (noWrap) {\n    results.push({\n      text: text\n    });\n    return results;\n  }\n\n  var breaker = new LineBreaker(text);\n  var last = 0;\n  var bk;\n\n  while (bk = breaker.nextBreak()) {\n    var word = text.slice(last, bk.position);\n\n    if (bk.required || word.match(/\\r?\\n$|\\r$/)) {\n      // new line\n      word = word.replace(/\\r?\\n$|\\r$/, '');\n      results.push({\n        text: word,\n        lineEnd: true\n      });\n    } else {\n      results.push({\n        text: word\n      });\n    }\n\n    last = bk.position;\n  }\n\n  return results;\n}\n\nfunction copyStyle(source, destination) {\n  destination = destination || {};\n  source = source || {}; //TODO: default style\n\n  for (var key in source) {\n    if (key != 'text' && source.hasOwnProperty(key)) {\n      destination[key] = source[key];\n    }\n  }\n\n  return destination;\n}\n\nfunction normalizeTextArray(array, styleContextStack) {\n  function flatten(array) {\n    return array.reduce(function (prev, cur) {\n      var current = isArray(cur.text) ? flatten(cur.text) : cur;\n      var more = [].concat(current).some(Array.isArray);\n      return prev.concat(more ? flatten(current) : current);\n    }, []);\n  }\n\n  function getOneWord(index, words, noWrap) {\n    if (isUndefined(words[index])) {\n      return null;\n    }\n\n    if (words[index].lineEnd) {\n      return null;\n    }\n\n    var word = words[index].text;\n\n    if (noWrap) {\n      var tmpWords = splitWords(normalizeString(word), false);\n\n      if (isUndefined(tmpWords[tmpWords.length - 1])) {\n        return null;\n      }\n\n      word = tmpWords[tmpWords.length - 1].text;\n    }\n\n    return word;\n  }\n\n  var results = [];\n\n  if (!isArray(array)) {\n    array = [array];\n  }\n\n  array = flatten(array);\n  var lastWord = null;\n\n  for (var i = 0, l = array.length; i < l; i++) {\n    var item = array[i];\n    var style = null;\n    var words;\n    var noWrap = getStyleProperty(item || {}, styleContextStack, 'noWrap', false);\n\n    if (isObject(item)) {\n      if (item._textRef && item._textRef._textNodeRef.text) {\n        item.text = item._textRef._textNodeRef.text;\n      }\n\n      words = splitWords(normalizeString(item.text), noWrap);\n      style = copyStyle(item);\n    } else {\n      words = splitWords(normalizeString(item), noWrap);\n    }\n\n    if (lastWord && words.length) {\n      var firstWord = getOneWord(0, words, noWrap);\n      var wrapWords = splitWords(normalizeString(lastWord + firstWord), false);\n\n      if (wrapWords.length === 1) {\n        results[results.length - 1].noNewLine = true;\n      }\n    }\n\n    for (var i2 = 0, l2 = words.length; i2 < l2; i2++) {\n      var result = {\n        text: words[i2].text\n      };\n\n      if (words[i2].lineEnd) {\n        result.lineEnd = true;\n      }\n\n      copyStyle(style, result);\n      results.push(result);\n    }\n\n    lastWord = null;\n\n    if (i + 1 < l) {\n      lastWord = getOneWord(words.length - 1, words, noWrap);\n    }\n  }\n\n  return results;\n}\n\nfunction normalizeString(value) {\n  if (value === undefined || value === null) {\n    return '';\n  } else if (isNumber(value)) {\n    return value.toString();\n  } else if (isString(value)) {\n    return value;\n  } else {\n    return value.toString();\n  }\n}\n\nfunction getStyleProperty(item, styleContextStack, property, defaultValue) {\n  var value;\n\n  if (item[property] !== undefined && item[property] !== null) {\n    // item defines this property\n    return item[property];\n  }\n\n  if (!styleContextStack) {\n    return defaultValue;\n  }\n\n  styleContextStack.auto(item, function () {\n    value = styleContextStack.getProperty(property);\n  });\n\n  if (value !== null && value !== undefined) {\n    return value;\n  } else {\n    return defaultValue;\n  }\n}\n\nfunction measure(fontProvider, textArray, styleContextStack) {\n  var normalized = normalizeTextArray(textArray, styleContextStack);\n\n  if (normalized.length) {\n    var leadingIndent = getStyleProperty(normalized[0], styleContextStack, 'leadingIndent', 0);\n\n    if (leadingIndent) {\n      normalized[0].leadingCut = -leadingIndent;\n      normalized[0].leadingIndent = leadingIndent;\n    }\n  }\n\n  normalized.forEach(function (item) {\n    var fontName = getStyleProperty(item, styleContextStack, 'font', 'Roboto');\n    var fontSize = getStyleProperty(item, styleContextStack, 'fontSize', 12);\n    var fontFeatures = getStyleProperty(item, styleContextStack, 'fontFeatures', null);\n    var bold = getStyleProperty(item, styleContextStack, 'bold', false);\n    var italics = getStyleProperty(item, styleContextStack, 'italics', false);\n    var color = getStyleProperty(item, styleContextStack, 'color', 'black');\n    var decoration = getStyleProperty(item, styleContextStack, 'decoration', null);\n    var decorationColor = getStyleProperty(item, styleContextStack, 'decorationColor', null);\n    var decorationStyle = getStyleProperty(item, styleContextStack, 'decorationStyle', null);\n    var background = getStyleProperty(item, styleContextStack, 'background', null);\n    var lineHeight = getStyleProperty(item, styleContextStack, 'lineHeight', 1);\n    var characterSpacing = getStyleProperty(item, styleContextStack, 'characterSpacing', 0);\n    var link = getStyleProperty(item, styleContextStack, 'link', null);\n    var linkToPage = getStyleProperty(item, styleContextStack, 'linkToPage', null);\n    var linkToDestination = getStyleProperty(item, styleContextStack, 'linkToDestination', null);\n    var noWrap = getStyleProperty(item, styleContextStack, 'noWrap', null);\n    var preserveLeadingSpaces = getStyleProperty(item, styleContextStack, 'preserveLeadingSpaces', false);\n    var preserveTrailingSpaces = getStyleProperty(item, styleContextStack, 'preserveTrailingSpaces', false);\n    var opacity = getStyleProperty(item, styleContextStack, 'opacity', 1);\n    var sup = getStyleProperty(item, styleContextStack, 'sup', false);\n    var sub = getStyleProperty(item, styleContextStack, 'sub', false);\n\n    if ((sup || sub) && item.fontSize === undefined) {\n      // font size reduction taken from here: https://en.wikipedia.org/wiki/Subscript_and_superscript#Desktop_publishing\n      fontSize *= 0.58;\n    }\n\n    var font = fontProvider.provideFont(fontName, bold, italics);\n    item.width = widthOfString(item.text, font, fontSize, characterSpacing, fontFeatures);\n    item.height = font.lineHeight(fontSize) * lineHeight;\n\n    if (!item.leadingCut) {\n      item.leadingCut = 0;\n    }\n\n    var leadingSpaces;\n\n    if (!preserveLeadingSpaces && (leadingSpaces = item.text.match(LEADING))) {\n      item.leadingCut += widthOfString(leadingSpaces[0], font, fontSize, characterSpacing, fontFeatures);\n    }\n\n    var trailingSpaces;\n\n    if (!preserveTrailingSpaces && (trailingSpaces = item.text.match(TRAILING))) {\n      item.trailingCut = widthOfString(trailingSpaces[0], font, fontSize, characterSpacing, fontFeatures);\n    } else {\n      item.trailingCut = 0;\n    }\n\n    item.alignment = getStyleProperty(item, styleContextStack, 'alignment', 'left');\n    item.font = font;\n    item.fontSize = fontSize;\n    item.fontFeatures = fontFeatures;\n    item.characterSpacing = characterSpacing;\n    item.color = color;\n    item.decoration = decoration;\n    item.decorationColor = decorationColor;\n    item.decorationStyle = decorationStyle;\n    item.background = background;\n    item.link = link;\n    item.linkToPage = linkToPage;\n    item.linkToDestination = linkToDestination;\n    item.noWrap = noWrap;\n    item.opacity = opacity;\n    item.sup = sup;\n    item.sub = sub;\n  });\n  return normalized;\n}\n\nfunction widthOfString(text, font, fontSize, characterSpacing, fontFeatures) {\n  return font.widthOfString(text, fontSize, fontFeatures) + (characterSpacing || 0) * (text.length - 1);\n}\n\nmodule.exports = TextTools;","map":{"version":3,"sources":["/home/julianallende/Desktop/proyecto_sapo/client/node_modules/pdfmake/src/textTools.js"],"names":["isString","require","isNumber","isObject","isArray","isUndefined","LineBreaker","LEADING","TRAILING","TextTools","fontProvider","prototype","buildInlines","textArray","styleContextStack","measured","measure","minWidth","maxWidth","currentLineWidth","forEach","inline","Math","max","width","leadingCut","trailingCut","getTrimmedWidth","lineEnd","getStyleProperty","items","item","sizeOfString","text","toString","replace","fontName","fontSize","fontFeatures","bold","italics","lineHeight","characterSpacing","font","provideFont","widthOfString","height","ascender","descender","sizeOfRotatedText","angle","angleRad","PI","size","abs","sin","cos","splitWords","noWrap","results","push","breaker","last","bk","nextBreak","word","slice","position","required","match","copyStyle","source","destination","key","hasOwnProperty","normalizeTextArray","array","flatten","reduce","prev","cur","current","more","concat","some","Array","getOneWord","index","words","tmpWords","normalizeString","length","lastWord","i","l","style","_textRef","_textNodeRef","firstWord","wrapWords","noNewLine","i2","l2","result","value","undefined","property","defaultValue","auto","getProperty","normalized","leadingIndent","color","decoration","decorationColor","decorationStyle","background","link","linkToPage","linkToDestination","preserveLeadingSpaces","preserveTrailingSpaces","opacity","sup","sub","leadingSpaces","trailingSpaces","alignment","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar isString = require('./helpers').isString;\r\nvar isNumber = require('./helpers').isNumber;\r\nvar isObject = require('./helpers').isObject;\r\nvar isArray = require('./helpers').isArray;\r\nvar isUndefined = require('./helpers').isUndefined;\r\nvar LineBreaker = require('linebreak');\r\n\r\nvar LEADING = /^(\\s)+/g;\r\nvar TRAILING = /(\\s)+$/g;\r\n\r\n/**\r\n * Creates an instance of TextTools - text measurement utility\r\n *\r\n * @constructor\r\n * @param {FontProvider} fontProvider\r\n */\r\nfunction TextTools(fontProvider) {\r\n\tthis.fontProvider = fontProvider;\r\n}\r\n\r\n/**\r\n * Converts an array of strings (or inline-definition-objects) into a collection\r\n * of inlines and calculated minWidth/maxWidth.\r\n * and their min/max widths\r\n * @param  {Object} textArray - an array of inline-definition-objects (or strings)\r\n * @param  {Object} styleContextStack current style stack\r\n * @return {Object}                   collection of inlines, minWidth, maxWidth\r\n */\r\nTextTools.prototype.buildInlines = function (textArray, styleContextStack) {\r\n\tvar measured = measure(this.fontProvider, textArray, styleContextStack);\r\n\r\n\tvar minWidth = 0,\r\n\t\tmaxWidth = 0,\r\n\t\tcurrentLineWidth;\r\n\r\n\tmeasured.forEach(function (inline) {\r\n\t\tminWidth = Math.max(minWidth, inline.width - inline.leadingCut - inline.trailingCut);\r\n\r\n\t\tif (!currentLineWidth) {\r\n\t\t\tcurrentLineWidth = { width: 0, leadingCut: inline.leadingCut, trailingCut: 0 };\r\n\t\t}\r\n\r\n\t\tcurrentLineWidth.width += inline.width;\r\n\t\tcurrentLineWidth.trailingCut = inline.trailingCut;\r\n\r\n\t\tmaxWidth = Math.max(maxWidth, getTrimmedWidth(currentLineWidth));\r\n\r\n\t\tif (inline.lineEnd) {\r\n\t\t\tcurrentLineWidth = null;\r\n\t\t}\r\n\t});\r\n\r\n\tif (getStyleProperty({}, styleContextStack, 'noWrap', false)) {\r\n\t\tminWidth = maxWidth;\r\n\t}\r\n\r\n\treturn {\r\n\t\titems: measured,\r\n\t\tminWidth: minWidth,\r\n\t\tmaxWidth: maxWidth\r\n\t};\r\n\r\n\tfunction getTrimmedWidth(item) {\r\n\t\treturn Math.max(0, item.width - item.leadingCut - item.trailingCut);\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns size of the specified string (without breaking it) using the current style\r\n * @param  {String} text              text to be measured\r\n * @param  {Object} styleContextStack current style stack\r\n * @return {Object}                   size of the specified string\r\n */\r\nTextTools.prototype.sizeOfString = function (text, styleContextStack) {\r\n\ttext = text ? text.toString().replace(/\\t/g, '    ') : '';\r\n\r\n\t//TODO: refactor - extract from measure\r\n\tvar fontName = getStyleProperty({}, styleContextStack, 'font', 'Roboto');\r\n\tvar fontSize = getStyleProperty({}, styleContextStack, 'fontSize', 12);\r\n\tvar fontFeatures = getStyleProperty({}, styleContextStack, 'fontFeatures', null);\r\n\tvar bold = getStyleProperty({}, styleContextStack, 'bold', false);\r\n\tvar italics = getStyleProperty({}, styleContextStack, 'italics', false);\r\n\tvar lineHeight = getStyleProperty({}, styleContextStack, 'lineHeight', 1);\r\n\tvar characterSpacing = getStyleProperty({}, styleContextStack, 'characterSpacing', 0);\r\n\r\n\tvar font = this.fontProvider.provideFont(fontName, bold, italics);\r\n\r\n\treturn {\r\n\t\twidth: widthOfString(text, font, fontSize, characterSpacing, fontFeatures),\r\n\t\theight: font.lineHeight(fontSize) * lineHeight,\r\n\t\tfontSize: fontSize,\r\n\t\tlineHeight: lineHeight,\r\n\t\tascender: font.ascender / 1000 * fontSize,\r\n\t\tdescender: font.descender / 1000 * fontSize\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns size of the specified rotated string (without breaking it) using the current style\r\n *\r\n * @param  {string} text text to be measured\r\n * @param  {number} angle\r\n * @param  {object} styleContextStack current style stack\r\n * @returns {object} size of the specified string\r\n */\r\nTextTools.prototype.sizeOfRotatedText = function (text, angle, styleContextStack) {\r\n\tvar angleRad = angle * Math.PI / -180;\r\n\tvar size = this.sizeOfString(text, styleContextStack);\r\n\treturn {\r\n\t\twidth: Math.abs(size.height * Math.sin(angleRad)) + Math.abs(size.width * Math.cos(angleRad)),\r\n\t\theight: Math.abs(size.width * Math.sin(angleRad)) + Math.abs(size.height * Math.cos(angleRad))\r\n\t};\r\n}\r\n\r\nTextTools.prototype.widthOfString = function (text, font, fontSize, characterSpacing, fontFeatures) {\r\n\treturn widthOfString(text, font, fontSize, characterSpacing, fontFeatures);\r\n};\r\n\r\nfunction splitWords(text, noWrap) {\r\n\tvar results = [];\r\n\ttext = text.replace(/\\t/g, '    ');\r\n\r\n\tif (noWrap) {\r\n\t\tresults.push({ text: text });\r\n\t\treturn results;\r\n\t}\r\n\r\n\tvar breaker = new LineBreaker(text);\r\n\tvar last = 0;\r\n\tvar bk;\r\n\r\n\twhile (bk = breaker.nextBreak()) {\r\n\t\tvar word = text.slice(last, bk.position);\r\n\r\n\t\tif (bk.required || word.match(/\\r?\\n$|\\r$/)) { // new line\r\n\t\t\tword = word.replace(/\\r?\\n$|\\r$/, '');\r\n\t\t\tresults.push({ text: word, lineEnd: true });\r\n\t\t} else {\r\n\t\t\tresults.push({ text: word });\r\n\t\t}\r\n\r\n\t\tlast = bk.position;\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction copyStyle(source, destination) {\r\n\tdestination = destination || {};\r\n\tsource = source || {}; //TODO: default style\r\n\r\n\tfor (var key in source) {\r\n\t\tif (key != 'text' && source.hasOwnProperty(key)) {\r\n\t\t\tdestination[key] = source[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn destination;\r\n}\r\n\r\nfunction normalizeTextArray(array, styleContextStack) {\r\n\tfunction flatten(array) {\r\n\t\treturn array.reduce(function (prev, cur) {\r\n\t\t\tvar current = isArray(cur.text) ? flatten(cur.text) : cur;\r\n\t\t\tvar more = [].concat(current).some(Array.isArray);\r\n\t\t\treturn prev.concat(more ? flatten(current) : current);\r\n\t\t}, []);\r\n\t}\r\n\r\n\tfunction getOneWord(index, words, noWrap) {\r\n\t\tif (isUndefined(words[index])) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (words[index].lineEnd) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar word = words[index].text;\r\n\r\n\t\tif (noWrap) {\r\n\t\t\tvar tmpWords = splitWords(normalizeString(word), false);\r\n\t\t\tif (isUndefined(tmpWords[tmpWords.length - 1])) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tword = tmpWords[tmpWords.length - 1].text;\r\n\t\t}\r\n\r\n\t\treturn word;\r\n\t}\r\n\r\n\tvar results = [];\r\n\r\n\tif (!isArray(array)) {\r\n\t\tarray = [array];\r\n\t}\r\n\r\n\tarray = flatten(array);\r\n\r\n\tvar lastWord = null;\r\n\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\tvar item = array[i];\r\n\t\tvar style = null;\r\n\t\tvar words;\r\n\r\n\t\tvar noWrap = getStyleProperty(item || {}, styleContextStack, 'noWrap', false);\r\n\t\tif (isObject(item)) {\r\n\t\t\tif (item._textRef && item._textRef._textNodeRef.text) {\r\n\t\t\t\titem.text = item._textRef._textNodeRef.text;\r\n\t\t\t}\r\n\t\t\twords = splitWords(normalizeString(item.text), noWrap);\r\n\t\t\tstyle = copyStyle(item);\r\n\t\t} else {\r\n\t\t\twords = splitWords(normalizeString(item), noWrap);\r\n\t\t}\r\n\r\n\t\tif (lastWord && words.length) {\r\n\t\t\tvar firstWord = getOneWord(0, words, noWrap);\r\n\r\n\t\t\tvar wrapWords = splitWords(normalizeString(lastWord + firstWord), false);\r\n\t\t\tif (wrapWords.length === 1) {\r\n\t\t\t\tresults[results.length - 1].noNewLine = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i2 = 0, l2 = words.length; i2 < l2; i2++) {\r\n\t\t\tvar result = {\r\n\t\t\t\ttext: words[i2].text\r\n\t\t\t};\r\n\r\n\t\t\tif (words[i2].lineEnd) {\r\n\t\t\t\tresult.lineEnd = true;\r\n\t\t\t}\r\n\r\n\t\t\tcopyStyle(style, result);\r\n\r\n\t\t\tresults.push(result);\r\n\t\t}\r\n\r\n\t\tlastWord = null;\r\n\t\tif (i + 1 < l) {\r\n\t\t\tlastWord = getOneWord(words.length - 1, words, noWrap);\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction normalizeString(value) {\r\n\tif (value === undefined || value === null) {\r\n\t\treturn '';\r\n\t} else if (isNumber(value)) {\r\n\t\treturn value.toString();\r\n\t} else if (isString(value)) {\r\n\t\treturn value;\r\n\t} else {\r\n\t\treturn value.toString();\r\n\t}\r\n}\r\n\r\nfunction getStyleProperty(item, styleContextStack, property, defaultValue) {\r\n\tvar value;\r\n\r\n\tif (item[property] !== undefined && item[property] !== null) {\r\n\t\t// item defines this property\r\n\t\treturn item[property];\r\n\t}\r\n\r\n\tif (!styleContextStack) {\r\n\t\treturn defaultValue;\r\n\t}\r\n\r\n\tstyleContextStack.auto(item, function () {\r\n\t\tvalue = styleContextStack.getProperty(property);\r\n\t});\r\n\r\n\tif (value !== null && value !== undefined) {\r\n\t\treturn value;\r\n\t} else {\r\n\t\treturn defaultValue;\r\n\t}\r\n}\r\n\r\nfunction measure(fontProvider, textArray, styleContextStack) {\r\n\tvar normalized = normalizeTextArray(textArray, styleContextStack);\r\n\r\n\tif (normalized.length) {\r\n\t\tvar leadingIndent = getStyleProperty(normalized[0], styleContextStack, 'leadingIndent', 0);\r\n\r\n\t\tif (leadingIndent) {\r\n\t\t\tnormalized[0].leadingCut = -leadingIndent;\r\n\t\t\tnormalized[0].leadingIndent = leadingIndent;\r\n\t\t}\r\n\t}\r\n\r\n\tnormalized.forEach(function (item) {\r\n\t\tvar fontName = getStyleProperty(item, styleContextStack, 'font', 'Roboto');\r\n\t\tvar fontSize = getStyleProperty(item, styleContextStack, 'fontSize', 12);\r\n\t\tvar fontFeatures = getStyleProperty(item, styleContextStack, 'fontFeatures', null);\r\n\t\tvar bold = getStyleProperty(item, styleContextStack, 'bold', false);\r\n\t\tvar italics = getStyleProperty(item, styleContextStack, 'italics', false);\r\n\t\tvar color = getStyleProperty(item, styleContextStack, 'color', 'black');\r\n\t\tvar decoration = getStyleProperty(item, styleContextStack, 'decoration', null);\r\n\t\tvar decorationColor = getStyleProperty(item, styleContextStack, 'decorationColor', null);\r\n\t\tvar decorationStyle = getStyleProperty(item, styleContextStack, 'decorationStyle', null);\r\n\t\tvar background = getStyleProperty(item, styleContextStack, 'background', null);\r\n\t\tvar lineHeight = getStyleProperty(item, styleContextStack, 'lineHeight', 1);\r\n\t\tvar characterSpacing = getStyleProperty(item, styleContextStack, 'characterSpacing', 0);\r\n\t\tvar link = getStyleProperty(item, styleContextStack, 'link', null);\r\n\t\tvar linkToPage = getStyleProperty(item, styleContextStack, 'linkToPage', null);\r\n\t\tvar linkToDestination = getStyleProperty(item, styleContextStack, 'linkToDestination', null);\r\n\t\tvar noWrap = getStyleProperty(item, styleContextStack, 'noWrap', null);\r\n\t\tvar preserveLeadingSpaces = getStyleProperty(item, styleContextStack, 'preserveLeadingSpaces', false);\r\n\t\tvar preserveTrailingSpaces = getStyleProperty(item, styleContextStack, 'preserveTrailingSpaces', false);\r\n\t\tvar opacity = getStyleProperty(item, styleContextStack, 'opacity', 1);\r\n\t\tvar sup = getStyleProperty(item, styleContextStack, 'sup', false);\r\n\t\tvar sub = getStyleProperty(item, styleContextStack, 'sub', false);\r\n\r\n\t\tif ((sup || sub) && item.fontSize === undefined) {\r\n\t\t\t// font size reduction taken from here: https://en.wikipedia.org/wiki/Subscript_and_superscript#Desktop_publishing\r\n\t\t\tfontSize *= 0.58\r\n\t\t}\r\n\r\n\t\tvar font = fontProvider.provideFont(fontName, bold, italics);\r\n\r\n\t\titem.width = widthOfString(item.text, font, fontSize, characterSpacing, fontFeatures);\r\n\t\titem.height = font.lineHeight(fontSize) * lineHeight;\r\n\r\n\t\tif (!item.leadingCut) {\r\n\t\t\titem.leadingCut = 0;\r\n\t\t}\r\n\r\n\t\tvar leadingSpaces;\r\n\t\tif (!preserveLeadingSpaces && (leadingSpaces = item.text.match(LEADING))) {\r\n\t\t\titem.leadingCut += widthOfString(leadingSpaces[0], font, fontSize, characterSpacing, fontFeatures);\r\n\t\t}\r\n\r\n\t\tvar trailingSpaces;\r\n\t\tif (!preserveTrailingSpaces && (trailingSpaces = item.text.match(TRAILING))) {\r\n\t\t\titem.trailingCut = widthOfString(trailingSpaces[0], font, fontSize, characterSpacing, fontFeatures);\r\n\t\t} else {\r\n\t\t\titem.trailingCut = 0;\r\n\t\t}\r\n\r\n\t\titem.alignment = getStyleProperty(item, styleContextStack, 'alignment', 'left');\r\n\t\titem.font = font;\r\n\t\titem.fontSize = fontSize;\r\n\t\titem.fontFeatures = fontFeatures;\r\n\t\titem.characterSpacing = characterSpacing;\r\n\t\titem.color = color;\r\n\t\titem.decoration = decoration;\r\n\t\titem.decorationColor = decorationColor;\r\n\t\titem.decorationStyle = decorationStyle;\r\n\t\titem.background = background;\r\n\t\titem.link = link;\r\n\t\titem.linkToPage = linkToPage;\r\n\t\titem.linkToDestination = linkToDestination;\r\n\t\titem.noWrap = noWrap;\r\n\t\titem.opacity = opacity;\r\n\t\titem.sup = sup;\r\n\t\titem.sub = sub;\r\n\t});\r\n\r\n\treturn normalized;\r\n}\r\n\r\nfunction widthOfString(text, font, fontSize, characterSpacing, fontFeatures) {\r\n\treturn font.widthOfString(text, fontSize, fontFeatures) + ((characterSpacing || 0) * (text.length - 1));\r\n}\r\n\r\nmodule.exports = TextTools;\r\n"]},"metadata":{},"sourceType":"script"}