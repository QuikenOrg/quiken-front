{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/proyecto_sapo/client/src/Pages/CreateGuidePagina.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './ContactoPagina.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateGuidePagina = () => {\n  _s();\n\n  //General Values\n  let isValid = false; //currentUser (HARDCODED)\n\n  const [currentUser, setcurrentUser] = useState(\"julianallenderussek@gmail.com\"); //Origin Section\n\n  const [fullNameSender, setFullNameSender] = useState('');\n  const [emailSender, setEmailSender] = useState('');\n  const [phoneNumberSender, setPhoneNumberSender] = useState('');\n  const [streetAndNumberSender, setStreetandNumberSender] = useState('');\n  const [referenciasSender, setReferenciasSender] = useState('');\n  const [colonySender, setColonySender] = useState('');\n  const [postalCodeSender, setPostalCodeSender] = useState('');\n  const [citySender, setCitySender] = useState('');\n  const [mexicoStateSender, setMexicoStateSender] = useState(''); // Origin Error\n\n  const [fullNameSenderError, setFullNameSenderError] = useState('');\n  const [emailSenderError, setEmailSenderError] = useState('');\n  const [phoneNumberSenderError, setPhoneNumberSenderError] = useState('');\n  const [streetAndNumberSenderError, setStreetandNumberSenderError] = useState('');\n  const [colonySenderError, setColonySenderError] = useState('');\n  const [postalCodeSenderError, setPostalCodeSenderError] = useState('');\n  const [citySenderError, setCitySenderError] = useState(''); // To Section\n\n  const [fullNameReceiver, setFullNameReceiver] = useState('');\n  const [emailReceiver, setEmailReceiver] = useState('');\n  const [phoneNumberReceiver, setPhoneNumberReceiver] = useState('');\n  const [streetAndNumberReceiver, setStreetandNumberReceiver] = useState('');\n  const [referenciasReceiver, setReferenciasReceiver] = useState('');\n  const [colonyReceiver, setColonyReceiver] = useState('');\n  const [postalCodeReceiver, setPostalCodeReceiver] = useState('');\n  const [cityReceiver, setCityReceiver] = useState('');\n  const [mexicoStateReceiver, setMexicoStateReceiver] = useState(''); // To Errors\n\n  const [fullNameReceiverError, setFullNameReceiverError] = useState('');\n  const [emailReceiverError, setEmailReceiverError] = useState('');\n  const [phoneNumberReceiverError, setPhoneNumberReceiverError] = useState('');\n  const [streetAndNumberReceiverError, setStreetandNumberReceiverError] = useState('');\n  const [colonyReceiverError, setColonyReceiverError] = useState('');\n  const [postalCodeReceiverError, setPostalCodeReceiverError] = useState('');\n  const [cityReceiverError, setCityReceiverError] = useState(''); //   Validation Function\n\n  function hasLetters(phone) {\n    return /^\\d+$/.test(phone);\n  }\n\n  function emailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n\n  const formValidation = () => {\n    const fullNameSenderError = {};\n    const emailSenderError = {};\n    const phoneNumberSenderError = {};\n    const streetAndNumberSenderError = {};\n    const colonySenderError = {};\n    const postalCodeSenderError = {};\n    const citySenderError = {};\n    const fullNameReceiverError = {};\n    const emailReceiverError = {};\n    const phoneNumberReceiverError = {};\n    const streetAndNumberReceiverError = {};\n    const colonyReceiverError = {};\n    const postalCodeReceiverError = {};\n    const cityReceiverError = {};\n    let isValid = true; //Name Validation Origin\n\n    if (fullNameSender.trim().length < 5) {\n      fullNameSenderError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n      isValid = false;\n      console.log(\"name too short\");\n    }\n\n    if (fullNameSender.trim().match(/[0-9]/)) {\n      fullNameSenderError.FullNameLong = \"Favor de ingresar solamente letras\";\n      isValid = false;\n    }\n\n    setFullNameSenderError(fullNameSenderError); //REGEX Email Validation \n\n    if (emailIsValid(emailSender) == false) {\n      emailSenderError.EmailError = \"El email no es valido\";\n      isValid = false;\n      console.log(\"The email is not valid\");\n    }\n\n    setEmailSenderError(emailSenderError);\n\n    if (phoneNumberSender.trim().length < 10) {\n      phoneNumberSenderError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\";\n      console.log(\"el telefono es muy corto\");\n      isValid = false;\n    }\n\n    if (hasLetters(phoneNumberSender) == false) {\n      phoneNumberSenderError.PhoneTooShort = \"Favor de introducir solo numeros\";\n      isValid = false;\n    }\n\n    setPhoneNumberSenderError(phoneNumberSenderError);\n\n    if (streetAndNumberSender.trim().length < 5) {\n      streetAndNumberSenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setStreetandNumberSenderError(streetAndNumberSenderError);\n\n    if (colonySender.trim().length < 5) {\n      colonySenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setColonySenderError(colonySenderError);\n\n    if (postalCodeSender.trim().length < 4) {\n      postalCodeSenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    if (postalCodeSender.trim().length > 11) {\n      postalCodeSenderError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n      isValid = false;\n    }\n\n    setPostalCodeSenderError(postalCodeSenderError);\n\n    if (citySender.trim().length < 5) {\n      citySenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    setCitySenderError(citySenderError); // To Section Validation\n\n    if (fullNameReceiver.trim().length < 5) {\n      fullNameReceiverError.FullNameReceiverShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n      isValid = false;\n      console.log(\"name too short\");\n    }\n\n    if (fullNameReceiver.trim().match(/[0-9]/)) {\n      fullNameReceiverError.FullNameLong = \"Favor de ingresar solamente letras\";\n      isValid = false;\n    }\n\n    setFullNameReceiverError(fullNameReceiverError);\n\n    if (emailIsValid(emailReceiver) == false) {\n      emailReceiverError.EmailError = \"El email no es valido\";\n      isValid = false;\n      console.log(\"The email is not valid\");\n    }\n\n    setEmailReceiverError(emailReceiverError);\n\n    if (phoneNumberReceiver.trim().length < 10) {\n      phoneNumberReceiverError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\";\n      console.log(\"el telefono es muy corto\");\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  let handleWhereFormSubtmit = e => {\n    e.preventDefault();\n    const isValid = formValidation();\n\n    if (isValid) {\n      console.log(fullNameSender, emailSender, phoneNumberSender, streetAndNumberSender, referenciasSender, colonySender, postalCodeSender, citySender, mexicoStateSender);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-wrapper-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateGuidePagina, \"JfLtwfeC50xtVav7Q61WtKxPlKU=\");\n\n_c = CreateGuidePagina;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGuidePagina\");","map":{"version":3,"sources":["/home/julianallende/Desktop/proyecto_sapo/client/src/Pages/CreateGuidePagina.js"],"names":["React","CreateGuidePagina","isValid","currentUser","setcurrentUser","useState","fullNameSender","setFullNameSender","emailSender","setEmailSender","phoneNumberSender","setPhoneNumberSender","streetAndNumberSender","setStreetandNumberSender","referenciasSender","setReferenciasSender","colonySender","setColonySender","postalCodeSender","setPostalCodeSender","citySender","setCitySender","mexicoStateSender","setMexicoStateSender","fullNameSenderError","setFullNameSenderError","emailSenderError","setEmailSenderError","phoneNumberSenderError","setPhoneNumberSenderError","streetAndNumberSenderError","setStreetandNumberSenderError","colonySenderError","setColonySenderError","postalCodeSenderError","setPostalCodeSenderError","citySenderError","setCitySenderError","fullNameReceiver","setFullNameReceiver","emailReceiver","setEmailReceiver","phoneNumberReceiver","setPhoneNumberReceiver","streetAndNumberReceiver","setStreetandNumberReceiver","referenciasReceiver","setReferenciasReceiver","colonyReceiver","setColonyReceiver","postalCodeReceiver","setPostalCodeReceiver","cityReceiver","setCityReceiver","mexicoStateReceiver","setMexicoStateReceiver","fullNameReceiverError","setFullNameReceiverError","emailReceiverError","setEmailReceiverError","phoneNumberReceiverError","setPhoneNumberReceiverError","streetAndNumberReceiverError","setStreetandNumberReceiverError","colonyReceiverError","setColonyReceiverError","postalCodeReceiverError","setPostalCodeReceiverError","cityReceiverError","setCityReceiverError","hasLetters","phone","test","emailIsValid","email","formValidation","trim","length","FullNameSenderShort","console","log","match","FullNameLong","EmailError","PhoneTooShort","FieldToShort","FieldTooShort","FieldTooLong","FullNameReceiverShort","handleWhereFormSubtmit","e","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './ContactoPagina.scss'\n\nexport const CreateGuidePagina = () => {\n    \n  //General Values\n  let isValid = false;\n\n  //currentUser (HARDCODED)\n  const [currentUser, setcurrentUser] = useState(\"julianallenderussek@gmail.com\")\n\n    //Origin Section\n  const [fullNameSender, setFullNameSender] = useState('');\n  const [emailSender, setEmailSender] = useState('');\n  const [phoneNumberSender, setPhoneNumberSender] = useState('');\n  const [streetAndNumberSender, setStreetandNumberSender] = useState('');  \n  const [referenciasSender, setReferenciasSender] = useState('');\n  const [colonySender, setColonySender] = useState('');\n  const [postalCodeSender, setPostalCodeSender] = useState('');\n  const [citySender, setCitySender] = useState('');\n  const [mexicoStateSender, setMexicoStateSender] = useState('');\n    // Origin Error\n  const [fullNameSenderError, setFullNameSenderError] = useState('');\n  const [emailSenderError, setEmailSenderError] = useState('');\n  const [phoneNumberSenderError, setPhoneNumberSenderError] = useState('');\n  const [streetAndNumberSenderError, setStreetandNumberSenderError] = useState('');\n  const [colonySenderError, setColonySenderError] = useState('');\n  const [postalCodeSenderError, setPostalCodeSenderError] = useState('');\n  const [citySenderError, setCitySenderError] = useState('');\n\n    // To Section\n  const [fullNameReceiver, setFullNameReceiver] = useState('');\n  const [emailReceiver, setEmailReceiver] = useState('');\n  const [phoneNumberReceiver, setPhoneNumberReceiver] = useState('');\n  const [streetAndNumberReceiver, setStreetandNumberReceiver] = useState('');  \n  const [referenciasReceiver, setReferenciasReceiver] = useState('');\n  const [colonyReceiver, setColonyReceiver] = useState('');\n  const [postalCodeReceiver, setPostalCodeReceiver] = useState('');\n  const [cityReceiver, setCityReceiver] = useState('');\n  const [mexicoStateReceiver, setMexicoStateReceiver] = useState('');\n    // To Errors\n  const [fullNameReceiverError, setFullNameReceiverError] = useState('');\n  const [emailReceiverError, setEmailReceiverError] = useState('');\n  const [phoneNumberReceiverError, setPhoneNumberReceiverError] = useState('');\n  const [streetAndNumberReceiverError, setStreetandNumberReceiverError] = useState('');\n  const [colonyReceiverError, setColonyReceiverError] = useState('');\n  const [postalCodeReceiverError, setPostalCodeReceiverError] = useState('');\n  const [cityReceiverError, setCityReceiverError] = useState('');\n\n\n//   Validation Function\n  function hasLetters (phone) {\n    return /^\\d+$/.test(phone)\n  }\n\n  function emailIsValid (email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n  }\n\n  const formValidation = () => {\n    const fullNameSenderError = {};\n    const emailSenderError = {};\n    const phoneNumberSenderError = {};\n    const streetAndNumberSenderError = {};\n    const colonySenderError = {};\n    const postalCodeSenderError = {};\n    const citySenderError = {};\n    const fullNameReceiverError = {};\n    const emailReceiverError = {};\n    const phoneNumberReceiverError = {};\n    const streetAndNumberReceiverError = {};\n    const colonyReceiverError = {};\n    const postalCodeReceiverError = {};\n    const cityReceiverError = {};\n    \n\n    let isValid = true;\n    \n    //Name Validation Origin\n    if (fullNameSender.trim().length < 5) {\n      fullNameSenderError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n      isValid = false;\n      console.log(\"name too short\")\n    }\n\n    if (fullNameSender.trim().match(/[0-9]/)) {\n      fullNameSenderError.FullNameLong = \"Favor de ingresar solamente letras\";\n      isValid = false;\n    }\n\n    setFullNameSenderError(fullNameSenderError)\n\n    //REGEX Email Validation \n    \n    if (emailIsValid(emailSender) == false) {\n      emailSenderError.EmailError = \"El email no es valido\"\n      isValid = false;\n      console.log(\"The email is not valid\")\n    }\n\n    setEmailSenderError(emailSenderError)\n    \n    if (phoneNumberSender.trim().length < 10) {\n      phoneNumberSenderError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n      console.log(\"el telefono es muy corto\")\n      isValid = false;\n    }\n    \n\n    if (hasLetters(phoneNumberSender) == false) {\n      phoneNumberSenderError.PhoneTooShort = \"Favor de introducir solo numeros\"\n      isValid = false;\n    }\n\n    setPhoneNumberSenderError(phoneNumberSenderError)\n\n    if (streetAndNumberSender.trim().length < 5) {\n      streetAndNumberSenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setStreetandNumberSenderError(streetAndNumberSenderError)\n\n    if (colonySender.trim().length < 5) {\n      colonySenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setColonySenderError(colonySenderError)\n\n    if (postalCodeSender.trim().length < 4) {\n      postalCodeSenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    if (postalCodeSender.trim().length > 11) {\n      postalCodeSenderError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n      isValid = false;\n    }\n    \n    setPostalCodeSenderError(postalCodeSenderError)\n\n    if (citySender.trim().length < 5) {\n      citySenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    setCitySenderError(citySenderError)\n\n    // To Section Validation\n\n    if (fullNameReceiver.trim().length < 5) {\n        fullNameReceiverError.FullNameReceiverShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n        isValid = false;\n        console.log(\"name too short\")\n      }\n  \n    if (fullNameReceiver.trim().match(/[0-9]/)) {\n        fullNameReceiverError.FullNameLong = \"Favor de ingresar solamente letras\";\n        isValid = false;\n      }\n  \n    setFullNameReceiverError(fullNameReceiverError)\n    \n    if (emailIsValid(emailReceiver) == false) {\n        emailReceiverError.EmailError = \"El email no es valido\"\n        isValid = false;\n        console.log(\"The email is not valid\")\n      }\n  \n      setEmailReceiverError(emailReceiverError)\n      \n    if (phoneNumberReceiver.trim().length < 10) {\n        phoneNumberReceiverError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n        console.log(\"el telefono es muy corto\")\n        isValid = false;\n      }\n\n    return isValid\n  }\n\n  let handleWhereFormSubtmit = (e) => {\n    e.preventDefault();\n    const isValid = formValidation();\n    \n    if (isValid) {\n    \n    console.log(\n        fullNameSender,\n        emailSender,\n        phoneNumberSender,\n        streetAndNumberSender,\n        referenciasSender,\n        colonySender,\n        postalCodeSender,\n        citySender,\n        mexicoStateSender\n    );\n  }  \n}\n\n    return (\n        <div className=\"main-wrapper-page\">\n            \n\n            {/* ORIGIN SECTION */}\n            <div className=\"form-section-wrapper\">\n                       \n            </div>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}