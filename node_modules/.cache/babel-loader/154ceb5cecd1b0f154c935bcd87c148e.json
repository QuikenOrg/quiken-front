{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ContactForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  // process.env.SENDGRID_API_KEY\n  //Mail SendGrid Integration\n  const sendContactForm = () => {\n    const sgMail = require('@sendgrid/mail');\n\n    console.log(process.env.SENDGRID_API_KEY);\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n    const msg = {\n      to: 'julianallenderussek@gmail.com',\n      // Change to your recipient\n      from: 'hola@quiken.mx',\n      // Change to your verified sender\n      subject: 'Sending with SendGrid is Fun',\n      text: 'and easy to do anywhere, even with Node.js',\n      html: '<strong>and easy to do anywhere, even with Node.js</strong>'\n    };\n    sgMail.send(msg).then(() => {\n      console.log('Email sent');\n    }).catch(error => {\n      console.error(error);\n    });\n  }; //General Variables\n\n\n  let isValid = true; //Contact Form States\n\n  const [fullName, setFullName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); //Contact Form Error States\n\n  const [fullNameError, setFullNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [phoneNumberError, setPhoneNumberError] = useState('');\n  const [subjectError, setSubjectError] = useState('');\n  const [messageError, setMessageError] = useState(''); //Helper Functions for Validation\n\n  function hasLetters(lenght) {\n    return /^\\d+$/.test(lenght);\n  }\n\n  function emailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n\n  const contactFormValdiation = () => {\n    //Error Form Objects\n    const fullNameError = {};\n    const phoneNumberError = {};\n    const emailError = {};\n    const subjectError = {};\n    const messageError = {}; //Name Validation\n\n    if (fullName.trim().length < 5) {\n      fullNameError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n      isValid = false;\n      console.log(\"name too short\");\n    }\n\n    if (fullName.trim().match(/[0-9]/)) {\n      fullNameError.FullNameLong = \"Favor de ingresar solamente letras\";\n      isValid = false;\n    }\n\n    setFullNameError(fullNameError); //Email Validation\n\n    if (emailIsValid(email) == false) {\n      emailError.EmailError = \"El email no es valido\";\n      isValid = false;\n      console.log(\"The email is not valid\");\n    }\n\n    setEmailError(emailError); //Phone Validation\n\n    if (hasLetters(phoneNumber) == false) {\n      phoneNumberError.PhoneTooShort = \"Favor de introducir solo numeros\";\n      isValid = false;\n    }\n\n    if (phoneNumber.trim().length < 10) {\n      phoneNumberError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\";\n      console.log(\"el telefono es muy corto\");\n      isValid = false;\n    }\n\n    setPhoneNumberError(phoneNumberError); //Tema Validation\n\n    if (subject.trim().length < 5) {\n      subjectError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setSubjectError(subjectError);\n\n    if (message.trim().length < 5) {\n      messageError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setMessageError(messageError);\n  };\n\n  const handleContactForm = e => {\n    e.preventDefault();\n    console.log(isValid, 'bean burrito');\n    contactFormValdiation();\n    console.log(isValid, 'guacamole9!');\n\n    if (isValid) {\n      console.log('evrything is valid');\n      console.log(\"fullName: \", fullName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }, this), \"PhoneNumber: \", phoneNumber, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 47\n      }, this), \"email: \", email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 35\n      }, this), \"subject: \", subject, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 39\n      }, this), \"message: \", message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 39\n      }, this));\n      console.log('Trying email');\n      sendContactForm();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-wrapper-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-form\",\n          children: [\"Nombre Completo\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"contact-form-input\",\n          value: fullName,\n          onChange: event => setFullName(event.target.value),\n          type: \"text\",\n          placeholder: \"Juan Gonzalez\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), Object.keys(fullNameError).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: fullNameError[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-div-contact-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-div-small-input-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-form\",\n            children: [\"Tel\\xE9fono\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"contact-form-input-small\",\n            value: phoneNumber,\n            onChange: event => setPhoneNumber(event.target.value),\n            type: \"text\",\n            placeholder: \"81568180\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), Object.keys(phoneNumberError).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: phoneNumberError[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 28\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-div-small-input-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-form\",\n            children: [\"Correo\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"contact-form-input-small\",\n            value: email,\n            onChange: event => setEmail(event.target.value),\n            type: \"text\",\n            placeholder: \"juangonzalez@gmail.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), Object.keys(emailError).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: emailError[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 26\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-form\",\n          children: [\"Tema\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"contact-form-input\",\n          value: subject,\n          onChange: event => setSubject(event.target.value),\n          type: \"text\",\n          placeholder: \"Informaci\\xF3n sobre envios locales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), Object.keys(subjectError).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: subjectError[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-form\",\n          children: [\"Mensaje\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"contact-form-input-message\",\n          value: message,\n          onChange: event => setMessage(event.target.value),\n          type: \"text\",\n          placeholder: \"Informaci\\xF3n sobre envios locales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), Object.keys(messageError).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: messageError[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-paragraph-form\",\n        children: [\"Campos marcados con \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 63\n        }, this), \" son requeridos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-contact-form\",\n        onClick: event => handleContactForm(event),\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(ContactForm, \"PMb38yftL+NWn7CqJt9jj806jiI=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/ContactForm.js"],"names":["React","useState","ContactForm","sendContactForm","sgMail","require","console","log","process","env","SENDGRID_API_KEY","setApiKey","msg","to","from","subject","text","html","send","then","catch","error","isValid","fullName","setFullName","phoneNumber","setPhoneNumber","email","setEmail","setSubject","message","setMessage","fullNameError","setFullNameError","emailError","setEmailError","phoneNumberError","setPhoneNumberError","subjectError","setSubjectError","messageError","setMessageError","hasLetters","lenght","test","emailIsValid","contactFormValdiation","trim","length","FullNameSenderShort","match","FullNameLong","EmailError","PhoneTooShort","FieldToShort","handleContactForm","e","preventDefault","event","target","value","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './ContactForm.scss'\n\nconst ContactForm = () => {\n    \n\n  // process.env.SENDGRID_API_KEY\n    //Mail SendGrid Integration\n    const sendContactForm = () => {\n        const sgMail = require('@sendgrid/mail')\n        console.log(process.env.SENDGRID_API_KEY)\n        sgMail.setApiKey(process.env.SENDGRID_API_KEY)\n        const msg = {\n          to: 'julianallenderussek@gmail.com', // Change to your recipient\n          from: 'hola@quiken.mx', // Change to your verified sender\n          subject: 'Sending with SendGrid is Fun',\n          text: 'and easy to do anywhere, even with Node.js',\n          html: '<strong>and easy to do anywhere, even with Node.js</strong>',\n        }\n        sgMail\n          .send(msg)\n          .then(() => {\n            console.log('Email sent')\n          })\n          .catch((error) => {\n            console.error(error)\n          })\n      }\n\n\n    //General Variables\n    let isValid = true\n\n    //Contact Form States\n    const [fullName, setFullName] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [subject, setSubject] = useState(\"\");\n    const [message, setMessage] = useState(\"\")\n\n    //Contact Form Error States\n  const [fullNameError, setFullNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [phoneNumberError, setPhoneNumberError] = useState('');\n  const [subjectError, setSubjectError] = useState('');\n  const [messageError, setMessageError] = useState('');\n\n    //Helper Functions for Validation\n    function hasLetters (lenght) {\n        return /^\\d+$/.test(lenght)\n      }\n\n    function emailIsValid (email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    const contactFormValdiation= () => {\n        //Error Form Objects\n        const fullNameError = {};\n        const phoneNumberError = {};\n        const emailError = {};\n        const subjectError = {};\n        const messageError = {};\n        \n        //Name Validation\n    if (fullName.trim().length < 5) {\n        fullNameError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n        isValid = false;\n        console.log(\"name too short\")\n      }\n  \n      if (fullName.trim().match(/[0-9]/)) {\n        fullNameError.FullNameLong = \"Favor de ingresar solamente letras\";\n        isValid = false;\n      }\n      setFullNameError(fullNameError)\n\n      //Email Validation\n      if (emailIsValid(email) == false) {\n        emailError.EmailError = \"El email no es valido\"\n        isValid = false;\n        console.log(\"The email is not valid\")\n      }\n  \n      setEmailError(emailError)\n      \n      //Phone Validation\n      if (hasLetters(phoneNumber) == false) {\n        phoneNumberError.PhoneTooShort = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n      \n      if (phoneNumber.trim().length < 10) {\n        phoneNumberError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n        console.log(\"el telefono es muy corto\")\n        isValid = false;\n      }\n\n      setPhoneNumberError(phoneNumberError)\n\n      //Tema Validation\n      if (subject.trim().length < 5) {\n        subjectError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setSubjectError(subjectError)\n  \n      if (message.trim().length < 5) {\n        messageError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n      setMessageError(messageError)\n    }\n\n\n    const handleContactForm = (e) => {\n        e.preventDefault();\n        console.log(isValid, 'bean burrito')\n\n        contactFormValdiation()\n        \n        console.log(isValid, 'guacamole9!')\n\n        if (isValid) {\n            console.log('evrything is valid')\n            console.log(\n                \"fullName: \", fullName, <br/>,\n                \"PhoneNumber: \", phoneNumber, <br/>,\n                \"email: \", email, <br/>,\n                \"subject: \", subject, <br/>,\n                \"message: \", message, <br/>, \n            )\n            console.log('Trying email');\n            sendContactForm()  \n        }\n    }\n\n    return (\n     <>\n     <div className=\"main-wrapper-contact-form\">\n        {/* //Nombre Completo Field */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Nombre Completo<span> *</span></label>\n            <input\n            className=\"contact-form-input\" \n            value={fullName}\n            onChange={(event) => setFullName(event.target.value)} \n            type=\"text\"\n            placeholder=\"Juan Gonzalez\"\n            />\n            {Object.keys(fullNameError).map((key) => {\n                return <div className=\"error-message\">{fullNameError[key]}</div>}\n            )}\n        </div>\n        \n        <div className=\"row-div-contact-form\">\n            {/* //Telefono Field */}\n            <div className=\"row-div-small-input-placeholder\">\n                <label className=\"label-form\">Teléfono<span> *</span></label>\n                <input\n                className=\"contact-form-input-small\"  \n                value={phoneNumber}\n                onChange={(event) => setPhoneNumber(event.target.value)} \n                type=\"text\"\n                placeholder=\"81568180\"\n                />\n                {Object.keys(phoneNumberError).map((key) => {\n                    return <div className=\"error-message\">{phoneNumberError[key]}</div>}\n                )}\n            </div>\n            {/* //Email Field */}\n            <div className=\"row-div-small-input-placeholder\">\n              <label className=\"label-form\">Correo<span> *</span></label>\n              <input \n              className=\"contact-form-input-small\" \n              value={email}\n              onChange={(event) => setEmail(event.target.value)} \n              type=\"text\"\n              placeholder=\"juangonzalez@gmail.com\"\n              />\n              {Object.keys(emailError).map((key) => {\n                  return <div className=\"error-message\">{emailError[key]}</div>}\n              )}\n          </div>\n        </div>\n        \n        {/* //Subject Fields */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Tema<span> *</span></label>\n            <input \n            className=\"contact-form-input\" \n            value={subject}\n            onChange={(event) => setSubject(event.target.value)} \n            type=\"text\"\n            placeholder=\"Información sobre envios locales\"\n            />\n            {Object.keys(subjectError).map((key) => {\n                return <div className=\"error-message\">{subjectError[key]}</div>}\n            )}\n        </div>\n        {/* //Subject Mensaje Field        */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Mensaje<span> *</span></label>\n            <input \n            className=\"contact-form-input-message\" \n            value={message}\n            onChange={(event) => setMessage(event.target.value)} \n            type=\"text\"\n            placeholder=\"Información sobre envios locales\"\n            />\n            {Object.keys(messageError).map((key) => {\n                return <div className=\"error-message\">{messageError[key]}</div>}\n            )}\n        </div>\n        <p className=\"sub-paragraph-form\">Campos marcados con <span> *</span> son requeridos</p>\n        <button className=\"btn-contact-form\" onClick={(event) => handleContactForm(event)} >Enviar</button>\n    </div>\n     </>\n    )\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}