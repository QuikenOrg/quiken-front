{"ast":null,"code":"var _jsxFileName = \"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ForgotPasswordPagina.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ForgotPasswordPagina.scss\";\nimport Navbar from '../components/Navbar/Navbar';\nimport Footer from '../components/Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ForgotPasswordScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const forgotPasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    let formData = new FormData();\n    formData.append('email', email);\n\n    try {\n      const {\n        data\n      } = await axios.post(`${process.env.REACT_APP_API_URL}/user/password/recovery`, formData, config);\n      setSuccess(data.data);\n      console.log(data);\n\n      if (data.status == \"SUCCESS\") {\n        alert(\"Un email de recuperacion ha sido envidado a tu correo.\");\n      }\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgotpassword-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: forgotPasswordHandler,\n        className: \"forgotpassword-screen__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"forgotpassword-screen__title\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"success-message\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forgotpassword-screen__subtext\",\n            children: [\"Please enter the email address you register your account with.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 77\n            }, this), \" We will send you reset password confirmation to this email\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"email\",\n            required: true,\n            id: \"email\",\n            placeholder: \"Email address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"btn\",\n          type: \"submit\",\n          className: \"btn-contact-form\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ForgotPasswordScreen, \"jt8wDO0WWWJEdjNQ+pLKnj1nTEc=\");\n\n_c = ForgotPasswordScreen;\nexport default ForgotPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordScreen\");","map":{"version":3,"names":["useState","axios","Navbar","Footer","ForgotPasswordScreen","email","setEmail","error","setError","success","setSuccess","forgotPasswordHandler","e","preventDefault","config","header","formData","FormData","append","data","post","process","env","REACT_APP_API_URL","console","log","status","alert","response","target","value"],"sources":["/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ForgotPasswordPagina.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ForgotPasswordPagina.scss\";\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\n\n\nconst ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const forgotPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n\n    let formData = new FormData();\n    formData.append('email', email); \n\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API_URL}/user/password/recovery`,\n        formData,\n        config\n      );\n\n      setSuccess(data.data);\n      console.log(data)\n      if (data.status == \"SUCCESS\") {\n\n      alert(\"Un email de recuperacion ha sido envidado a tu correo.\")\n      }\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail(\"\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar/>\n      <div className=\"forgotpassword-screen\">\n        <form\n          onSubmit={forgotPasswordHandler}\n          className=\"forgotpassword-screen__form\"\n        >\n          <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\n          {error && <span className=\"error-message\">{error}</span>}\n          {success && <span className=\"success-message\">{success}</span>}\n          <div className=\"form-group\">\n            <p className=\"forgotpassword-screen__subtext\">\n              Please enter the email address you register your account with.<br/> We\n              will send you reset password confirmation to this email\n            </p>\n            <label className=\"form-label\" htmlFor=\"email\">Email:</label>\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              required\n              id=\"email\"\n              placeholder=\"Email address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button id=\"btn\" type=\"submit\" className=\"btn-contact-form\">\n            Send\n          </button>\n        </form>\n      </div>\n      <Footer/>\n    </>\n  );\n};\n\nexport default ForgotPasswordScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}