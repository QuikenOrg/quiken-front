{"ast":null,"code":"'use strict';\n\nvar isString = require('./helpers').isString;\n\nvar isArray = require('./helpers').isArray;\n\nvar isUndefined = require('./helpers').isUndefined;\n\nvar isNull = require('./helpers').isNull;\n/**\r\n * Creates an instance of StyleContextStack used for style inheritance and style overrides\r\n *\r\n * @constructor\r\n * @this {StyleContextStack}\r\n * @param {Object} named styles dictionary\r\n * @param {Object} optional default style definition\r\n */\n\n\nfunction StyleContextStack(styleDictionary, defaultStyle) {\n  this.defaultStyle = defaultStyle || {};\n  this.styleDictionary = styleDictionary;\n  this.styleOverrides = [];\n}\n/**\r\n * Creates cloned version of current stack\r\n * @return {StyleContextStack} current stack snapshot\r\n */\n\n\nStyleContextStack.prototype.clone = function () {\n  var stack = new StyleContextStack(this.styleDictionary, this.defaultStyle);\n  this.styleOverrides.forEach(function (item) {\n    stack.styleOverrides.push(item);\n  });\n  return stack;\n};\n/**\r\n * Pushes style-name or style-overrides-object onto the stack for future evaluation\r\n *\r\n * @param {String|Object} styleNameOrOverride style-name (referring to styleDictionary) or\r\n *                                            a new dictionary defining overriding properties\r\n */\n\n\nStyleContextStack.prototype.push = function (styleNameOrOverride) {\n  this.styleOverrides.push(styleNameOrOverride);\n};\n/**\r\n * Removes last style-name or style-overrides-object from the stack\r\n *\r\n * @param {Number} howMany - optional number of elements to be popped (if not specified,\r\n *                           one element will be removed from the stack)\r\n */\n\n\nStyleContextStack.prototype.pop = function (howMany) {\n  howMany = howMany || 1;\n\n  while (howMany-- > 0) {\n    this.styleOverrides.pop();\n  }\n};\n/**\r\n * Creates a set of named styles or/and a style-overrides-object based on the item,\r\n * pushes those elements onto the stack for future evaluation and returns the number\r\n * of elements pushed, so they can be easily poped then.\r\n *\r\n * @param {Object} item - an object with optional style property and/or style overrides\r\n * @return the number of items pushed onto the stack\r\n */\n\n\nStyleContextStack.prototype.autopush = function (item) {\n  if (isString(item)) {\n    return 0;\n  }\n\n  var styleNames = [];\n\n  if (item.style) {\n    if (isArray(item.style)) {\n      styleNames = item.style;\n    } else {\n      styleNames = [item.style];\n    }\n  }\n\n  for (var i = 0, l = styleNames.length; i < l; i++) {\n    this.push(styleNames[i]);\n  }\n\n  var styleProperties = ['font', 'fontSize', 'fontFeatures', 'bold', 'italics', 'alignment', 'color', 'columnGap', 'fillColor', 'fillOpacity', 'decoration', 'decorationStyle', 'decorationColor', 'background', 'lineHeight', 'characterSpacing', 'noWrap', 'markerColor', 'leadingIndent', 'sup', 'sub' //'tableCellPadding'\n  // 'cellBorder',\n  // 'headerCellBorder',\n  // 'oddRowCellBorder',\n  // 'evenRowCellBorder',\n  // 'tableBorder'\n  ];\n  var styleOverrideObject = {};\n  var pushStyleOverrideObject = false;\n  styleProperties.forEach(function (key) {\n    if (!isUndefined(item[key]) && !isNull(item[key])) {\n      styleOverrideObject[key] = item[key];\n      pushStyleOverrideObject = true;\n    }\n  });\n\n  if (pushStyleOverrideObject) {\n    this.push(styleOverrideObject);\n  }\n\n  return styleNames.length + (pushStyleOverrideObject ? 1 : 0);\n};\n/**\r\n * Automatically pushes elements onto the stack, using autopush based on item,\r\n * executes callback and then pops elements back. Returns value returned by callback\r\n *\r\n * @param  {Object}   item - an object with optional style property and/or style overrides\r\n * @param  {Function} function to be called between autopush and pop\r\n * @return {Object} value returned by callback\r\n */\n\n\nStyleContextStack.prototype.auto = function (item, callback) {\n  var pushedItems = this.autopush(item);\n  var result = callback();\n\n  if (pushedItems > 0) {\n    this.pop(pushedItems);\n  }\n\n  return result;\n};\n/**\r\n * Evaluates stack and returns value of a named property\r\n *\r\n * @param {String} property - property name\r\n * @return property value or null if not found\r\n */\n\n\nStyleContextStack.prototype.getProperty = function (property) {\n  if (this.styleOverrides) {\n    for (var i = this.styleOverrides.length - 1; i >= 0; i--) {\n      var item = this.styleOverrides[i];\n\n      if (isString(item)) {\n        // named-style-override\n        var style = this.styleDictionary[item];\n\n        if (style && !isUndefined(style[property]) && !isNull(style[property])) {\n          return style[property];\n        }\n      } else if (!isUndefined(item[property]) && !isNull(item[property])) {\n        // style-overrides-object\n        return item[property];\n      }\n    }\n  }\n\n  return this.defaultStyle && this.defaultStyle[property];\n};\n\nmodule.exports = StyleContextStack;","map":{"version":3,"sources":["/home/julianallende/Desktop/proyecto_sapo/client/node_modules/pdfmake/src/styleContextStack.js"],"names":["isString","require","isArray","isUndefined","isNull","StyleContextStack","styleDictionary","defaultStyle","styleOverrides","prototype","clone","stack","forEach","item","push","styleNameOrOverride","pop","howMany","autopush","styleNames","style","i","l","length","styleProperties","styleOverrideObject","pushStyleOverrideObject","key","auto","callback","pushedItems","result","getProperty","property","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar isString = require('./helpers').isString;\r\nvar isArray = require('./helpers').isArray;\r\nvar isUndefined = require('./helpers').isUndefined;\r\nvar isNull = require('./helpers').isNull;\r\n\r\n/**\r\n * Creates an instance of StyleContextStack used for style inheritance and style overrides\r\n *\r\n * @constructor\r\n * @this {StyleContextStack}\r\n * @param {Object} named styles dictionary\r\n * @param {Object} optional default style definition\r\n */\r\nfunction StyleContextStack(styleDictionary, defaultStyle) {\r\n\tthis.defaultStyle = defaultStyle || {};\r\n\tthis.styleDictionary = styleDictionary;\r\n\tthis.styleOverrides = [];\r\n}\r\n\r\n/**\r\n * Creates cloned version of current stack\r\n * @return {StyleContextStack} current stack snapshot\r\n */\r\nStyleContextStack.prototype.clone = function () {\r\n\tvar stack = new StyleContextStack(this.styleDictionary, this.defaultStyle);\r\n\r\n\tthis.styleOverrides.forEach(function (item) {\r\n\t\tstack.styleOverrides.push(item);\r\n\t});\r\n\r\n\treturn stack;\r\n};\r\n\r\n/**\r\n * Pushes style-name or style-overrides-object onto the stack for future evaluation\r\n *\r\n * @param {String|Object} styleNameOrOverride style-name (referring to styleDictionary) or\r\n *                                            a new dictionary defining overriding properties\r\n */\r\nStyleContextStack.prototype.push = function (styleNameOrOverride) {\r\n\tthis.styleOverrides.push(styleNameOrOverride);\r\n};\r\n\r\n/**\r\n * Removes last style-name or style-overrides-object from the stack\r\n *\r\n * @param {Number} howMany - optional number of elements to be popped (if not specified,\r\n *                           one element will be removed from the stack)\r\n */\r\nStyleContextStack.prototype.pop = function (howMany) {\r\n\thowMany = howMany || 1;\r\n\r\n\twhile (howMany-- > 0) {\r\n\t\tthis.styleOverrides.pop();\r\n\t}\r\n};\r\n\r\n/**\r\n * Creates a set of named styles or/and a style-overrides-object based on the item,\r\n * pushes those elements onto the stack for future evaluation and returns the number\r\n * of elements pushed, so they can be easily poped then.\r\n *\r\n * @param {Object} item - an object with optional style property and/or style overrides\r\n * @return the number of items pushed onto the stack\r\n */\r\nStyleContextStack.prototype.autopush = function (item) {\r\n\tif (isString(item)) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tvar styleNames = [];\r\n\r\n\tif (item.style) {\r\n\t\tif (isArray(item.style)) {\r\n\t\t\tstyleNames = item.style;\r\n\t\t} else {\r\n\t\t\tstyleNames = [item.style];\r\n\t\t}\r\n\t}\r\n\r\n\tfor (var i = 0, l = styleNames.length; i < l; i++) {\r\n\t\tthis.push(styleNames[i]);\r\n\t}\r\n\r\n\tvar styleProperties = [\r\n\t\t'font',\r\n\t\t'fontSize',\r\n\t\t'fontFeatures',\r\n\t\t'bold',\r\n\t\t'italics',\r\n\t\t'alignment',\r\n\t\t'color',\r\n\t\t'columnGap',\r\n\t\t'fillColor',\r\n\t\t'fillOpacity',\r\n\t\t'decoration',\r\n\t\t'decorationStyle',\r\n\t\t'decorationColor',\r\n\t\t'background',\r\n\t\t'lineHeight',\r\n\t\t'characterSpacing',\r\n\t\t'noWrap',\r\n\t\t'markerColor',\r\n\t\t'leadingIndent',\r\n\t\t'sup',\r\n\t\t'sub'\r\n\t\t//'tableCellPadding'\r\n\t\t// 'cellBorder',\r\n\t\t// 'headerCellBorder',\r\n\t\t// 'oddRowCellBorder',\r\n\t\t// 'evenRowCellBorder',\r\n\t\t// 'tableBorder'\r\n\t];\r\n\tvar styleOverrideObject = {};\r\n\tvar pushStyleOverrideObject = false;\r\n\r\n\tstyleProperties.forEach(function (key) {\r\n\t\tif (!isUndefined(item[key]) && !isNull(item[key])) {\r\n\t\t\tstyleOverrideObject[key] = item[key];\r\n\t\t\tpushStyleOverrideObject = true;\r\n\t\t}\r\n\t});\r\n\r\n\tif (pushStyleOverrideObject) {\r\n\t\tthis.push(styleOverrideObject);\r\n\t}\r\n\r\n\treturn styleNames.length + (pushStyleOverrideObject ? 1 : 0);\r\n};\r\n\r\n/**\r\n * Automatically pushes elements onto the stack, using autopush based on item,\r\n * executes callback and then pops elements back. Returns value returned by callback\r\n *\r\n * @param  {Object}   item - an object with optional style property and/or style overrides\r\n * @param  {Function} function to be called between autopush and pop\r\n * @return {Object} value returned by callback\r\n */\r\nStyleContextStack.prototype.auto = function (item, callback) {\r\n\tvar pushedItems = this.autopush(item);\r\n\tvar result = callback();\r\n\r\n\tif (pushedItems > 0) {\r\n\t\tthis.pop(pushedItems);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * Evaluates stack and returns value of a named property\r\n *\r\n * @param {String} property - property name\r\n * @return property value or null if not found\r\n */\r\nStyleContextStack.prototype.getProperty = function (property) {\r\n\tif (this.styleOverrides) {\r\n\t\tfor (var i = this.styleOverrides.length - 1; i >= 0; i--) {\r\n\t\t\tvar item = this.styleOverrides[i];\r\n\r\n\t\t\tif (isString(item)) {\r\n\t\t\t\t// named-style-override\r\n\t\t\t\tvar style = this.styleDictionary[item];\r\n\t\t\t\tif (style && !isUndefined(style[property]) && !isNull(style[property])) {\r\n\t\t\t\t\treturn style[property];\r\n\t\t\t\t}\r\n\t\t\t} else if (!isUndefined(item[property]) && !isNull(item[property])) {\r\n\t\t\t\t// style-overrides-object\r\n\t\t\t\treturn item[property];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn this.defaultStyle && this.defaultStyle[property];\r\n};\r\n\r\nmodule.exports = StyleContextStack;\r\n"]},"metadata":{},"sourceType":"script"}