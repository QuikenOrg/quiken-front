{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ContactForm.scss';\nimport 'emailjs-com';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  // process.env.SENDGRID_API_KEY\n  //Mail SendGrid Integration\n  const sendContactForm = e => {\n    console.log(e.target);\n    emailjs.sendForm('service_e3d4d9r', \"template_d0ah23h\", e.target, 'user_gecQCH4IIGePzUzhzJ47E').then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  }; //General Variables\n\n\n  let isValid = true; //Contact Form States\n\n  const [fullName, setFullName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); //Contact Form Error States\n\n  const [fullNameError, setFullNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [phoneNumberError, setPhoneNumberError] = useState('');\n  const [subjectError, setSubjectError] = useState('');\n  const [messageError, setMessageError] = useState(''); //Helper Functions for Validation\n\n  function hasLetters(lenght) {\n    return /^\\d+$/.test(lenght);\n  }\n\n  function emailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n\n  const contactFormValdiation = () => {\n    //Error Form Objects\n    const fullNameError = {};\n    const phoneNumberError = {};\n    const emailError = {};\n    const subjectError = {};\n    const messageError = {}; //Name Validation\n\n    if (fullName.trim().length < 5) {\n      fullNameError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n      isValid = false;\n      console.log(\"name too short\");\n    }\n\n    if (fullName.trim().match(/[0-9]/)) {\n      fullNameError.FullNameLong = \"Favor de ingresar solamente letras\";\n      isValid = false;\n    }\n\n    setFullNameError(fullNameError); //Email Validation\n\n    if (emailIsValid(email) == false) {\n      emailError.EmailError = \"El email no es valido\";\n      isValid = false;\n      console.log(\"The email is not valid\");\n    }\n\n    setEmailError(emailError); //Phone Validation\n\n    if (hasLetters(phoneNumber) == false) {\n      phoneNumberError.PhoneTooShort = \"Favor de introducir solo numeros\";\n      isValid = false;\n    }\n\n    if (phoneNumber.trim().length < 10) {\n      phoneNumberError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\";\n      console.log(\"el telefono es muy corto\");\n      isValid = false;\n    }\n\n    setPhoneNumberError(phoneNumberError); //Tema Validation\n\n    if (subject.trim().length < 5) {\n      subjectError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setSubjectError(subjectError);\n\n    if (message.trim().length < 5) {\n      messageError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setMessageError(messageError);\n  };\n\n  const handleContactForm = e => {\n    e.preventDefault();\n    console.log(isValid, 'bean burrito');\n    contactFormValdiation();\n    console.log(isValid, 'guacamole9!');\n\n    if (isValid) {\n      console.log('evrything is valid');\n      console.log(\"fullName: \", fullName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }, this), \"PhoneNumber: \", phoneNumber, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 47\n      }, this), \"email: \", email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 35\n      }, this), \"subject: \", subject, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 39\n      }, this), \"message: \", message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 39\n      }, this));\n      console.log('Trying email');\n      sendContactForm(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"main-wrapper-contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-form\",\n          children: [\"Nombre Completo\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"contact-form-input\",\n          value: fullName,\n          onChange: event => setFullName(event.target.value),\n          type: \"text\",\n          placeholder: \"Juan Gonzalez\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), Object.keys(fullNameError).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: fullNameError[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-div-contact-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-div-small-input-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-form\",\n            children: [\"Tel\\xE9fono\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"contact-form-input-small\",\n            value: phoneNumber,\n            onChange: event => setPhoneNumber(event.target.value),\n            type: \"text\",\n            placeholder: \"81568180\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), Object.keys(phoneNumberError).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: phoneNumberError[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 28\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-div-small-input-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-form\",\n            children: [\"Correo\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"contact-form-input-small\",\n            value: email,\n            onChange: event => setEmail(event.target.value),\n            type: \"text\",\n            placeholder: \"juangonzalez@gmail.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), Object.keys(emailError).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: emailError[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 26\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-form\",\n          children: [\"Tema\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"contact-form-input\",\n          value: subject,\n          onChange: event => setSubject(event.target.value),\n          type: \"text\",\n          placeholder: \"Informaci\\xF3n sobre envios locales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), Object.keys(subjectError).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: subjectError[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-form\",\n          children: [\"Mensaje\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"contact-form-input-message\",\n          value: message,\n          onChange: event => setMessage(event.target.value),\n          type: \"text\",\n          placeholder: \"Informaci\\xF3n sobre envios locales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), Object.keys(messageError).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: messageError[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-paragraph-form\",\n        children: [\"Campos marcados con \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 63\n        }, this), \" son requeridos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-contact-form\",\n        onClick: event => handleContactForm(event),\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(ContactForm, \"PMb38yftL+NWn7CqJt9jj806jiI=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/ContactForm.js"],"names":["React","useState","emailjs","ContactForm","sendContactForm","e","console","log","target","sendForm","then","result","text","error","isValid","fullName","setFullName","phoneNumber","setPhoneNumber","email","setEmail","subject","setSubject","message","setMessage","fullNameError","setFullNameError","emailError","setEmailError","phoneNumberError","setPhoneNumberError","subjectError","setSubjectError","messageError","setMessageError","hasLetters","lenght","test","emailIsValid","contactFormValdiation","trim","length","FullNameSenderShort","match","FullNameLong","EmailError","PhoneTooShort","FieldToShort","handleContactForm","preventDefault","event","value","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './ContactForm.scss';\nimport 'emailjs-com';\nimport emailjs from 'emailjs-com';\n\nconst ContactForm = () => {\n    \n\n  // process.env.SENDGRID_API_KEY\n    //Mail SendGrid Integration\n    const sendContactForm = (e) => {\n      console.log(e.target)\n        emailjs.sendForm('service_e3d4d9r', \"template_d0ah23h\", e.target, 'user_gecQCH4IIGePzUzhzJ47E' )\n        .then((result) => {\n          console.log(result.text);\n      }, (error) => {\n          console.log(error.text);\n      });\n      }\n\n\n    //General Variables\n    let isValid = true\n\n    //Contact Form States\n    const [fullName, setFullName] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [subject, setSubject] = useState(\"\");\n    const [message, setMessage] = useState(\"\")\n\n    //Contact Form Error States\n  const [fullNameError, setFullNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [phoneNumberError, setPhoneNumberError] = useState('');\n  const [subjectError, setSubjectError] = useState('');\n  const [messageError, setMessageError] = useState('');\n\n    //Helper Functions for Validation\n    function hasLetters (lenght) {\n        return /^\\d+$/.test(lenght)\n      }\n\n    function emailIsValid (email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    const contactFormValdiation= () => {\n        //Error Form Objects\n        const fullNameError = {};\n        const phoneNumberError = {};\n        const emailError = {};\n        const subjectError = {};\n        const messageError = {};\n        \n        //Name Validation\n    if (fullName.trim().length < 5) {\n        fullNameError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n        isValid = false;\n        console.log(\"name too short\")\n      }\n  \n      if (fullName.trim().match(/[0-9]/)) {\n        fullNameError.FullNameLong = \"Favor de ingresar solamente letras\";\n        isValid = false;\n      }\n      setFullNameError(fullNameError)\n\n      //Email Validation\n      if (emailIsValid(email) == false) {\n        emailError.EmailError = \"El email no es valido\"\n        isValid = false;\n        console.log(\"The email is not valid\")\n      }\n  \n      setEmailError(emailError)\n      \n      //Phone Validation\n      if (hasLetters(phoneNumber) == false) {\n        phoneNumberError.PhoneTooShort = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n      \n      if (phoneNumber.trim().length < 10) {\n        phoneNumberError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n        console.log(\"el telefono es muy corto\")\n        isValid = false;\n      }\n\n      setPhoneNumberError(phoneNumberError)\n\n      //Tema Validation\n      if (subject.trim().length < 5) {\n        subjectError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setSubjectError(subjectError)\n  \n      if (message.trim().length < 5) {\n        messageError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n      setMessageError(messageError)\n    }\n\n\n    const handleContactForm = (e) => {\n        e.preventDefault();\n        console.log(isValid, 'bean burrito')\n\n        contactFormValdiation()\n        \n        console.log(isValid, 'guacamole9!')\n\n        if (isValid) {\n            console.log('evrything is valid')\n            console.log(\n                \"fullName: \", fullName, <br/>,\n                \"PhoneNumber: \", phoneNumber, <br/>,\n                \"email: \", email, <br/>,\n                \"subject: \", subject, <br/>,\n                \"message: \", message, <br/>, \n            )\n            console.log('Trying email');\n            sendContactForm(e)  \n        }\n    }\n\n    return (\n     <>\n     <form className=\"main-wrapper-contact-form\">\n        {/* //Nombre Completo Field */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Nombre Completo<span> *</span></label>\n            <input\n            className=\"contact-form-input\" \n            value={fullName}\n            onChange={(event) => setFullName(event.target.value)} \n            type=\"text\"\n            placeholder=\"Juan Gonzalez\"\n            />\n            {Object.keys(fullNameError).map((key) => {\n                return <div className=\"error-message\">{fullNameError[key]}</div>}\n            )}\n        </div>\n        \n        <div className=\"row-div-contact-form\">\n            {/* //Telefono Field */}\n            <div className=\"row-div-small-input-placeholder\">\n                <label className=\"label-form\">Teléfono<span> *</span></label>\n                <input\n                className=\"contact-form-input-small\"  \n                value={phoneNumber}\n                onChange={(event) => setPhoneNumber(event.target.value)} \n                type=\"text\"\n                placeholder=\"81568180\"\n                />\n                {Object.keys(phoneNumberError).map((key) => {\n                    return <div className=\"error-message\">{phoneNumberError[key]}</div>}\n                )}\n            </div>\n            {/* //Email Field */}\n            <div className=\"row-div-small-input-placeholder\">\n              <label className=\"label-form\">Correo<span> *</span></label>\n              <input \n              className=\"contact-form-input-small\" \n              value={email}\n              onChange={(event) => setEmail(event.target.value)} \n              type=\"text\"\n              placeholder=\"juangonzalez@gmail.com\"\n              />\n              {Object.keys(emailError).map((key) => {\n                  return <div className=\"error-message\">{emailError[key]}</div>}\n              )}\n          </div>\n        </div>\n        \n        {/* //Subject Fields */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Tema<span> *</span></label>\n            <input \n            className=\"contact-form-input\" \n            value={subject}\n            onChange={(event) => setSubject(event.target.value)} \n            type=\"text\"\n            placeholder=\"Información sobre envios locales\"\n            />\n            {Object.keys(subjectError).map((key) => {\n                return <div className=\"error-message\">{subjectError[key]}</div>}\n            )}\n        </div>\n        {/* //Subject Mensaje Field        */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Mensaje<span> *</span></label>\n            <input \n            className=\"contact-form-input-message\" \n            value={message}\n            onChange={(event) => setMessage(event.target.value)} \n            type=\"text\"\n            placeholder=\"Información sobre envios locales\"\n            />\n            {Object.keys(messageError).map((key) => {\n                return <div className=\"error-message\">{messageError[key]}</div>}\n            )}\n        </div>\n        <p className=\"sub-paragraph-form\">Campos marcados con <span> *</span> son requeridos</p>\n        <button className=\"btn-contact-form\" onClick={(event) => handleContactForm(event)} >Enviar</button>\n    </form>\n     </>\n    )\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}