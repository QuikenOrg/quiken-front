{"ast":null,"code":"var SVGtoPDF = function (doc, svg, x, y, options) {\n  \"use strict\";\n\n  const NamedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgrey: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    grey: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgrey: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0]\n  };\n  const DefaultColors = {\n    black: [NamedColors.black, 1],\n    white: [NamedColors.white, 1],\n    transparent: [NamedColors.black, 0]\n  };\n  const Entities = {\n    quot: 34,\n    amp: 38,\n    lt: 60,\n    gt: 62,\n    apos: 39,\n    OElig: 338,\n    oelig: 339,\n    Scaron: 352,\n    scaron: 353,\n    Yuml: 376,\n    circ: 710,\n    tilde: 732,\n    ensp: 8194,\n    emsp: 8195,\n    thinsp: 8201,\n    zwnj: 8204,\n    zwj: 8205,\n    lrm: 8206,\n    rlm: 8207,\n    ndash: 8211,\n    mdash: 8212,\n    lsquo: 8216,\n    rsquo: 8217,\n    sbquo: 8218,\n    ldquo: 8220,\n    rdquo: 8221,\n    bdquo: 8222,\n    dagger: 8224,\n    Dagger: 8225,\n    permil: 8240,\n    lsaquo: 8249,\n    rsaquo: 8250,\n    euro: 8364,\n    nbsp: 160,\n    iexcl: 161,\n    cent: 162,\n    pound: 163,\n    curren: 164,\n    yen: 165,\n    brvbar: 166,\n    sect: 167,\n    uml: 168,\n    copy: 169,\n    ordf: 170,\n    laquo: 171,\n    not: 172,\n    shy: 173,\n    reg: 174,\n    macr: 175,\n    deg: 176,\n    plusmn: 177,\n    sup2: 178,\n    sup3: 179,\n    acute: 180,\n    micro: 181,\n    para: 182,\n    middot: 183,\n    cedil: 184,\n    sup1: 185,\n    ordm: 186,\n    raquo: 187,\n    frac14: 188,\n    frac12: 189,\n    frac34: 190,\n    iquest: 191,\n    Agrave: 192,\n    Aacute: 193,\n    Acirc: 194,\n    Atilde: 195,\n    Auml: 196,\n    Aring: 197,\n    AElig: 198,\n    Ccedil: 199,\n    Egrave: 200,\n    Eacute: 201,\n    Ecirc: 202,\n    Euml: 203,\n    Igrave: 204,\n    Iacute: 205,\n    Icirc: 206,\n    Iuml: 207,\n    ETH: 208,\n    Ntilde: 209,\n    Ograve: 210,\n    Oacute: 211,\n    Ocirc: 212,\n    Otilde: 213,\n    Ouml: 214,\n    times: 215,\n    Oslash: 216,\n    Ugrave: 217,\n    Uacute: 218,\n    Ucirc: 219,\n    Uuml: 220,\n    Yacute: 221,\n    THORN: 222,\n    szlig: 223,\n    agrave: 224,\n    aacute: 225,\n    acirc: 226,\n    atilde: 227,\n    auml: 228,\n    aring: 229,\n    aelig: 230,\n    ccedil: 231,\n    egrave: 232,\n    eacute: 233,\n    ecirc: 234,\n    euml: 235,\n    igrave: 236,\n    iacute: 237,\n    icirc: 238,\n    iuml: 239,\n    eth: 240,\n    ntilde: 241,\n    ograve: 242,\n    oacute: 243,\n    ocirc: 244,\n    otilde: 245,\n    ouml: 246,\n    divide: 247,\n    oslash: 248,\n    ugrave: 249,\n    uacute: 250,\n    ucirc: 251,\n    uuml: 252,\n    yacute: 253,\n    thorn: 254,\n    yuml: 255,\n    fnof: 402,\n    Alpha: 913,\n    Beta: 914,\n    Gamma: 915,\n    Delta: 916,\n    Epsilon: 917,\n    Zeta: 918,\n    Eta: 919,\n    Theta: 920,\n    Iota: 921,\n    Kappa: 922,\n    Lambda: 923,\n    Mu: 924,\n    Nu: 925,\n    Xi: 926,\n    Omicron: 927,\n    Pi: 928,\n    Rho: 929,\n    Sigma: 931,\n    Tau: 932,\n    Upsilon: 933,\n    Phi: 934,\n    Chi: 935,\n    Psi: 936,\n    Omega: 937,\n    alpha: 945,\n    beta: 946,\n    gamma: 947,\n    delta: 948,\n    epsilon: 949,\n    zeta: 950,\n    eta: 951,\n    theta: 952,\n    iota: 953,\n    kappa: 954,\n    lambda: 955,\n    mu: 956,\n    nu: 957,\n    xi: 958,\n    omicron: 959,\n    pi: 960,\n    rho: 961,\n    sigmaf: 962,\n    sigma: 963,\n    tau: 964,\n    upsilon: 965,\n    phi: 966,\n    chi: 967,\n    psi: 968,\n    omega: 969,\n    thetasym: 977,\n    upsih: 978,\n    piv: 982,\n    bull: 8226,\n    hellip: 8230,\n    prime: 8242,\n    Prime: 8243,\n    oline: 8254,\n    frasl: 8260,\n    weierp: 8472,\n    image: 8465,\n    real: 8476,\n    trade: 8482,\n    alefsym: 8501,\n    larr: 8592,\n    uarr: 8593,\n    rarr: 8594,\n    darr: 8595,\n    harr: 8596,\n    crarr: 8629,\n    lArr: 8656,\n    uArr: 8657,\n    rArr: 8658,\n    dArr: 8659,\n    hArr: 8660,\n    forall: 8704,\n    part: 8706,\n    exist: 8707,\n    empty: 8709,\n    nabla: 8711,\n    isin: 8712,\n    notin: 8713,\n    ni: 8715,\n    prod: 8719,\n    sum: 8721,\n    minus: 8722,\n    lowast: 8727,\n    radic: 8730,\n    prop: 8733,\n    infin: 8734,\n    ang: 8736,\n    and: 8743,\n    or: 8744,\n    cap: 8745,\n    cup: 8746,\n    int: 8747,\n    there4: 8756,\n    sim: 8764,\n    cong: 8773,\n    asymp: 8776,\n    ne: 8800,\n    equiv: 8801,\n    le: 8804,\n    ge: 8805,\n    sub: 8834,\n    sup: 8835,\n    nsub: 8836,\n    sube: 8838,\n    supe: 8839,\n    oplus: 8853,\n    otimes: 8855,\n    perp: 8869,\n    sdot: 8901,\n    lceil: 8968,\n    rceil: 8969,\n    lfloor: 8970,\n    rfloor: 8971,\n    lang: 9001,\n    rang: 9002,\n    loz: 9674,\n    spades: 9824,\n    clubs: 9827,\n    hearts: 9829,\n    diams: 9830\n  };\n  const PathArguments = {\n    A: 7,\n    a: 7,\n    C: 6,\n    c: 6,\n    H: 1,\n    h: 1,\n    L: 2,\n    l: 2,\n    M: 2,\n    m: 2,\n    Q: 4,\n    q: 4,\n    S: 4,\n    s: 4,\n    T: 2,\n    t: 2,\n    V: 1,\n    v: 1,\n    Z: 0,\n    z: 0\n  };\n  const PathFlags = {\n    A3: true,\n    A4: true,\n    a3: true,\n    a4: true\n  };\n  const Properties = {\n    'color': {\n      inherit: true,\n      initial: undefined\n    },\n    'visibility': {\n      inherit: true,\n      initial: 'visible',\n      values: {\n        'hidden': 'hidden',\n        'collapse': 'hidden',\n        'visible': 'visible'\n      }\n    },\n    'fill': {\n      inherit: true,\n      initial: DefaultColors.black\n    },\n    'stroke': {\n      inherit: true,\n      initial: 'none'\n    },\n    'stop-color': {\n      inherit: false,\n      initial: DefaultColors.black\n    },\n    'fill-opacity': {\n      inherit: true,\n      initial: 1\n    },\n    'stroke-opacity': {\n      inherit: true,\n      initial: 1\n    },\n    'stop-opacity': {\n      inherit: false,\n      initial: 1\n    },\n    'fill-rule': {\n      inherit: true,\n      initial: 'nonzero',\n      values: {\n        'nonzero': 'nonzero',\n        'evenodd': 'evenodd'\n      }\n    },\n    'clip-rule': {\n      inherit: true,\n      initial: 'nonzero',\n      values: {\n        'nonzero': 'nonzero',\n        'evenodd': 'evenodd'\n      }\n    },\n    'stroke-width': {\n      inherit: true,\n      initial: 1\n    },\n    'stroke-dasharray': {\n      inherit: true,\n      initial: []\n    },\n    'stroke-dashoffset': {\n      inherit: true,\n      initial: 0\n    },\n    'stroke-miterlimit': {\n      inherit: true,\n      initial: 4\n    },\n    'stroke-linejoin': {\n      inherit: true,\n      initial: 'miter',\n      values: {\n        'miter': 'miter',\n        'round': 'round',\n        'bevel': 'bevel'\n      }\n    },\n    'stroke-linecap': {\n      inherit: true,\n      initial: 'butt',\n      values: {\n        'butt': 'butt',\n        'round': 'round',\n        'square': 'square'\n      }\n    },\n    'font-size': {\n      inherit: true,\n      initial: 16,\n      values: {\n        'xx-small': 9,\n        'x-small': 10,\n        'small': 13,\n        'medium': 16,\n        'large': 18,\n        'x-large': 24,\n        'xx-large': 32\n      }\n    },\n    'font-family': {\n      inherit: true,\n      initial: 'sans-serif'\n    },\n    'font-weight': {\n      inherit: true,\n      initial: 'normal',\n      values: {\n        '600': 'bold',\n        '700': 'bold',\n        '800': 'bold',\n        '900': 'bold',\n        'bold': 'bold',\n        'bolder': 'bold',\n        '500': 'normal',\n        '400': 'normal',\n        '300': 'normal',\n        '200': 'normal',\n        '100': 'normal',\n        'normal': 'normal',\n        'lighter': 'normal'\n      }\n    },\n    'font-style': {\n      inherit: true,\n      initial: 'normal',\n      values: {\n        'italic': 'italic',\n        'oblique': 'italic',\n        'normal': 'normal'\n      }\n    },\n    'text-anchor': {\n      inherit: true,\n      initial: 'start',\n      values: {\n        'start': 'start',\n        'middle': 'middle',\n        'end': 'end'\n      }\n    },\n    'direction': {\n      inherit: true,\n      initial: 'ltr',\n      values: {\n        'ltr': 'ltr',\n        'rtl': 'rtl'\n      }\n    },\n    'dominant-baseline': {\n      inherit: true,\n      initial: 'baseline',\n      values: {\n        'auto': 'baseline',\n        'baseline': 'baseline',\n        'before-edge': 'before-edge',\n        'text-before-edge': 'before-edge',\n        'middle': 'middle',\n        'central': 'central',\n        'after-edge': 'after-edge',\n        'text-after-edge': 'after-edge',\n        'ideographic': 'ideographic',\n        'alphabetic': 'alphabetic',\n        'hanging': 'hanging',\n        'mathematical': 'mathematical'\n      }\n    },\n    'alignment-baseline': {\n      inherit: false,\n      initial: undefined,\n      values: {\n        'auto': 'baseline',\n        'baseline': 'baseline',\n        'before-edge': 'before-edge',\n        'text-before-edge': 'before-edge',\n        'middle': 'middle',\n        'central': 'central',\n        'after-edge': 'after-edge',\n        'text-after-edge': 'after-edge',\n        'ideographic': 'ideographic',\n        'alphabetic': 'alphabetic',\n        'hanging': 'hanging',\n        'mathematical': 'mathematical'\n      }\n    },\n    'baseline-shift': {\n      inherit: true,\n      initial: 'baseline',\n      values: {\n        'baseline': 'baseline',\n        'sub': 'sub',\n        'super': 'super'\n      }\n    },\n    'word-spacing': {\n      inherit: true,\n      initial: 0,\n      values: {\n        normal: 0\n      }\n    },\n    'letter-spacing': {\n      inherit: true,\n      initial: 0,\n      values: {\n        normal: 0\n      }\n    },\n    'text-decoration': {\n      inherit: false,\n      initial: 'none',\n      values: {\n        'none': 'none',\n        'underline': 'underline',\n        'overline': 'overline',\n        'line-through': 'line-through'\n      }\n    },\n    'xml:space': {\n      inherit: true,\n      initial: 'default',\n      css: 'white-space',\n      values: {\n        'preserve': 'preserve',\n        'default': 'default',\n        'pre': 'preserve',\n        'pre-line': 'preserve',\n        'pre-wrap': 'preserve',\n        'nowrap': 'default'\n      }\n    },\n    'marker-start': {\n      inherit: true,\n      initial: 'none'\n    },\n    'marker-mid': {\n      inherit: true,\n      initial: 'none'\n    },\n    'marker-end': {\n      inherit: true,\n      initial: 'none'\n    },\n    'opacity': {\n      inherit: false,\n      initial: 1\n    },\n    'transform': {\n      inherit: false,\n      initial: [1, 0, 0, 1, 0, 0]\n    },\n    'display': {\n      inherit: false,\n      initial: 'inline',\n      values: {\n        'none': 'none',\n        'inline': 'inline',\n        'block': 'inline'\n      }\n    },\n    'clip-path': {\n      inherit: false,\n      initial: 'none'\n    },\n    'mask': {\n      inherit: false,\n      initial: 'none'\n    },\n    'overflow': {\n      inherit: false,\n      initial: 'hidden',\n      values: {\n        'hidden': 'hidden',\n        'scroll': 'hidden',\n        'visible': 'visible'\n      }\n    }\n  };\n\n  function docBeginGroup(bbox) {\n    let group = new function PDFGroup() {}();\n    group.name = 'G' + (doc._groupCount = (doc._groupCount || 0) + 1);\n    group.resources = doc.ref();\n    group.xobj = doc.ref({\n      Type: 'XObject',\n      Subtype: 'Form',\n      FormType: 1,\n      BBox: bbox,\n      Group: {\n        S: 'Transparency',\n        CS: 'DeviceRGB',\n        I: true,\n        K: false\n      },\n      Resources: group.resources\n    });\n    group.xobj.write('');\n    group.savedMatrix = doc._ctm;\n    group.savedPage = doc.page;\n    groupStack.push(group);\n    doc._ctm = [1, 0, 0, 1, 0, 0];\n    doc.page = {\n      width: doc.page.width,\n      height: doc.page.height,\n      write: function (data) {\n        group.xobj.write(data);\n      },\n      fonts: {},\n      xobjects: {},\n      ext_gstates: {},\n      patterns: {}\n    };\n    return group;\n  }\n\n  function docEndGroup(group) {\n    if (group !== groupStack.pop()) {\n      throw 'Group not matching';\n    }\n\n    if (Object.keys(doc.page.fonts).length) {\n      group.resources.data.Font = doc.page.fonts;\n    }\n\n    if (Object.keys(doc.page.xobjects).length) {\n      group.resources.data.XObject = doc.page.xobjects;\n    }\n\n    if (Object.keys(doc.page.ext_gstates).length) {\n      group.resources.data.ExtGState = doc.page.ext_gstates;\n    }\n\n    if (Object.keys(doc.page.patterns).length) {\n      group.resources.data.Pattern = doc.page.patterns;\n    }\n\n    group.resources.end();\n    group.xobj.end();\n    doc._ctm = group.savedMatrix;\n    doc.page = group.savedPage;\n  }\n\n  function docInsertGroup(group) {\n    doc.page.xobjects[group.name] = group.xobj;\n    doc.addContent('/' + group.name + ' Do');\n  }\n\n  function docApplyMask(group, clip) {\n    let name = 'M' + (doc._maskCount = (doc._maskCount || 0) + 1);\n    let gstate = doc.ref({\n      Type: 'ExtGState',\n      CA: 1,\n      ca: 1,\n      BM: 'Normal',\n      SMask: {\n        S: 'Luminosity',\n        G: group.xobj,\n        BC: clip ? [0, 0, 0] : [1, 1, 1]\n      }\n    });\n    gstate.end();\n    doc.page.ext_gstates[name] = gstate;\n    doc.addContent('/' + name + ' gs');\n  }\n\n  function docCreatePattern(group, dx, dy, matrix) {\n    let pattern = new function PDFPattern() {}();\n    pattern.group = group;\n    pattern.dx = dx;\n    pattern.dy = dy;\n    pattern.matrix = matrix || [1, 0, 0, 1, 0, 0];\n    return pattern;\n  }\n\n  function docUsePattern(pattern, stroke) {\n    let name = 'P' + (doc._patternCount = (doc._patternCount || 0) + 1);\n    let ref = doc.ref({\n      Type: 'Pattern',\n      PatternType: 1,\n      PaintType: 1,\n      TilingType: 2,\n      BBox: [0, 0, pattern.dx, pattern.dy],\n      XStep: pattern.dx,\n      YStep: pattern.dy,\n      Matrix: multiplyMatrix(doc._ctm, pattern.matrix),\n      Resources: {\n        ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\n        XObject: function () {\n          let temp = {};\n          temp[pattern.group.name] = pattern.group.xobj;\n          return temp;\n        }()\n      }\n    });\n    ref.write('/' + pattern.group.name + ' Do');\n    ref.end();\n    doc.page.patterns[name] = ref;\n\n    if (stroke) {\n      doc.addContent('/Pattern CS');\n      doc.addContent('/' + name + ' SCN');\n    } else {\n      doc.addContent('/Pattern cs');\n      doc.addContent('/' + name + ' scn');\n    }\n  }\n\n  function docBeginText(font, size) {\n    if (!doc.page.fonts[font.id]) {\n      doc.page.fonts[font.id] = font.ref();\n    }\n\n    doc.addContent('BT').addContent('/' + font.id + ' ' + size + ' Tf');\n  }\n\n  function docSetTextMatrix(a, b, c, d, e, f) {\n    doc.addContent(validateNumber(a) + ' ' + validateNumber(b) + ' ' + validateNumber(-c) + ' ' + validateNumber(-d) + ' ' + validateNumber(e) + ' ' + validateNumber(f) + ' Tm');\n  }\n\n  function docSetTextMode(fill, stroke) {\n    let mode = fill && stroke ? 2 : stroke ? 1 : fill ? 0 : 3;\n    doc.addContent(mode + ' Tr');\n  }\n\n  function docWriteGlyph(glyph) {\n    doc.addContent('<' + glyph + '> Tj');\n  }\n\n  function docEndText() {\n    doc.addContent('ET');\n  }\n\n  function docFillColor(color) {\n    if (color[0].constructor.name === 'PDFPattern') {\n      doc.fillOpacity(color[1]);\n      docUsePattern(color[0], false);\n    } else {\n      doc.fillColor(color[0], color[1]);\n    }\n  }\n\n  function docStrokeColor(color) {\n    if (color[0].constructor.name === 'PDFPattern') {\n      doc.strokeOpacity(color[1]);\n      docUsePattern(color[0], true);\n    } else {\n      doc.strokeColor(color[0], color[1]);\n    }\n  }\n\n  function docInsertLink(x, y, w, h, url) {\n    let ref = doc.ref({\n      Type: 'Annot',\n      Subtype: 'Link',\n      Rect: [x, y, w, h],\n      Border: [0, 0, 0],\n      A: {\n        S: 'URI',\n        URI: new String(url)\n      }\n    });\n    ref.end();\n    links.push(ref);\n  }\n\n  function parseXml(xml) {\n    let SvgNode = function (tag, type, value, error) {\n      this.error = error;\n      this.nodeName = tag;\n      this.nodeValue = value;\n      this.nodeType = type;\n      this.attributes = Object.create(null);\n      this.childNodes = [];\n      this.parentNode = null;\n      this.id = '';\n      this.textContent = '';\n      this.classList = [];\n    };\n\n    SvgNode.prototype.getAttribute = function (attr) {\n      return this.attributes[attr] != null ? this.attributes[attr] : null;\n    };\n\n    SvgNode.prototype.getElementById = function (id) {\n      let result = null;\n\n      (function recursive(node) {\n        if (result) {\n          return;\n        }\n\n        if (node.nodeType === 1) {\n          if (node.id === id) {\n            result = node;\n          }\n\n          for (let i = 0; i < node.childNodes.length; i++) {\n            recursive(node.childNodes[i]);\n          }\n        }\n      })(this);\n\n      return result;\n    };\n\n    SvgNode.prototype.getElementsByTagName = function (tag) {\n      let result = [];\n\n      (function recursive(node) {\n        if (node.nodeType === 1) {\n          if (node.nodeName === tag) {\n            result.push(node);\n          }\n\n          for (let i = 0; i < node.childNodes.length; i++) {\n            recursive(node.childNodes[i]);\n          }\n        }\n      })(this);\n\n      return result;\n    };\n\n    let parser = new StringParser(xml.trim()),\n        result,\n        child,\n        error = false;\n\n    let recursive = function () {\n      let temp, child;\n\n      if (temp = parser.match(/^<([\\w:.-]+)\\s*/, true)) {\n        // Opening tag\n        let node = new SvgNode(temp[1], 1, null, error);\n\n        while (temp = parser.match(/^([\\w:.-]+)(?:\\s*=\\s*\"([^\"]*)\"|\\s*=\\s*'([^']*)')?\\s*/, true)) {\n          // Attribute\n          let attr = temp[1],\n              value = decodeEntities(temp[2] || temp[3] || '');\n\n          if (!node.attributes[attr]) {\n            node.attributes[attr] = value;\n\n            if (attr === 'id') {\n              node.id = value;\n            }\n\n            if (attr === 'class') {\n              node.classList = value.split(' ');\n            }\n          } else {\n            warningCallback('parseXml: duplicate attribute \"' + attr + '\"');\n            error = true;\n          }\n        }\n\n        if (parser.match(/^>/)) {\n          // End of opening tag\n          while (child = recursive()) {\n            node.childNodes.push(child);\n            child.parentNode = node;\n            node.textContent += child.nodeType === 3 || child.nodeType === 4 ? child.nodeValue : child.textContent;\n          }\n\n          if (temp = parser.match(/^<\\/([\\w:.-]+)\\s*>/, true)) {\n            // Closing tag\n            if (temp[1] === node.nodeName) {\n              return node;\n            } else {\n              warningCallback('parseXml: tag not matching, opening \"' + node.nodeName + '\" & closing \"' + temp[1] + '\"');\n              error = true;\n              return node;\n            }\n          } else {\n            warningCallback('parseXml: tag not matching, opening \"' + node.nodeName + '\" & not closing');\n            error = true;\n            return node;\n          }\n        } else if (parser.match(/^\\/>/)) {\n          // Self-closing tag\n          return node;\n        } else {\n          warningCallback('parseXml: tag could not be parsed \"' + node.nodeName + '\"');\n          error = true;\n        }\n      } else if (temp = parser.match(/^<!--[\\s\\S]*?-->/)) {\n        // Comment\n        return new SvgNode(null, 8, temp, error);\n      } else if (temp = parser.match(/^<\\?[\\s\\S]*?\\?>/)) {\n        // Processing instructions\n        return new SvgNode(null, 7, temp, error);\n      } else if (temp = parser.match(/^<!DOCTYPE\\s*([\\s\\S]*?)>/)) {\n        // Doctype\n        return new SvgNode(null, 10, temp, error);\n      } else if (temp = parser.match(/^<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>/, true)) {\n        // Cdata node\n        return new SvgNode('#cdata-section', 4, temp[1], error);\n      } else if (temp = parser.match(/^([^<]+)/, true)) {\n        // Text node\n        return new SvgNode('#text', 3, decodeEntities(temp[1]), error);\n      }\n    };\n\n    while (child = recursive()) {\n      if (child.nodeType === 1 && !result) {\n        result = child;\n      } else if (child.nodeType === 1 || child.nodeType === 3 && child.nodeValue.trim() !== '') {\n        warningCallback('parseXml: data after document end has been discarded');\n      }\n    }\n\n    if (parser.matchAll()) {\n      warningCallback('parseXml: parsing error');\n    }\n\n    return result;\n  }\n\n  ;\n\n  function decodeEntities(str) {\n    return str.replace(/&(?:#([0-9]+)|#[xX]([0-9A-Fa-f]+)|([0-9A-Za-z]+));/g, function (mt, m0, m1, m2) {\n      if (m0) {\n        return String.fromCharCode(parseInt(m0, 10));\n      } else if (m1) {\n        return String.fromCharCode(parseInt(m1, 16));\n      } else if (m2 && Entities[m2]) {\n        return String.fromCharCode(Entities[m2]);\n      } else {\n        return mt;\n      }\n    });\n  }\n\n  function parseColor(raw) {\n    let temp, result;\n    raw = (raw || '').trim();\n\n    if (temp = NamedColors[raw]) {\n      result = [temp.slice(), 1];\n    } else if (temp = raw.match(/^rgba\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9.]+)\\s*\\)$/i)) {\n      temp[1] = parseInt(temp[1]);\n      temp[2] = parseInt(temp[2]);\n      temp[3] = parseInt(temp[3]);\n      temp[4] = parseFloat(temp[4]);\n\n      if (temp[1] < 256 && temp[2] < 256 && temp[3] < 256 && temp[4] <= 1) {\n        result = [temp.slice(1, 4), temp[4]];\n      }\n    } else if (temp = raw.match(/^rgb\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*\\)$/i)) {\n      temp[1] = parseInt(temp[1]);\n      temp[2] = parseInt(temp[2]);\n      temp[3] = parseInt(temp[3]);\n\n      if (temp[1] < 256 && temp[2] < 256 && temp[3] < 256) {\n        result = [temp.slice(1, 4), 1];\n      }\n    } else if (temp = raw.match(/^rgb\\(\\s*([0-9.]+)%\\s*,\\s*([0-9.]+)%\\s*,\\s*([0-9.]+)%\\s*\\)$/i)) {\n      temp[1] = 2.55 * parseFloat(temp[1]);\n      temp[2] = 2.55 * parseFloat(temp[2]);\n      temp[3] = 2.55 * parseFloat(temp[3]);\n\n      if (temp[1] < 256 && temp[2] < 256 && temp[3] < 256) {\n        result = [temp.slice(1, 4), 1];\n      }\n    } else if (temp = raw.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i)) {\n      result = [[parseInt(temp[1], 16), parseInt(temp[2], 16), parseInt(temp[3], 16)], 1];\n    } else if (temp = raw.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i)) {\n      result = [[0x11 * parseInt(temp[1], 16), 0x11 * parseInt(temp[2], 16), 0x11 * parseInt(temp[3], 16)], 1];\n    }\n\n    return colorCallback ? colorCallback(result, raw) : result;\n  }\n\n  function opacityToColor(color, opacity, isMask) {\n    let newColor = color[0].slice(),\n        newOpacity = color[1] * opacity;\n\n    if (isMask) {\n      for (let i = 0; i < color.length; i++) {\n        newColor[i] *= newOpacity;\n      }\n\n      return [newColor, 1];\n    } else {\n      return [newColor, newOpacity];\n    }\n  }\n\n  function multiplyMatrix() {\n    function multiply(a, b) {\n      return [a[0] * b[0] + a[2] * b[1], a[1] * b[0] + a[3] * b[1], a[0] * b[2] + a[2] * b[3], a[1] * b[2] + a[3] * b[3], a[0] * b[4] + a[2] * b[5] + a[4], a[1] * b[4] + a[3] * b[5] + a[5]];\n    }\n\n    let result = arguments[0];\n\n    for (let i = 1; i < arguments.length; i++) {\n      result = multiply(result, arguments[i]);\n    }\n\n    return result;\n  }\n\n  function transformPoint(p, m) {\n    return [m[0] * p[0] + m[2] * p[1] + m[4], m[1] * p[0] + m[3] * p[1] + m[5]];\n  }\n\n  function getGlobalMatrix() {\n    let ctm = doc._ctm;\n\n    for (let i = groupStack.length - 1; i >= 0; i--) {\n      ctm = multiplyMatrix(groupStack[i].savedMatrix, ctm);\n    }\n\n    return ctm;\n  }\n\n  function getPageBBox() {\n    return new SvgShape().M(0, 0).L(doc.page.width, 0).L(doc.page.width, doc.page.height).L(0, doc.page.height).transform(inverseMatrix(getGlobalMatrix())).getBoundingBox();\n  }\n\n  function inverseMatrix(m) {\n    let dt = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / dt, -m[1] / dt, -m[2] / dt, m[0] / dt, (m[2] * m[5] - m[3] * m[4]) / dt, (m[1] * m[4] - m[0] * m[5]) / dt];\n  }\n\n  function validateMatrix(m) {\n    let m0 = validateNumber(m[0]),\n        m1 = validateNumber(m[1]),\n        m2 = validateNumber(m[2]),\n        m3 = validateNumber(m[3]),\n        m4 = validateNumber(m[4]),\n        m5 = validateNumber(m[5]);\n\n    if (isNotEqual(m0 * m3 - m1 * m2, 0)) {\n      return [m0, m1, m2, m3, m4, m5];\n    }\n  }\n\n  function solveEquation(curve) {\n    let a = curve[2] || 0,\n        b = curve[1] || 0,\n        c = curve[0] || 0;\n\n    if (isEqual(a, 0) && isEqual(b, 0)) {\n      return [];\n    } else if (isEqual(a, 0)) {\n      return [-c / b];\n    } else {\n      let d = b * b - 4 * a * c;\n\n      if (isNotEqual(d, 0) && d > 0) {\n        return [(-b + Math.sqrt(d)) / (2 * a), (-b - Math.sqrt(d)) / (2 * a)];\n      } else if (isEqual(d, 0)) {\n        return [-b / (2 * a)];\n      } else {\n        return [];\n      }\n    }\n  }\n\n  function getCurveValue(t, curve) {\n    return (curve[0] || 0) + (curve[1] || 0) * t + (curve[2] || 0) * t * t + (curve[3] || 0) * t * t * t;\n  }\n\n  function isEqual(number, ref) {\n    return Math.abs(number - ref) < 1e-10;\n  }\n\n  function isNotEqual(number, ref) {\n    return Math.abs(number - ref) >= 1e-10;\n  }\n\n  function validateNumber(n) {\n    return n > -1e21 && n < 1e21 ? Math.round(n * 1e6) / 1e6 : 0;\n  }\n\n  function isArrayLike(v) {\n    return typeof v === 'object' && v !== null && typeof v.length === 'number';\n  }\n\n  function parseTranform(v) {\n    let parser = new StringParser((v || '').trim()),\n        result = [1, 0, 0, 1, 0, 0],\n        temp;\n\n    while (temp = parser.match(/^([A-Za-z]+)\\s*[(]([^(]+)[)]/, true)) {\n      let func = temp[1],\n          nums = [],\n          parser2 = new StringParser(temp[2].trim()),\n          temp2;\n\n      while (temp2 = parser2.matchNumber()) {\n        nums.push(Number(temp2));\n        parser2.matchSeparator();\n      }\n\n      if (func === 'matrix' && nums.length === 6) {\n        result = multiplyMatrix(result, [nums[0], nums[1], nums[2], nums[3], nums[4], nums[5]]);\n      } else if (func === 'translate' && nums.length === 2) {\n        result = multiplyMatrix(result, [1, 0, 0, 1, nums[0], nums[1]]);\n      } else if (func === 'translate' && nums.length === 1) {\n        result = multiplyMatrix(result, [1, 0, 0, 1, nums[0], 0]);\n      } else if (func === 'scale' && nums.length === 2) {\n        result = multiplyMatrix(result, [nums[0], 0, 0, nums[1], 0, 0]);\n      } else if (func === 'scale' && nums.length === 1) {\n        result = multiplyMatrix(result, [nums[0], 0, 0, nums[0], 0, 0]);\n      } else if (func === 'rotate' && nums.length === 3) {\n        let a = nums[0] * Math.PI / 180;\n        result = multiplyMatrix(result, [1, 0, 0, 1, nums[1], nums[2]], [Math.cos(a), Math.sin(a), -Math.sin(a), Math.cos(a), 0, 0], [1, 0, 0, 1, -nums[1], -nums[2]]);\n      } else if (func === 'rotate' && nums.length === 1) {\n        let a = nums[0] * Math.PI / 180;\n        result = multiplyMatrix(result, [Math.cos(a), Math.sin(a), -Math.sin(a), Math.cos(a), 0, 0]);\n      } else if (func === 'skewX' && nums.length === 1) {\n        let a = nums[0] * Math.PI / 180;\n        result = multiplyMatrix(result, [1, 0, Math.tan(a), 1, 0, 0]);\n      } else if (func === 'skewY' && nums.length === 1) {\n        let a = nums[0] * Math.PI / 180;\n        result = multiplyMatrix(result, [1, Math.tan(a), 0, 1, 0, 0]);\n      } else {\n        return;\n      }\n\n      parser.matchSeparator();\n    }\n\n    if (parser.matchAll()) {\n      return;\n    }\n\n    return result;\n  }\n\n  function parseAspectRatio(aspectRatio, availWidth, availHeight, elemWidth, elemHeight, initAlign) {\n    let temp = (aspectRatio || '').trim().match(/^(none)$|^x(Min|Mid|Max)Y(Min|Mid|Max)(?:\\s+(meet|slice))?$/) || [],\n        ratioType = temp[1] || temp[4] || 'meet',\n        xAlign = temp[2] || 'Mid',\n        yAlign = temp[3] || 'Mid',\n        scaleX = availWidth / elemWidth,\n        scaleY = availHeight / elemHeight,\n        dx = {\n      'Min': 0,\n      'Mid': 0.5,\n      'Max': 1\n    }[xAlign] - (initAlign || 0),\n        dy = {\n      'Min': 0,\n      'Mid': 0.5,\n      'Max': 1\n    }[yAlign] - (initAlign || 0);\n\n    if (ratioType === 'slice') {\n      scaleY = scaleX = Math.max(scaleX, scaleY);\n    } else if (ratioType === 'meet') {\n      scaleY = scaleX = Math.min(scaleX, scaleY);\n    }\n\n    return [scaleX, 0, 0, scaleY, dx * (availWidth - elemWidth * scaleX), dy * (availHeight - elemHeight * scaleY)];\n  }\n\n  function parseStyleAttr(v) {\n    let result = Object.create(null);\n    v = (v || '').trim().split(/;/);\n\n    for (let i = 0; i < v.length; i++) {\n      let key = (v[i].split(':')[0] || '').trim(),\n          value = (v[i].split(':')[1] || '').trim();\n\n      if (key) {\n        result[key] = value;\n      }\n    }\n\n    if (result['marker']) {\n      if (!result['marker-start']) {\n        result['marker-start'] = result['marker'];\n      }\n\n      if (!result['marker-mid']) {\n        result['marker-mid'] = result['marker'];\n      }\n\n      if (!result['marker-end']) {\n        result['marker-end'] = result['marker'];\n      }\n    }\n\n    if (result['font']) {\n      let fontFamily = null,\n          fontSize = null,\n          fontStyle = \"normal\",\n          fontWeight = \"normal\",\n          fontVariant = \"normal\";\n      let parts = result['font'].split(/\\s+/);\n\n      for (let i = 0; i < parts.length; i++) {\n        switch (parts[i]) {\n          case \"normal\":\n            break;\n\n          case \"italic\":\n          case \"oblique\":\n            fontStyle = parts[i];\n            break;\n\n          case \"small-caps\":\n            fontVariant = parts[i];\n            break;\n\n          case \"bold\":\n          case \"bolder\":\n          case \"lighter\":\n          case \"100\":\n          case \"200\":\n          case \"300\":\n          case \"400\":\n          case \"500\":\n          case \"600\":\n          case \"700\":\n          case \"800\":\n          case \"900\":\n            fontWeight = parts[i];\n            break;\n\n          default:\n            if (!fontSize) {\n              fontSize = parts[i].split('/')[0];\n            } else {\n              if (!fontFamily) {\n                fontFamily = parts[i];\n              } else {\n                fontFamily += ' ' + parts[i];\n              }\n            }\n\n            break;\n        }\n      }\n\n      if (!result['font-style']) {\n        result['font-style'] = fontStyle;\n      }\n\n      if (!result['font-variant']) {\n        result['font-variant'] = fontVariant;\n      }\n\n      if (!result['font-weight']) {\n        result['font-weight'] = fontWeight;\n      }\n\n      if (!result['font-size']) {\n        result['font-size'] = fontSize;\n      }\n\n      if (!result['font-family']) {\n        result['font-family'] = fontFamily;\n      }\n    }\n\n    return result;\n  }\n\n  function parseSelector(v) {\n    let parts = v.split(/(?=[.#])/g),\n        ids = [],\n        classes = [],\n        tags = [],\n        temp;\n\n    for (let i = 0; i < parts.length; i++) {\n      if (temp = parts[i].match(/^[#]([_A-Za-z0-9-]+)$/)) {\n        ids.push(temp[1]);\n      } else if (temp = parts[i].match(/^[.]([_A-Za-z0-9-]+)$/)) {\n        classes.push(temp[1]);\n      } else if (temp = parts[i].match(/^([_A-Za-z0-9-]+)$/)) {\n        tags.push(temp[1]);\n      } else if (parts[i] !== '*') {\n        return;\n      }\n    }\n\n    return {\n      tags: tags,\n      ids: ids,\n      classes: classes,\n      specificity: ids.length * 10000 + classes.length * 100 + tags.length\n    };\n  }\n\n  function parseStyleSheet(v) {\n    let parser = new StringParser(v.trim()),\n        rules = [],\n        rule;\n\n    while (rule = parser.match(/^\\s*([^\\{\\}]*?)\\s*\\{([^\\{\\}]*?)\\}/, true)) {\n      let selectors = rule[1].split(/\\s*,\\s*/g),\n          css = parseStyleAttr(rule[2]);\n\n      for (let i = 0; i < selectors.length; i++) {\n        let selector = parseSelector(selectors[i]);\n\n        if (selector) {\n          rules.push({\n            selector: selector,\n            css: css\n          });\n        }\n      }\n    }\n\n    return rules;\n  }\n\n  function matchesSelector(elem, selector) {\n    if (elem.nodeType !== 1) {\n      return false;\n    }\n\n    for (let i = 0; i < selector.tags.length; i++) {\n      if (selector.tags[i] !== elem.nodeName) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < selector.ids.length; i++) {\n      if (selector.ids[i] !== elem.id) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < selector.classes.length; i++) {\n      if (elem.classList.indexOf(selector.classes[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getStyle(elem) {\n    let result = Object.create(null);\n    let specificities = Object.create(null);\n\n    for (let i = 0; i < styleRules.length; i++) {\n      let rule = styleRules[i];\n\n      if (matchesSelector(elem, rule.selector)) {\n        for (let key in rule.css) {\n          if (!(specificities[key] > rule.selector.specificity)) {\n            result[key] = rule.css[key];\n            specificities[key] = rule.selector.specificity;\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function combineArrays(array1, array2) {\n    return array1.concat(array2.slice(array1.length));\n  }\n\n  function getAscent(font, size) {\n    return Math.max(font.ascender, (font.bbox[3] || font.bbox.maxY) * (font.scale || 1)) * size / 1000;\n  }\n\n  function getDescent(font, size) {\n    return Math.min(font.descender, (font.bbox[1] || font.bbox.minY) * (font.scale || 1)) * size / 1000;\n  }\n\n  function getXHeight(font, size) {\n    return (font.xHeight || 0.5 * (font.ascender - font.descender)) * size / 1000;\n  }\n\n  function getBaseline(font, size, baseline, shift) {\n    let dy1, dy2;\n\n    switch (baseline) {\n      case 'middle':\n        dy1 = 0.5 * getXHeight(font, size);\n        break;\n\n      case 'central':\n        dy1 = 0.5 * (getDescent(font, size) + getAscent(font, size));\n        break;\n\n      case 'after-edge':\n      case 'text-after-edge':\n        dy1 = getDescent(font, size);\n        break;\n\n      case 'alphabetic':\n      case 'auto':\n      case 'baseline':\n        dy1 = 0;\n        break;\n\n      case 'mathematical':\n        dy1 = 0.5 * getAscent(font, size);\n        break;\n\n      case 'hanging':\n        dy1 = 0.8 * getAscent(font, size);\n        break;\n\n      case 'before-edge':\n      case 'text-before-edge':\n        dy1 = getAscent(font, size);\n        break;\n\n      default:\n        dy1 = 0;\n        break;\n    }\n\n    switch (shift) {\n      case 'baseline':\n        dy2 = 0;\n        break;\n\n      case 'super':\n        dy2 = 0.6 * size;\n        break;\n\n      case 'sub':\n        dy2 = -0.6 * size;\n        break;\n\n      default:\n        dy2 = shift;\n        break;\n    }\n\n    return dy1 - dy2;\n  }\n\n  function getTextPos(font, size, text) {\n    let encoded = font.encode('' + text),\n        hex = encoded[0],\n        pos = encoded[1],\n        data = [];\n\n    for (let i = 0; i < hex.length; i++) {\n      let unicode = font.unicode ? font.unicode[parseInt(hex[i], 16)] : [text.charCodeAt(i)];\n      data.push({\n        glyph: hex[i],\n        unicode: unicode,\n        width: pos[i].advanceWidth * size / 1000,\n        xOffset: pos[i].xOffset * size / 1000,\n        yOffset: pos[i].yOffset * size / 1000,\n        xAdvance: pos[i].xAdvance * size / 1000,\n        yAdvance: pos[i].yAdvance * size / 1000\n      });\n    }\n\n    return data;\n  }\n\n  function createSVGElement(obj, inherits) {\n    switch (obj.nodeName) {\n      case 'use':\n        return new SvgElemUse(obj, inherits);\n\n      case 'symbol':\n        return new SvgElemSymbol(obj, inherits);\n\n      case 'g':\n        return new SvgElemGroup(obj, inherits);\n\n      case 'a':\n        return new SvgElemLink(obj, inherits);\n\n      case 'svg':\n        return new SvgElemSvg(obj, inherits);\n\n      case 'image':\n        return new SVGElemImage(obj, inherits);\n\n      case 'rect':\n        return new SvgElemRect(obj, inherits);\n\n      case 'circle':\n        return new SvgElemCircle(obj, inherits);\n\n      case 'ellipse':\n        return new SvgElemEllipse(obj, inherits);\n\n      case 'line':\n        return new SvgElemLine(obj, inherits);\n\n      case 'polyline':\n        return new SvgElemPolyline(obj, inherits);\n\n      case 'polygon':\n        return new SvgElemPolygon(obj, inherits);\n\n      case 'path':\n        return new SvgElemPath(obj, inherits);\n\n      case 'text':\n        return new SvgElemText(obj, inherits);\n\n      case 'tspan':\n        return new SvgElemTspan(obj, inherits);\n\n      case 'textPath':\n        return new SvgElemTextPath(obj, inherits);\n\n      case '#text':\n      case '#cdata-section':\n        return new SvgElemTextNode(obj, inherits);\n\n      default:\n        return new SvgElem(obj, inherits);\n    }\n  }\n\n  var StringParser = function (str) {\n    this.match = function (exp, all) {\n      let temp = str.match(exp);\n\n      if (!temp || temp.index !== 0) {\n        return;\n      }\n\n      str = str.substring(temp[0].length);\n      return all ? temp : temp[0];\n    };\n\n    this.matchSeparator = function () {\n      return this.match(/^(?:\\s*,\\s*|\\s*|)/);\n    };\n\n    this.matchSpace = function () {\n      return this.match(/^(?:\\s*)/);\n    };\n\n    this.matchLengthUnit = function () {\n      return this.match(/^(?:px|pt|cm|mm|in|pc|em|ex|%|)/);\n    };\n\n    this.matchNumber = function () {\n      return this.match(/^(?:[-+]?(?:[0-9]+[.][0-9]+|[0-9]+[.]|[.][0-9]+|[0-9]+)(?:[eE][-+]?[0-9]+)?)/);\n    };\n\n    this.matchAll = function () {\n      return this.match(/^[\\s\\S]+/);\n    };\n  };\n\n  var BezierSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n    let divisions = 6 * precision;\n    let equationX = [p1x, -3 * p1x + 3 * c1x, 3 * p1x - 6 * c1x + 3 * c2x, -p1x + 3 * c1x - 3 * c2x + p2x];\n    let equationY = [p1y, -3 * p1y + 3 * c1y, 3 * p1y - 6 * c1y + 3 * c2y, -p1y + 3 * c1y - 3 * c2y + p2y];\n    let derivativeX = [-3 * p1x + 3 * c1x, 6 * p1x - 12 * c1x + 6 * c2x, -3 * p1x + 9 * c1x - 9 * c2x + 3 * p2x];\n    let derivativeY = [-3 * p1y + 3 * c1y, 6 * p1y - 12 * c1y + 6 * c2y, -3 * p1y + 9 * c1y - 9 * c2y + 3 * p2y];\n    let lengthMap = [0];\n\n    for (let i = 1; i <= divisions; i++) {\n      let t = (i - 0.5) / divisions;\n      let dx = getCurveValue(t, derivativeX) / divisions,\n          dy = getCurveValue(t, derivativeY) / divisions,\n          l = Math.sqrt(dx * dx + dy * dy);\n      lengthMap[i] = lengthMap[i - 1] + l;\n    }\n\n    this.totalLength = lengthMap[divisions];\n    this.startPoint = [p1x, p1y, isEqual(p1x, c1x) && isEqual(p1y, c1y) ? Math.atan2(c2y - c1y, c2x - c1x) : Math.atan2(c1y - p1y, c1x - p1x)];\n    this.endPoint = [p2x, p2y, isEqual(c2x, p2x) && isEqual(c2y, p2y) ? Math.atan2(c2y - c1y, c2x - c1x) : Math.atan2(p2y - c2y, p2x - c2x)];\n\n    this.getBoundingBox = function () {\n      let temp;\n      let minX = getCurveValue(0, equationX),\n          minY = getCurveValue(0, equationY),\n          maxX = getCurveValue(1, equationX),\n          maxY = getCurveValue(1, equationY);\n\n      if (minX > maxX) {\n        temp = maxX;\n        maxX = minX;\n        minX = temp;\n      }\n\n      if (minY > maxY) {\n        temp = maxY;\n        maxY = minY;\n        minY = temp;\n      }\n\n      let rootsX = solveEquation(derivativeX);\n\n      for (let i = 0; i < rootsX.length; i++) {\n        if (rootsX[i] >= 0 && rootsX[i] <= 1) {\n          let x = getCurveValue(rootsX[i], equationX);\n\n          if (x < minX) {\n            minX = x;\n          }\n\n          if (x > maxX) {\n            maxX = x;\n          }\n        }\n      }\n\n      let rootsY = solveEquation(derivativeY);\n\n      for (let i = 0; i < rootsY.length; i++) {\n        if (rootsY[i] >= 0 && rootsY[i] <= 1) {\n          let y = getCurveValue(rootsY[i], equationY);\n\n          if (y < minY) {\n            minY = y;\n          }\n\n          if (y > maxY) {\n            maxY = y;\n          }\n        }\n      }\n\n      return [minX, minY, maxX, maxY];\n    };\n\n    this.getPointAtLength = function (l) {\n      if (isEqual(l, 0)) {\n        return this.startPoint;\n      }\n\n      if (isEqual(l, this.totalLength)) {\n        return this.endPoint;\n      }\n\n      if (l < 0 || l > this.totalLength) {\n        return;\n      }\n\n      for (let i = 1; i <= divisions; i++) {\n        let l1 = lengthMap[i - 1],\n            l2 = lengthMap[i];\n\n        if (l1 <= l && l <= l2) {\n          let t = (i - (l2 - l) / (l2 - l1)) / divisions,\n              x = getCurveValue(t, equationX),\n              y = getCurveValue(t, equationY),\n              dx = getCurveValue(t, derivativeX),\n              dy = getCurveValue(t, derivativeY);\n          return [x, y, Math.atan2(dy, dx)];\n        }\n      }\n    };\n  };\n\n  var LineSegment = function (p1x, p1y, p2x, p2y) {\n    this.totalLength = Math.sqrt((p2x - p1x) * (p2x - p1x) + (p2y - p1y) * (p2y - p1y));\n    this.startPoint = [p1x, p1y, Math.atan2(p2y - p1y, p2x - p1x)];\n    this.endPoint = [p2x, p2y, Math.atan2(p2y - p1y, p2x - p1x)];\n\n    this.getBoundingBox = function () {\n      return [Math.min(this.startPoint[0], this.endPoint[0]), Math.min(this.startPoint[1], this.endPoint[1]), Math.max(this.startPoint[0], this.endPoint[0]), Math.max(this.startPoint[1], this.endPoint[1])];\n    };\n\n    this.getPointAtLength = function (l) {\n      if (l >= 0 && l <= this.totalLength) {\n        let r = l / this.totalLength || 0,\n            x = this.startPoint[0] + r * (this.endPoint[0] - this.startPoint[0]),\n            y = this.startPoint[1] + r * (this.endPoint[1] - this.startPoint[1]);\n        return [x, y, this.startPoint[2]];\n      }\n    };\n  };\n\n  var SvgShape = function () {\n    this.pathCommands = [];\n    this.pathSegments = [];\n    this.startPoint = null;\n    this.endPoint = null;\n    this.totalLength = 0;\n    let startX = 0,\n        startY = 0,\n        currX = 0,\n        currY = 0,\n        lastCom,\n        lastCtrlX,\n        lastCtrlY;\n\n    this.move = function (x, y) {\n      startX = currX = x;\n      startY = currY = y;\n      return null;\n    };\n\n    this.line = function (x, y) {\n      let segment = new LineSegment(currX, currY, x, y);\n      currX = x;\n      currY = y;\n      return segment;\n    };\n\n    this.curve = function (c1x, c1y, c2x, c2y, x, y) {\n      let segment = new BezierSegment(currX, currY, c1x, c1y, c2x, c2y, x, y);\n      currX = x;\n      currY = y;\n      return segment;\n    };\n\n    this.close = function () {\n      let segment = new LineSegment(currX, currY, startX, startY);\n      currX = startX;\n      currY = startY;\n      return segment;\n    };\n\n    this.addCommand = function (data) {\n      this.pathCommands.push(data);\n      let segment = this[data[0]].apply(this, data.slice(3));\n\n      if (segment) {\n        segment.hasStart = data[1];\n        segment.hasEnd = data[2];\n        this.startPoint = this.startPoint || segment.startPoint;\n        this.endPoint = segment.endPoint;\n        this.pathSegments.push(segment);\n        this.totalLength += segment.totalLength;\n      }\n    };\n\n    this.M = function (x, y) {\n      this.addCommand(['move', true, true, x, y]);\n      lastCom = 'M';\n      return this;\n    };\n\n    this.m = function (x, y) {\n      return this.M(currX + x, currY + y);\n    };\n\n    this.Z = this.z = function () {\n      this.addCommand(['close', true, true]);\n      lastCom = 'Z';\n      return this;\n    };\n\n    this.L = function (x, y) {\n      this.addCommand(['line', true, true, x, y]);\n      lastCom = 'L';\n      return this;\n    };\n\n    this.l = function (x, y) {\n      return this.L(currX + x, currY + y);\n    };\n\n    this.H = function (x) {\n      return this.L(x, currY);\n    };\n\n    this.h = function (x) {\n      return this.L(currX + x, currY);\n    };\n\n    this.V = function (y) {\n      return this.L(currX, y);\n    };\n\n    this.v = function (y) {\n      return this.L(currX, currY + y);\n    };\n\n    this.C = function (c1x, c1y, c2x, c2y, x, y) {\n      this.addCommand(['curve', true, true, c1x, c1y, c2x, c2y, x, y]);\n      lastCom = 'C';\n      lastCtrlX = c2x;\n      lastCtrlY = c2y;\n      return this;\n    };\n\n    this.c = function (c1x, c1y, c2x, c2y, x, y) {\n      return this.C(currX + c1x, currY + c1y, currX + c2x, currY + c2y, currX + x, currY + y);\n    };\n\n    this.S = function (c1x, c1y, x, y) {\n      return this.C(currX + (lastCom === 'C' ? currX - lastCtrlX : 0), currY + (lastCom === 'C' ? currY - lastCtrlY : 0), c1x, c1y, x, y);\n    };\n\n    this.s = function (c1x, c1y, x, y) {\n      return this.C(currX + (lastCom === 'C' ? currX - lastCtrlX : 0), currY + (lastCom === 'C' ? currY - lastCtrlY : 0), currX + c1x, currY + c1y, currX + x, currY + y);\n    };\n\n    this.Q = function (cx, cy, x, y) {\n      let c1x = currX + 2 / 3 * (cx - currX),\n          c1y = currY + 2 / 3 * (cy - currY),\n          c2x = x + 2 / 3 * (cx - x),\n          c2y = y + 2 / 3 * (cy - y);\n      this.addCommand(['curve', true, true, c1x, c1y, c2x, c2y, x, y]);\n      lastCom = 'Q';\n      lastCtrlX = cx;\n      lastCtrlY = cy;\n      return this;\n    };\n\n    this.q = function (c1x, c1y, x, y) {\n      return this.Q(currX + c1x, currY + c1y, currX + x, currY + y);\n    };\n\n    this.T = function (x, y) {\n      return this.Q(currX + (lastCom === 'Q' ? currX - lastCtrlX : 0), currY + (lastCom === 'Q' ? currY - lastCtrlY : 0), x, y);\n    };\n\n    this.t = function (x, y) {\n      return this.Q(currX + (lastCom === 'Q' ? currX - lastCtrlX : 0), currY + (lastCom === 'Q' ? currY - lastCtrlY : 0), currX + x, currY + y);\n    };\n\n    this.A = function (rx, ry, fi, fa, fs, x, y) {\n      if (isEqual(rx, 0) || isEqual(ry, 0)) {\n        this.addCommand(['line', true, true, x, y]);\n      } else {\n        fi = fi * (Math.PI / 180);\n        rx = Math.abs(rx);\n        ry = Math.abs(ry);\n        fa = 1 * !!fa;\n        fs = 1 * !!fs;\n        let x1 = Math.cos(fi) * (currX - x) / 2 + Math.sin(fi) * (currY - y) / 2,\n            y1 = Math.cos(fi) * (currY - y) / 2 - Math.sin(fi) * (currX - x) / 2,\n            lambda = x1 * x1 / (rx * rx) + y1 * y1 / (ry * ry);\n\n        if (lambda > 1) {\n          rx *= Math.sqrt(lambda);\n          ry *= Math.sqrt(lambda);\n        }\n\n        let r = Math.sqrt(Math.max(0, rx * rx * ry * ry - rx * rx * y1 * y1 - ry * ry * x1 * x1) / (rx * rx * y1 * y1 + ry * ry * x1 * x1)),\n            x2 = (fa === fs ? -1 : 1) * r * rx * y1 / ry,\n            y2 = (fa === fs ? 1 : -1) * r * ry * x1 / rx;\n        let cx = Math.cos(fi) * x2 - Math.sin(fi) * y2 + (currX + x) / 2,\n            cy = Math.sin(fi) * x2 + Math.cos(fi) * y2 + (currY + y) / 2,\n            th1 = Math.atan2((y1 - y2) / ry, (x1 - x2) / rx),\n            th2 = Math.atan2((-y1 - y2) / ry, (-x1 - x2) / rx);\n\n        if (fs === 0 && th2 - th1 > 0) {\n          th2 -= 2 * Math.PI;\n        } else if (fs === 1 && th2 - th1 < 0) {\n          th2 += 2 * Math.PI;\n        }\n\n        let segms = Math.ceil(Math.abs(th2 - th1) / (Math.PI / precision));\n\n        for (let i = 0; i < segms; i++) {\n          let th3 = th1 + i * (th2 - th1) / segms,\n              th4 = th1 + (i + 1) * (th2 - th1) / segms,\n              t = 4 / 3 * Math.tan((th4 - th3) / 4);\n          let c1x = cx + Math.cos(fi) * rx * (Math.cos(th3) - t * Math.sin(th3)) - Math.sin(fi) * ry * (Math.sin(th3) + t * Math.cos(th3)),\n              c1y = cy + Math.sin(fi) * rx * (Math.cos(th3) - t * Math.sin(th3)) + Math.cos(fi) * ry * (Math.sin(th3) + t * Math.cos(th3)),\n              c2x = cx + Math.cos(fi) * rx * (Math.cos(th4) + t * Math.sin(th4)) - Math.sin(fi) * ry * (Math.sin(th4) - t * Math.cos(th4)),\n              c2y = cy + Math.sin(fi) * rx * (Math.cos(th4) + t * Math.sin(th4)) + Math.cos(fi) * ry * (Math.sin(th4) - t * Math.cos(th4)),\n              endX = cx + Math.cos(fi) * rx * Math.cos(th4) - Math.sin(fi) * ry * Math.sin(th4),\n              endY = cy + Math.sin(fi) * rx * Math.cos(th4) + Math.cos(fi) * ry * Math.sin(th4);\n          this.addCommand(['curve', i === 0, i === segms - 1, c1x, c1y, c2x, c2y, endX, endY]);\n        }\n      }\n\n      lastCom = 'A';\n      return this;\n    };\n\n    this.a = function (rx, ry, fi, fa, fs, x, y) {\n      return this.A(rx, ry, fi, fa, fs, currX + x, currY + y);\n    };\n\n    this.path = function (d) {\n      let command,\n          value,\n          temp,\n          parser = new StringParser((d || '').trim());\n\n      while (command = parser.match(/^[astvzqmhlcASTVZQMHLC]/)) {\n        parser.matchSeparator();\n        let values = [];\n\n        while (value = PathFlags[command + values.length] ? parser.match(/^[01]/) : parser.matchNumber()) {\n          parser.matchSeparator();\n\n          if (values.length === PathArguments[command]) {\n            this[command].apply(this, values);\n            values = [];\n\n            if (command === 'M') {\n              command = 'L';\n            } else if (command === 'm') {\n              command = 'l';\n            }\n          }\n\n          values.push(Number(value));\n        }\n\n        if (values.length === PathArguments[command]) {\n          this[command].apply(this, values);\n        } else {\n          warningCallback('SvgPath: command ' + command + ' with ' + values.length + ' numbers');\n          return;\n        }\n      }\n\n      if (temp = parser.matchAll()) {\n        warningCallback('SvgPath: unexpected string ' + temp);\n      }\n\n      return this;\n    };\n\n    this.getBoundingBox = function () {\n      let bbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n      function addBounds(bbox1) {\n        if (bbox1[0] < bbox[0]) {\n          bbox[0] = bbox1[0];\n        }\n\n        if (bbox1[2] > bbox[2]) {\n          bbox[2] = bbox1[2];\n        }\n\n        if (bbox1[1] < bbox[1]) {\n          bbox[1] = bbox1[1];\n        }\n\n        if (bbox1[3] > bbox[3]) {\n          bbox[3] = bbox1[3];\n        }\n      }\n\n      for (let i = 0; i < this.pathSegments.length; i++) {\n        addBounds(this.pathSegments[i].getBoundingBox());\n      }\n\n      if (bbox[0] === Infinity) {\n        bbox[0] = 0;\n      }\n\n      if (bbox[1] === Infinity) {\n        bbox[1] = 0;\n      }\n\n      if (bbox[2] === -Infinity) {\n        bbox[2] = 0;\n      }\n\n      if (bbox[3] === -Infinity) {\n        bbox[3] = 0;\n      }\n\n      return bbox;\n    };\n\n    this.getPointAtLength = function (l) {\n      if (l >= 0 && l <= this.totalLength) {\n        let temp;\n\n        for (let i = 0; i < this.pathSegments.length; i++) {\n          if (temp = this.pathSegments[i].getPointAtLength(l)) {\n            return temp;\n          }\n\n          l -= this.pathSegments[i].totalLength;\n        }\n\n        return this.endPoint;\n      }\n    };\n\n    this.transform = function (m) {\n      this.pathSegments = [];\n      this.startPoint = null;\n      this.endPoint = null;\n      this.totalLength = 0;\n\n      for (let i = 0; i < this.pathCommands.length; i++) {\n        let data = this.pathCommands.shift();\n\n        for (let j = 3; j < data.length; j += 2) {\n          let p = transformPoint([data[j], data[j + 1]], m);\n          data[j] = p[0];\n          data[j + 1] = p[1];\n        }\n\n        this.addCommand(data);\n      }\n\n      return this;\n    };\n\n    this.mergeShape = function (shape) {\n      for (let i = 0; i < shape.pathCommands.length; i++) {\n        this.addCommand(shape.pathCommands[i].slice());\n      }\n\n      return this;\n    };\n\n    this.clone = function () {\n      return new SvgShape().mergeShape(this);\n    };\n\n    this.insertInDocument = function () {\n      for (let i = 0; i < this.pathCommands.length; i++) {\n        let command = this.pathCommands[i][0],\n            values = this.pathCommands[i].slice(3);\n\n        switch (command) {\n          case 'move':\n            doc.moveTo(values[0], values[1]);\n            break;\n\n          case 'line':\n            doc.lineTo(values[0], values[1]);\n            break;\n\n          case 'curve':\n            doc.bezierCurveTo(values[0], values[1], values[2], values[3], values[4], values[5]);\n            break;\n\n          case 'close':\n            doc.closePath();\n            break;\n        }\n      }\n    };\n\n    this.getSubPaths = function () {\n      let subPaths = [],\n          shape = new SvgShape();\n\n      for (let i = 0; i < this.pathCommands.length; i++) {\n        let data = this.pathCommands[i],\n            command = this.pathCommands[i][0];\n\n        if (command === 'move' && i !== 0) {\n          subPaths.push(shape);\n          shape = new SvgShape();\n        }\n\n        shape.addCommand(data);\n      }\n\n      subPaths.push(shape);\n      return subPaths;\n    };\n\n    this.getMarkers = function () {\n      let markers = [],\n          subPaths = this.getSubPaths();\n\n      for (let i = 0; i < subPaths.length; i++) {\n        let subPath = subPaths[i],\n            subPathMarkers = [];\n\n        for (let j = 0; j < subPath.pathSegments.length; j++) {\n          let segment = subPath.pathSegments[j];\n\n          if (isNotEqual(segment.totalLength, 0) || j === 0 || j === subPath.pathSegments.length - 1) {\n            if (segment.hasStart) {\n              let startMarker = segment.getPointAtLength(0),\n                  prevEndMarker = subPathMarkers.pop();\n\n              if (prevEndMarker) {\n                startMarker[2] = 0.5 * (prevEndMarker[2] + startMarker[2]);\n              }\n\n              subPathMarkers.push(startMarker);\n            }\n\n            if (segment.hasEnd) {\n              let endMarker = segment.getPointAtLength(segment.totalLength);\n              subPathMarkers.push(endMarker);\n            }\n          }\n        }\n\n        markers = markers.concat(subPathMarkers);\n      }\n\n      return markers;\n    };\n  };\n\n  var SvgElem = function (obj, inherits) {\n    let styleCache = Object.create(null);\n    let childrenCache = null;\n    this.name = obj.nodeName;\n    this.isOuterElement = obj === svg || !obj.parentNode;\n    this.inherits = inherits || (!this.isOuterElement ? createSVGElement(obj.parentNode, null) : null);\n    this.stack = this.inherits ? this.inherits.stack.concat(obj) : [obj];\n    this.style = parseStyleAttr(typeof obj.getAttribute === 'function' && obj.getAttribute('style'));\n    this.css = useCSS ? getComputedStyle(obj) : getStyle(obj);\n    this.allowedChildren = [];\n\n    this.attr = function (key) {\n      if (typeof obj.getAttribute === 'function') {\n        return obj.getAttribute(key);\n      }\n    };\n\n    this.resolveUrl = function (value) {\n      let temp = (value || '').match(/^\\s*(?:url\\(\"(.*)#(.*)\"\\)|url\\('(.*)#(.*)'\\)|url\\((.*)#(.*)\\)|(.*)#(.*))\\s*$/) || [];\n      let file = temp[1] || temp[3] || temp[5] || temp[7],\n          id = temp[2] || temp[4] || temp[6] || temp[8];\n\n      if (id) {\n        if (!file) {\n          let svgObj = svg.getElementById(id);\n\n          if (svgObj) {\n            if (this.stack.indexOf(svgObj) === -1) {\n              return svgObj;\n            } else {\n              warningCallback('SVGtoPDF: loop of circular references for id \"' + id + '\"');\n              return;\n            }\n          }\n        }\n\n        if (documentCallback) {\n          let svgs = documentCache[file];\n\n          if (!svgs) {\n            svgs = documentCallback(file);\n\n            if (!isArrayLike(svgs)) {\n              svgs = [svgs];\n            }\n\n            for (let i = 0; i < svgs.length; i++) {\n              if (typeof svgs[i] === 'string') {\n                svgs[i] = parseXml(svgs[i]);\n              }\n            }\n\n            documentCache[file] = svgs;\n          }\n\n          for (let i = 0; i < svgs.length; i++) {\n            let svgObj = svgs[i].getElementById(id);\n\n            if (svgObj) {\n              if (this.stack.indexOf(svgObj) === -1) {\n                return svgObj;\n              } else {\n                warningCallback('SVGtoPDF: loop of circular references for id \"' + file + '#' + id + '\"');\n                return;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    this.computeUnits = function (value, unit, percent, isFontSize) {\n      if (unit === '%') {\n        return parseFloat(value) / 100 * (isFontSize || percent != null ? percent : this.getViewport());\n      } else if (unit === 'ex' || unit === 'em') {\n        return value * {\n          'em': 1,\n          'ex': 0.5\n        }[unit] * (isFontSize ? percent : this.get('font-size'));\n      } else {\n        return value * {\n          '': 1,\n          'px': 1,\n          'pt': 96 / 72,\n          'cm': 96 / 2.54,\n          'mm': 96 / 25.4,\n          'in': 96,\n          'pc': 96 / 6\n        }[unit];\n      }\n    };\n\n    this.computeLength = function (value, percent, initial, isFontSize) {\n      let parser = new StringParser((value || '').trim()),\n          temp1,\n          temp2;\n\n      if (typeof (temp1 = parser.matchNumber()) === 'string' && typeof (temp2 = parser.matchLengthUnit()) === 'string' && !parser.matchAll()) {\n        return this.computeUnits(temp1, temp2, percent, isFontSize);\n      }\n\n      return initial;\n    };\n\n    this.computeLengthList = function (value, percent, strict) {\n      let parser = new StringParser((value || '').trim()),\n          result = [],\n          temp1,\n          temp2;\n\n      while (typeof (temp1 = parser.matchNumber()) === 'string' && typeof (temp2 = parser.matchLengthUnit()) === 'string') {\n        result.push(this.computeUnits(temp1, temp2, percent));\n        parser.matchSeparator();\n      }\n\n      if (strict && parser.matchAll()) {\n        return;\n      }\n\n      return result;\n    };\n\n    this.getLength = function (key, percent, initial) {\n      return this.computeLength(this.attr(key), percent, initial);\n    };\n\n    this.getLengthList = function (key, percent) {\n      return this.computeLengthList(this.attr(key), percent);\n    };\n\n    this.getUrl = function (key) {\n      return this.resolveUrl(this.attr(key));\n    };\n\n    this.getNumberList = function (key) {\n      let parser = new StringParser((this.attr(key) || '').trim()),\n          result = [],\n          temp;\n\n      while (temp = parser.matchNumber()) {\n        result.push(Number(temp));\n        parser.matchSeparator();\n      }\n\n      result.error = parser.matchAll();\n      return result;\n    };\n\n    this.getViewbox = function (key, initial) {\n      let viewBox = this.getNumberList(key);\n\n      if (viewBox.length === 4 && viewBox[2] >= 0 && viewBox[3] >= 0) {\n        return viewBox;\n      }\n\n      return initial;\n    };\n\n    this.getPercent = function (key, initial) {\n      let value = this.attr(key);\n      let parser = new StringParser((value || '').trim()),\n          temp1,\n          temp2;\n      let number = parser.matchNumber();\n\n      if (!number) {\n        return initial;\n      }\n\n      if (parser.match('%')) {\n        number *= 0.01;\n      }\n\n      if (parser.matchAll()) {\n        return initial;\n      }\n\n      return Math.max(0, Math.min(1, number));\n    };\n\n    this.chooseValue = function (args) {\n      for (let i = 0; i < arguments.length; i++) {\n        if (arguments[i] != null && arguments[i] === arguments[i]) {\n          return arguments[i];\n        }\n      }\n\n      return arguments[arguments.length - 1];\n    };\n\n    this.get = function (key) {\n      if (styleCache[key] !== undefined) {\n        return styleCache[key];\n      }\n\n      let keyInfo = Properties[key] || {},\n          value,\n          result;\n\n      for (let i = 0; i < 3; i++) {\n        switch (i) {\n          case 0:\n            if (key !== 'transform') {\n              // the CSS transform behaves strangely\n              value = this.css[keyInfo.css || key];\n            }\n\n            break;\n\n          case 1:\n            value = this.style[key];\n            break;\n\n          case 2:\n            value = this.attr(key);\n            break;\n        }\n\n        if (value === 'inherit') {\n          result = this.inherits ? this.inherits.get(key) : keyInfo.initial;\n\n          if (result != null) {\n            return styleCache[key] = result;\n          }\n        }\n\n        if (keyInfo.values != null) {\n          result = keyInfo.values[value];\n\n          if (result != null) {\n            return styleCache[key] = result;\n          }\n        }\n\n        if (value != null) {\n          let parsed;\n\n          switch (key) {\n            case 'font-size':\n              result = this.computeLength(value, this.inherits ? this.inherits.get(key) : keyInfo.initial, undefined, true);\n              break;\n\n            case 'baseline-shift':\n              result = this.computeLength(value, this.get('font-size'));\n              break;\n\n            case 'font-family':\n              result = value || undefined;\n              break;\n\n            case 'opacity':\n            case 'stroke-opacity':\n            case 'fill-opacity':\n            case 'stop-opacity':\n              parsed = parseFloat(value);\n\n              if (!isNaN(parsed)) {\n                result = Math.max(0, Math.min(1, parsed));\n              }\n\n              break;\n\n            case 'transform':\n              result = parseTranform(value);\n              break;\n\n            case 'stroke-dasharray':\n              if (value === 'none') {\n                result = [];\n              } else if (parsed = this.computeLengthList(value, this.getViewport(), true)) {\n                let sum = 0,\n                    error = false;\n\n                for (let j = 0; j < parsed.length; j++) {\n                  if (parsed[j] < 0) {\n                    error = true;\n                  }\n\n                  sum += parsed[j];\n                }\n\n                if (!error) {\n                  if (parsed.length % 2 === 1) {\n                    parsed = parsed.concat(parsed);\n                  }\n\n                  result = sum === 0 ? [] : parsed;\n                }\n              }\n\n              break;\n\n            case 'color':\n              if (value === 'none' || value === 'transparent') {\n                result = 'none';\n              } else {\n                result = parseColor(value);\n              }\n\n              break;\n\n            case 'fill':\n            case 'stroke':\n              if (value === 'none' || value === 'transparent') {\n                result = 'none';\n              } else if (value === 'currentColor') {\n                result = this.get('color');\n              } else if (parsed = parseColor(value)) {\n                return parsed;\n              } else if (parsed = (value || '').split(' ')) {\n                let object = this.resolveUrl(parsed[0]),\n                    fallbackColor = parseColor(parsed[1]);\n\n                if (object == null) {\n                  result = fallbackColor;\n                } else if (object.nodeName === 'linearGradient' || object.nodeName === 'radialGradient') {\n                  result = new SvgElemGradient(object, null, fallbackColor);\n                } else if (object.nodeName === 'pattern') {\n                  result = new SvgElemPattern(object, null, fallbackColor);\n                } else {\n                  result = fallbackColor;\n                }\n              }\n\n              break;\n\n            case 'stop-color':\n              if (value === 'none' || value === 'transparent') {\n                result = 'none';\n              } else if (value === 'currentColor') {\n                result = this.get('color');\n              } else {\n                result = parseColor(value);\n              }\n\n              break;\n\n            case 'marker-start':\n            case 'marker-mid':\n            case 'marker-end':\n            case 'clip-path':\n            case 'mask':\n              if (value === 'none') {\n                result = 'none';\n              } else {\n                result = this.resolveUrl(value);\n              }\n\n              break;\n\n            case 'stroke-width':\n              parsed = this.computeLength(value, this.getViewport());\n\n              if (parsed != null && parsed >= 0) {\n                result = parsed;\n              }\n\n              break;\n\n            case 'stroke-miterlimit':\n              parsed = parseFloat(value);\n\n              if (parsed != null && parsed >= 1) {\n                result = parsed;\n              }\n\n              break;\n\n            case 'word-spacing':\n            case 'letter-spacing':\n              result = this.computeLength(value, this.getViewport());\n              break;\n\n            case 'stroke-dashoffset':\n              result = this.computeLength(value, this.getViewport());\n\n              if (result != null) {\n                if (result < 0) {\n                  // fix for crbug.com/660850\n                  let dasharray = this.get('stroke-dasharray');\n\n                  for (let j = 0; j < dasharray.length; j++) {\n                    result += dasharray[j];\n                  }\n                }\n              }\n\n              break;\n          }\n\n          if (result != null) {\n            return styleCache[key] = result;\n          }\n        }\n      }\n\n      return styleCache[key] = keyInfo.inherit && this.inherits ? this.inherits.get(key) : keyInfo.initial;\n    };\n\n    this.getChildren = function () {\n      if (childrenCache != null) {\n        return childrenCache;\n      }\n\n      let children = [];\n\n      for (let i = 0; i < obj.childNodes.length; i++) {\n        let child = obj.childNodes[i];\n\n        if (!child.error && this.allowedChildren.indexOf(child.nodeName) !== -1) {\n          children.push(createSVGElement(child, this));\n        }\n      }\n\n      return childrenCache = children;\n    };\n\n    this.getParentVWidth = function () {\n      return this.inherits ? this.inherits.getVWidth() : viewportWidth;\n    };\n\n    this.getParentVHeight = function () {\n      return this.inherits ? this.inherits.getVHeight() : viewportHeight;\n    };\n\n    this.getParentViewport = function () {\n      return Math.sqrt(0.5 * this.getParentVWidth() * this.getParentVWidth() + 0.5 * this.getParentVHeight() * this.getParentVHeight());\n    };\n\n    this.getVWidth = function () {\n      return this.getParentVWidth();\n    };\n\n    this.getVHeight = function () {\n      return this.getParentVHeight();\n    };\n\n    this.getViewport = function () {\n      return Math.sqrt(0.5 * this.getVWidth() * this.getVWidth() + 0.5 * this.getVHeight() * this.getVHeight());\n    };\n\n    this.getBoundingBox = function () {\n      let shape = this.getBoundingShape();\n      return shape.getBoundingBox();\n    };\n  };\n\n  var SvgElemStylable = function (obj, inherits) {\n    SvgElem.call(this, obj, inherits);\n\n    this.transform = function () {\n      doc.transform.apply(doc, this.getTransformation());\n    };\n\n    this.clip = function () {\n      if (this.get('clip-path') !== 'none') {\n        let clipPath = new SvgElemClipPath(this.get('clip-path'), null);\n        clipPath.useMask(this.getBoundingBox());\n        return true;\n      }\n    };\n\n    this.mask = function () {\n      if (this.get('mask') !== 'none') {\n        let mask = new SvgElemMask(this.get('mask'), null);\n        mask.useMask(this.getBoundingBox());\n        return true;\n      }\n    };\n\n    this.getFill = function (isClip, isMask) {\n      let opacity = this.get('opacity'),\n          fill = this.get('fill'),\n          fillOpacity = this.get('fill-opacity');\n\n      if (isClip) {\n        return DefaultColors.white;\n      }\n\n      if (fill !== 'none' && opacity && fillOpacity) {\n        if (fill instanceof SvgElemGradient || fill instanceof SvgElemPattern) {\n          return fill.getPaint(this.getBoundingBox(), fillOpacity * opacity, isClip, isMask);\n        }\n\n        return opacityToColor(fill, fillOpacity * opacity, isMask);\n      }\n    };\n\n    this.getStroke = function (isClip, isMask) {\n      let opacity = this.get('opacity'),\n          stroke = this.get('stroke'),\n          strokeOpacity = this.get('stroke-opacity');\n\n      if (isClip || isEqual(this.get('stroke-width'), 0)) {\n        return;\n      }\n\n      if (stroke !== 'none' && opacity && strokeOpacity) {\n        if (stroke instanceof SvgElemGradient || stroke instanceof SvgElemPattern) {\n          return stroke.getPaint(this.getBoundingBox(), strokeOpacity * opacity, isClip, isMask);\n        }\n\n        return opacityToColor(stroke, strokeOpacity * opacity, isMask);\n      }\n    };\n  };\n\n  var SvgElemHasChildren = function (obj, inherits) {\n    SvgElemStylable.call(this, obj, inherits);\n    this.allowedChildren = ['use', 'g', 'a', 'svg', 'image', 'rect', 'circle', 'ellipse', 'line', 'polyline', 'polygon', 'path', 'text'];\n\n    this.getBoundingShape = function () {\n      let shape = new SvgShape(),\n          children = this.getChildren();\n\n      for (let i = 0; i < children.length; i++) {\n        if (children[i].get('display') !== 'none') {\n          if (typeof children[i].getBoundingShape === 'function') {\n            let childShape = children[i].getBoundingShape().clone();\n\n            if (typeof children[i].getTransformation === 'function') {\n              childShape.transform(children[i].getTransformation());\n            }\n\n            shape.mergeShape(childShape);\n          }\n        }\n      }\n\n      return shape;\n    };\n\n    this.drawChildren = function (isClip, isMask) {\n      let children = this.getChildren();\n\n      for (let i = 0; i < children.length; i++) {\n        if (children[i].get('display') !== 'none') {\n          if (typeof children[i].drawInDocument === 'function') {\n            children[i].drawInDocument(isClip, isMask);\n          }\n        }\n      }\n    };\n  };\n\n  var SvgElemContainer = function (obj, inherits) {\n    SvgElemHasChildren.call(this, obj, inherits);\n\n    this.drawContent = function (isClip, isMask) {\n      this.transform();\n      let clipped = this.clip(),\n          masked = this.mask(),\n          group;\n\n      if ((this.get('opacity') < 1 || clipped || masked) && !isClip) {\n        group = docBeginGroup(getPageBBox());\n      }\n\n      this.drawChildren(isClip, isMask);\n\n      if (group) {\n        docEndGroup(group);\n        doc.fillOpacity(this.get('opacity'));\n        docInsertGroup(group);\n      }\n    };\n  };\n\n  var SvgElemUse = function (obj, inherits) {\n    SvgElemContainer.call(this, obj, inherits);\n    let x = this.getLength('x', this.getVWidth(), 0),\n        y = this.getLength('y', this.getVHeight(), 0),\n        child = this.getUrl('href') || this.getUrl('xlink:href');\n\n    if (child) {\n      child = createSVGElement(child, this);\n    }\n\n    this.getChildren = function () {\n      return child ? [child] : [];\n    };\n\n    this.drawInDocument = function (isClip, isMask) {\n      doc.save();\n      this.drawContent(isClip, isMask);\n      doc.restore();\n    };\n\n    this.getTransformation = function () {\n      return multiplyMatrix(this.get('transform'), [1, 0, 0, 1, x, y]);\n    };\n  };\n\n  var SvgElemSymbol = function (obj, inherits) {\n    SvgElemContainer.call(this, obj, inherits);\n    let width = this.getLength('width', this.getParentVWidth(), this.getParentVWidth()),\n        height = this.getLength('height', this.getParentVHeight(), this.getParentVHeight());\n\n    if (inherits instanceof SvgElemUse) {\n      width = inherits.getLength('width', inherits.getParentVWidth(), width);\n      height = inherits.getLength('height', inherits.getParentVHeight(), height);\n    }\n\n    let aspectRatio = (this.attr('preserveAspectRatio') || '').trim(),\n        viewBox = this.getViewbox('viewBox', [0, 0, width, height]);\n\n    this.getVWidth = function () {\n      return viewBox[2];\n    };\n\n    this.getVHeight = function () {\n      return viewBox[3];\n    };\n\n    this.drawInDocument = function (isClip, isMask) {\n      doc.save();\n      this.drawContent(isClip, isMask);\n      doc.restore();\n    };\n\n    this.getTransformation = function () {\n      return multiplyMatrix(parseAspectRatio(aspectRatio, width, height, viewBox[2], viewBox[3]), [1, 0, 0, 1, -viewBox[0], -viewBox[1]]);\n    };\n  };\n\n  var SvgElemGroup = function (obj, inherits) {\n    SvgElemContainer.call(this, obj, inherits);\n\n    this.drawInDocument = function (isClip, isMask) {\n      doc.save();\n\n      if (this.link && !isClip && !isMask) {\n        this.addLink();\n      }\n\n      this.drawContent(isClip, isMask);\n      doc.restore();\n    };\n\n    this.getTransformation = function () {\n      return this.get('transform');\n    };\n  };\n\n  var SvgElemLink = function (obj, inherits) {\n    if (inherits && inherits.isText) {\n      SvgElemTspan.call(this, obj, inherits);\n      this.allowedChildren = ['textPath', 'tspan', '#text', '#cdata-section', 'a'];\n    } else {\n      SvgElemGroup.call(this, obj, inherits);\n    }\n\n    this.link = this.attr('href') || this.attr('xlink:href');\n\n    this.addLink = function () {\n      if (this.link.match(/^(?:[a-z][a-z0-9+.-]*:|\\/\\/)?/i) && this.getChildren().length) {\n        let bbox = this.getBoundingShape().transform(getGlobalMatrix()).getBoundingBox();\n        docInsertLink(bbox[0], bbox[1], bbox[2], bbox[3], this.link);\n      }\n    };\n  };\n\n  var SvgElemSvg = function (obj, inherits) {\n    SvgElemContainer.call(this, obj, inherits);\n    let width = this.getLength('width', this.getParentVWidth(), this.getParentVWidth()),\n        height = this.getLength('height', this.getParentVHeight(), this.getParentVHeight()),\n        x = this.getLength('x', this.getParentVWidth(), 0),\n        y = this.getLength('y', this.getParentVHeight(), 0);\n\n    if (inherits instanceof SvgElemUse) {\n      width = inherits.getLength('width', inherits.getParentVWidth(), width);\n      height = inherits.getLength('height', inherits.getParentVHeight(), height);\n    }\n\n    let aspectRatio = this.attr('preserveAspectRatio'),\n        viewBox = this.getViewbox('viewBox', [0, 0, width, height]);\n\n    if (this.isOuterElement && preserveAspectRatio) {\n      x = y = 0;\n      width = viewportWidth;\n      height = viewportHeight;\n      aspectRatio = preserveAspectRatio;\n    }\n\n    this.getVWidth = function () {\n      return viewBox[2];\n    };\n\n    this.getVHeight = function () {\n      return viewBox[3];\n    };\n\n    this.drawInDocument = function (isClip, isMask) {\n      doc.save();\n\n      if (this.get('overflow') === 'hidden') {\n        new SvgShape().M(x, y).L(x + width, y).L(x + width, y + height).L(x, y + height).Z().transform(this.get('transform')).insertInDocument();\n        doc.clip();\n      }\n\n      this.drawContent(isClip, isMask);\n      doc.restore();\n    };\n\n    this.getTransformation = function () {\n      return multiplyMatrix(this.get('transform'), [1, 0, 0, 1, x, y], parseAspectRatio(aspectRatio, width, height, viewBox[2], viewBox[3]), [1, 0, 0, 1, -viewBox[0], -viewBox[1]]);\n    };\n  };\n\n  var SVGElemImage = function (obj, inherits) {\n    SvgElemStylable.call(this, obj, inherits);\n    let link = imageCallback(this.attr('href') || this.attr('xlink:href') || ''),\n        x = this.getLength('x', this.getVWidth(), 0),\n        y = this.getLength('y', this.getVHeight(), 0),\n        width = this.getLength('width', this.getVWidth(), 'auto'),\n        height = this.getLength('height', this.getVHeight(), 'auto'),\n        image;\n\n    try {\n      image = doc.openImage(link);\n    } catch (e) {\n      warningCallback('SVGElemImage: failed to open image \"' + link + '\" in PDFKit');\n    }\n\n    if (image) {\n      if (width === 'auto' && height !== 'auto') {\n        width = height * image.width / image.height;\n      } else if (height === 'auto' && width !== 'auto') {\n        height = width * image.height / image.width;\n      } else if (width === 'auto' && height === 'auto') {\n        width = image.width;\n        height = image.height;\n      }\n    }\n\n    if (width === 'auto' || width < 0) {\n      width = 0;\n    }\n\n    if (height === 'auto' || height < 0) {\n      height = 0;\n    }\n\n    this.getTransformation = function () {\n      return this.get('transform');\n    };\n\n    this.getBoundingShape = function () {\n      return new SvgShape().M(x, y).L(x + width, y).M(x + width, y + height).L(x, y + height);\n    };\n\n    this.drawInDocument = function (isClip, isMask) {\n      if (this.get('visibility') === 'hidden' || !image) {\n        return;\n      }\n\n      doc.save();\n      this.transform();\n\n      if (this.get('overflow') === 'hidden') {\n        doc.rect(x, y, width, height).clip();\n      }\n\n      this.clip();\n      this.mask();\n      doc.translate(x, y);\n      doc.transform.apply(doc, parseAspectRatio(this.attr('preserveAspectRatio'), width, height, image ? image.width : width, image ? image.height : height));\n\n      if (!isClip) {\n        doc.fillOpacity(this.get('opacity'));\n        doc.image(image, 0, 0);\n      } else {\n        doc.rect(0, 0, image.width, image.height);\n        docFillColor(DefaultColors.white).fill();\n      }\n\n      doc.restore();\n    };\n  };\n\n  var SvgElemPattern = function (obj, inherits, fallback) {\n    SvgElemHasChildren.call(this, obj, inherits);\n\n    this.ref = function () {\n      let ref = this.getUrl('href') || this.getUrl('xlink:href');\n\n      if (ref && ref.nodeName === obj.nodeName) {\n        return new SvgElemPattern(ref, inherits, fallback);\n      }\n    }.call(this);\n\n    let _attr = this.attr;\n\n    this.attr = function (key) {\n      let attr = _attr.call(this, key);\n\n      if (attr != null || key === 'href' || key === 'xlink:href') {\n        return attr;\n      }\n\n      return this.ref ? this.ref.attr(key) : null;\n    };\n\n    let _getChildren = this.getChildren;\n\n    this.getChildren = function () {\n      let children = _getChildren.call(this);\n\n      if (children.length > 0) {\n        return children;\n      }\n\n      return this.ref ? this.ref.getChildren() : [];\n    };\n\n    this.getPaint = function (bBox, gOpacity, isClip, isMask) {\n      let bBoxUnitsPattern = this.attr('patternUnits') !== 'userSpaceOnUse',\n          bBoxUnitsContent = this.attr('patternContentUnits') === 'objectBoundingBox',\n          x = this.getLength('x', bBoxUnitsPattern ? 1 : this.getParentVWidth(), 0),\n          y = this.getLength('y', bBoxUnitsPattern ? 1 : this.getParentVHeight(), 0),\n          width = this.getLength('width', bBoxUnitsPattern ? 1 : this.getParentVWidth(), 0),\n          height = this.getLength('height', bBoxUnitsPattern ? 1 : this.getParentVHeight(), 0);\n\n      if (bBoxUnitsContent && !bBoxUnitsPattern) {\n        // Use the same units for pattern & pattern content\n        x = (x - bBox[0]) / (bBox[2] - bBox[0]) || 0;\n        y = (y - bBox[1]) / (bBox[3] - bBox[1]) || 0;\n        width = width / (bBox[2] - bBox[0]) || 0;\n        height = height / (bBox[3] - bBox[1]) || 0;\n      } else if (!bBoxUnitsContent && bBoxUnitsPattern) {\n        x = bBox[0] + x * (bBox[2] - bBox[0]);\n        y = bBox[1] + y * (bBox[3] - bBox[1]);\n        width = width * (bBox[2] - bBox[0]);\n        height = height * (bBox[3] - bBox[1]);\n      }\n\n      let viewBox = this.getViewbox('viewBox', [0, 0, width, height]),\n          aspectRatio = (this.attr('preserveAspectRatio') || '').trim(),\n          aspectRatioMatrix = multiplyMatrix(parseAspectRatio(aspectRatio, width, height, viewBox[2], viewBox[3], 0), [1, 0, 0, 1, -viewBox[0], -viewBox[1]]),\n          matrix = parseTranform(this.attr('patternTransform'));\n\n      if (bBoxUnitsContent) {\n        matrix = multiplyMatrix([bBox[2] - bBox[0], 0, 0, bBox[3] - bBox[1], bBox[0], bBox[1]], matrix);\n      }\n\n      matrix = multiplyMatrix(matrix, [1, 0, 0, 1, x, y]);\n\n      if ((matrix = validateMatrix(matrix)) && (aspectRatioMatrix = validateMatrix(aspectRatioMatrix)) && (width = validateNumber(width)) && (height = validateNumber(height))) {\n        let group = docBeginGroup([0, 0, width, height]);\n        doc.transform.apply(doc, aspectRatioMatrix);\n        this.drawChildren(isClip, isMask);\n        docEndGroup(group);\n        return [docCreatePattern(group, width, height, matrix), gOpacity];\n      } else {\n        return fallback ? [fallback[0], fallback[1] * gOpacity] : undefined;\n      }\n    };\n\n    this.getVWidth = function () {\n      let bBoxUnitsPattern = this.attr('patternUnits') !== 'userSpaceOnUse',\n          width = this.getLength('width', bBoxUnitsPattern ? 1 : this.getParentVWidth(), 0);\n      return this.getViewbox('viewBox', [0, 0, width, 0])[2];\n    };\n\n    this.getVHeight = function () {\n      let bBoxUnitsPattern = this.attr('patternUnits') !== 'userSpaceOnUse',\n          height = this.getLength('height', bBoxUnitsPattern ? 1 : this.getParentVHeight(), 0);\n      return this.getViewbox('viewBox', [0, 0, 0, height])[3];\n    };\n  };\n\n  var SvgElemGradient = function (obj, inherits, fallback) {\n    SvgElem.call(this, obj, inherits);\n    this.allowedChildren = ['stop'];\n\n    this.ref = function () {\n      let ref = this.getUrl('href') || this.getUrl('xlink:href');\n\n      if (ref && ref.nodeName === obj.nodeName) {\n        return new SvgElemGradient(ref, inherits, fallback);\n      }\n    }.call(this);\n\n    let _attr = this.attr;\n\n    this.attr = function (key) {\n      let attr = _attr.call(this, key);\n\n      if (attr != null || key === 'href' || key === 'xlink:href') {\n        return attr;\n      }\n\n      return this.ref ? this.ref.attr(key) : null;\n    };\n\n    let _getChildren = this.getChildren;\n\n    this.getChildren = function () {\n      let children = _getChildren.call(this);\n\n      if (children.length > 0) {\n        return children;\n      }\n\n      return this.ref ? this.ref.getChildren() : [];\n    };\n\n    this.getPaint = function (bBox, gOpacity, isClip, isMask) {\n      let children = this.getChildren();\n\n      if (children.length === 0) {\n        return;\n      }\n\n      if (children.length === 1) {\n        let child = children[0],\n            stopColor = child.get('stop-color');\n\n        if (stopColor === 'none') {\n          return;\n        }\n\n        return opacityToColor(stopColor, child.get('stop-opacity') * gOpacity, isMask);\n      }\n\n      let bBoxUnits = this.attr('gradientUnits') !== 'userSpaceOnUse',\n          matrix = parseTranform(this.attr('gradientTransform')),\n          spread = this.attr('spreadMethod'),\n          grad,\n          x1,\n          x2,\n          y1,\n          y2,\n          r2,\n          nAfter = 0,\n          nBefore = 0,\n          nTotal = 1;\n\n      if (bBoxUnits) {\n        matrix = multiplyMatrix([bBox[2] - bBox[0], 0, 0, bBox[3] - bBox[1], bBox[0], bBox[1]], matrix);\n      }\n\n      if (matrix = validateMatrix(matrix)) {\n        if (this.name === 'linearGradient') {\n          x1 = this.getLength('x1', bBoxUnits ? 1 : this.getVWidth(), 0);\n          x2 = this.getLength('x2', bBoxUnits ? 1 : this.getVWidth(), bBoxUnits ? 1 : this.getVWidth());\n          y1 = this.getLength('y1', bBoxUnits ? 1 : this.getVHeight(), 0);\n          y2 = this.getLength('y2', bBoxUnits ? 1 : this.getVHeight(), 0);\n        } else {\n          x2 = this.getLength('cx', bBoxUnits ? 1 : this.getVWidth(), bBoxUnits ? 0.5 : 0.5 * this.getVWidth());\n          y2 = this.getLength('cy', bBoxUnits ? 1 : this.getVHeight(), bBoxUnits ? 0.5 : 0.5 * this.getVHeight());\n          r2 = this.getLength('r', bBoxUnits ? 1 : this.getViewport(), bBoxUnits ? 0.5 : 0.5 * this.getViewport());\n          x1 = this.getLength('fx', bBoxUnits ? 1 : this.getVWidth(), x2);\n          y1 = this.getLength('fy', bBoxUnits ? 1 : this.getVHeight(), y2);\n\n          if (r2 < 0) {\n            warningCallback('SvgElemGradient: negative r value');\n          }\n\n          let d = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n              multiplier = 1;\n\n          if (d > r2) {\n            // according to specification\n            multiplier = r2 / d;\n            x1 = x2 + (x1 - x2) * multiplier;\n            y1 = y2 + (y1 - y2) * multiplier;\n          }\n\n          r2 = Math.max(r2, d * multiplier * (1 + 1e-6)); // fix for edge-case gradients see issue #84\n        }\n\n        if (spread === 'reflect' || spread === 'repeat') {\n          let inv = inverseMatrix(matrix),\n              corner1 = transformPoint([bBox[0], bBox[1]], inv),\n              corner2 = transformPoint([bBox[2], bBox[1]], inv),\n              corner3 = transformPoint([bBox[2], bBox[3]], inv),\n              corner4 = transformPoint([bBox[0], bBox[3]], inv);\n\n          if (this.name === 'linearGradient') {\n            // See file 'gradient-repeat-maths.png'\n            nAfter = Math.max((corner1[0] - x2) * (x2 - x1) + (corner1[1] - y2) * (y2 - y1), (corner2[0] - x2) * (x2 - x1) + (corner2[1] - y2) * (y2 - y1), (corner3[0] - x2) * (x2 - x1) + (corner3[1] - y2) * (y2 - y1), (corner4[0] - x2) * (x2 - x1) + (corner4[1] - y2) * (y2 - y1)) / (Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n            nBefore = Math.max((corner1[0] - x1) * (x1 - x2) + (corner1[1] - y1) * (y1 - y2), (corner2[0] - x1) * (x1 - x2) + (corner2[1] - y1) * (y1 - y2), (corner3[0] - x1) * (x1 - x2) + (corner3[1] - y1) * (y1 - y2), (corner4[0] - x1) * (x1 - x2) + (corner4[1] - y1) * (y1 - y2)) / (Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n          } else {\n            nAfter = Math.sqrt(Math.max(Math.pow(corner1[0] - x2, 2) + Math.pow(corner1[1] - y2, 2), Math.pow(corner2[0] - x2, 2) + Math.pow(corner2[1] - y2, 2), Math.pow(corner3[0] - x2, 2) + Math.pow(corner3[1] - y2, 2), Math.pow(corner4[0] - x2, 2) + Math.pow(corner4[1] - y2, 2))) / r2 - 1;\n          }\n\n          nAfter = Math.ceil(nAfter + 0.5); // Add a little more because the stroke can extend outside of the bounding box\n\n          nBefore = Math.ceil(nBefore + 0.5);\n          nTotal = nBefore + 1 + nAfter; // How many times the gradient needs to be repeated to fill the object bounding box\n        }\n\n        if (this.name === 'linearGradient') {\n          grad = doc.linearGradient(x1 - nBefore * (x2 - x1), y1 - nBefore * (y2 - y1), x2 + nAfter * (x2 - x1), y2 + nAfter * (y2 - y1));\n        } else {\n          grad = doc.radialGradient(x1, y1, 0, x2, y2, r2 + nAfter * r2);\n        }\n\n        for (let n = 0; n < nTotal; n++) {\n          let offset = 0,\n              inOrder = spread !== 'reflect' || (n - nBefore) % 2 === 0;\n\n          for (let i = 0; i < children.length; i++) {\n            let child = children[inOrder ? i : children.length - 1 - i],\n                stopColor = child.get('stop-color');\n\n            if (stopColor === 'none') {\n              stopColor = DefaultColors.transparent;\n            }\n\n            stopColor = opacityToColor(stopColor, child.get('stop-opacity') * gOpacity, isMask);\n            offset = Math.max(offset, inOrder ? child.getPercent('offset', 0) : 1 - child.getPercent('offset', 0));\n\n            if (i === 0 && stopColor[0].length === 4) {\n              grad._colorSpace = 'DeviceCMYK';\n            } // Fix until PR #763 is merged into PDFKit\n\n\n            if (i === 0 && offset > 0) {\n              grad.stop((n + 0) / nTotal, stopColor[0], stopColor[1]);\n            }\n\n            grad.stop((n + offset) / (nAfter + nBefore + 1), stopColor[0], stopColor[1]);\n\n            if (i === children.length - 1 && offset < 1) {\n              grad.stop((n + 1) / nTotal, stopColor[0], stopColor[1]);\n            }\n          }\n        }\n\n        grad.setTransform.apply(grad, matrix);\n        return [grad, 1];\n      } else {\n        return fallback ? [fallback[0], fallback[1] * gOpacity] : undefined;\n      }\n    };\n  };\n\n  var SvgElemBasicShape = function (obj, inherits) {\n    SvgElemStylable.call(this, obj, inherits);\n    this.dashScale = 1;\n\n    this.getBoundingShape = function () {\n      return this.shape;\n    };\n\n    this.getTransformation = function () {\n      return this.get('transform');\n    };\n\n    this.drawInDocument = function (isClip, isMask) {\n      if (this.get('visibility') === 'hidden' || !this.shape) {\n        return;\n      }\n\n      doc.save();\n      this.transform();\n      this.clip();\n\n      if (!isClip) {\n        let masked = this.mask(),\n            group;\n\n        if (masked) {\n          group = docBeginGroup(getPageBBox());\n        }\n\n        let subPaths = this.shape.getSubPaths(),\n            fill = this.getFill(isClip, isMask),\n            stroke = this.getStroke(isClip, isMask),\n            lineWidth = this.get('stroke-width'),\n            lineCap = this.get('stroke-linecap');\n\n        if (fill || stroke) {\n          if (fill) {\n            docFillColor(fill);\n          }\n\n          if (stroke) {\n            for (let j = 0; j < subPaths.length; j++) {\n              if (isEqual(subPaths[j].totalLength, 0)) {\n                if ((lineCap === 'square' || lineCap === 'round') && lineWidth > 0) {\n                  if (subPaths[j].startPoint && subPaths[j].startPoint.length > 1) {\n                    let x = subPaths[j].startPoint[0],\n                        y = subPaths[j].startPoint[1];\n                    docFillColor(stroke);\n\n                    if (lineCap === 'square') {\n                      doc.rect(x - 0.5 * lineWidth, y - 0.5 * lineWidth, lineWidth, lineWidth);\n                    } else if (lineCap === 'round') {\n                      doc.circle(x, y, 0.5 * lineWidth);\n                    }\n\n                    doc.fill();\n                  }\n                }\n              }\n            }\n\n            let dashArray = this.get('stroke-dasharray'),\n                dashOffset = this.get('stroke-dashoffset');\n\n            if (isNotEqual(this.dashScale, 1)) {\n              for (let j = 0; j < dashArray.length; j++) {\n                dashArray[j] *= this.dashScale;\n              }\n\n              dashOffset *= this.dashScale;\n            }\n\n            docStrokeColor(stroke);\n            doc.lineWidth(lineWidth).miterLimit(this.get('stroke-miterlimit')).lineJoin(this.get('stroke-linejoin')).lineCap(lineCap).dash(dashArray, {\n              phase: dashOffset\n            });\n          }\n\n          for (let j = 0; j < subPaths.length; j++) {\n            if (subPaths[j].totalLength > 0) {\n              subPaths[j].insertInDocument();\n            }\n          }\n\n          if (fill && stroke) {\n            doc.fillAndStroke(this.get('fill-rule'));\n          } else if (fill) {\n            doc.fill(this.get('fill-rule'));\n          } else if (stroke) {\n            doc.stroke();\n          }\n        }\n\n        let markerStart = this.get('marker-start'),\n            markerMid = this.get('marker-mid'),\n            markerEnd = this.get('marker-end');\n\n        if (markerStart !== 'none' || markerMid !== 'none' || markerEnd !== 'none') {\n          let markersPos = this.shape.getMarkers();\n\n          if (markerStart !== 'none') {\n            let marker = new SvgElemMarker(markerStart, null);\n            marker.drawMarker(false, isMask, markersPos[0], lineWidth);\n          }\n\n          if (markerMid !== 'none') {\n            for (let i = 1; i < markersPos.length - 1; i++) {\n              let marker = new SvgElemMarker(markerMid, null);\n              marker.drawMarker(false, isMask, markersPos[i], lineWidth);\n            }\n          }\n\n          if (markerEnd !== 'none') {\n            let marker = new SvgElemMarker(markerEnd, null);\n            marker.drawMarker(false, isMask, markersPos[markersPos.length - 1], lineWidth);\n          }\n        }\n\n        if (group) {\n          docEndGroup(group);\n          docInsertGroup(group);\n        }\n      } else {\n        this.shape.insertInDocument();\n        docFillColor(DefaultColors.white);\n        doc.fill(this.get('clip-rule'));\n      }\n\n      doc.restore();\n    };\n  };\n\n  var SvgElemRect = function (obj, inherits) {\n    SvgElemBasicShape.call(this, obj, inherits);\n    let x = this.getLength('x', this.getVWidth(), 0),\n        y = this.getLength('y', this.getVHeight(), 0),\n        w = this.getLength('width', this.getVWidth(), 0),\n        h = this.getLength('height', this.getVHeight(), 0),\n        rx = this.getLength('rx', this.getVWidth()),\n        ry = this.getLength('ry', this.getVHeight());\n\n    if (rx === undefined && ry === undefined) {\n      rx = ry = 0;\n    } else if (rx === undefined && ry !== undefined) {\n      rx = ry;\n    } else if (rx !== undefined && ry === undefined) {\n      ry = rx;\n    }\n\n    if (w > 0 && h > 0) {\n      if (rx && ry) {\n        rx = Math.min(rx, 0.5 * w);\n        ry = Math.min(ry, 0.5 * h);\n        this.shape = new SvgShape().M(x + rx, y).L(x + w - rx, y).A(rx, ry, 0, 0, 1, x + w, y + ry).L(x + w, y + h - ry).A(rx, ry, 0, 0, 1, x + w - rx, y + h).L(x + rx, y + h).A(rx, ry, 0, 0, 1, x, y + h - ry).L(x, y + ry).A(rx, ry, 0, 0, 1, x + rx, y).Z();\n      } else {\n        this.shape = new SvgShape().M(x, y).L(x + w, y).L(x + w, y + h).L(x, y + h).Z();\n      }\n    } else {\n      this.shape = new SvgShape();\n    }\n  };\n\n  var SvgElemCircle = function (obj, inherits) {\n    SvgElemBasicShape.call(this, obj, inherits);\n    let cx = this.getLength('cx', this.getVWidth(), 0),\n        cy = this.getLength('cy', this.getVHeight(), 0),\n        r = this.getLength('r', this.getViewport(), 0);\n\n    if (r > 0) {\n      this.shape = new SvgShape().M(cx + r, cy).A(r, r, 0, 0, 1, cx - r, cy).A(r, r, 0, 0, 1, cx + r, cy).Z();\n    } else {\n      this.shape = new SvgShape();\n    }\n  };\n\n  var SvgElemEllipse = function (obj, inherits) {\n    SvgElemBasicShape.call(this, obj, inherits);\n    let cx = this.getLength('cx', this.getVWidth(), 0),\n        cy = this.getLength('cy', this.getVHeight(), 0),\n        rx = this.getLength('rx', this.getVWidth(), 0),\n        ry = this.getLength('ry', this.getVHeight(), 0);\n\n    if (rx > 0 && ry > 0) {\n      this.shape = new SvgShape().M(cx + rx, cy).A(rx, ry, 0, 0, 1, cx - rx, cy).A(rx, ry, 0, 0, 1, cx + rx, cy).Z();\n    } else {\n      this.shape = new SvgShape();\n    }\n  };\n\n  var SvgElemLine = function (obj, inherits) {\n    SvgElemBasicShape.call(this, obj, inherits);\n    let x1 = this.getLength('x1', this.getVWidth(), 0),\n        y1 = this.getLength('y1', this.getVHeight(), 0),\n        x2 = this.getLength('x2', this.getVWidth(), 0),\n        y2 = this.getLength('y2', this.getVHeight(), 0);\n    this.shape = new SvgShape().M(x1, y1).L(x2, y2);\n  };\n\n  var SvgElemPolyline = function (obj, inherits) {\n    SvgElemBasicShape.call(this, obj, inherits);\n    let points = this.getNumberList('points');\n    this.shape = new SvgShape();\n\n    for (let i = 0; i < points.length - 1; i += 2) {\n      if (i === 0) {\n        this.shape.M(points[i], points[i + 1]);\n      } else {\n        this.shape.L(points[i], points[i + 1]);\n      }\n    }\n\n    if (points.error) {\n      warningCallback('SvgElemPolygon: unexpected string ' + points.error);\n    }\n\n    if (points.length % 2 === 1) {\n      warningCallback('SvgElemPolyline: uneven number of coordinates');\n    }\n  };\n\n  var SvgElemPolygon = function (obj, inherits) {\n    SvgElemBasicShape.call(this, obj, inherits);\n    let points = this.getNumberList('points');\n    this.shape = new SvgShape();\n\n    for (let i = 0; i < points.length - 1; i += 2) {\n      if (i === 0) {\n        this.shape.M(points[i], points[i + 1]);\n      } else {\n        this.shape.L(points[i], points[i + 1]);\n      }\n    }\n\n    this.shape.Z();\n\n    if (points.error) {\n      warningCallback('SvgElemPolygon: unexpected string ' + points.error);\n    }\n\n    if (points.length % 2 === 1) {\n      warningCallback('SvgElemPolygon: uneven number of coordinates');\n    }\n  };\n\n  var SvgElemPath = function (obj, inherits) {\n    SvgElemBasicShape.call(this, obj, inherits);\n    this.shape = new SvgShape().path(this.attr('d'));\n    let pathLength = this.getLength('pathLength', this.getViewport());\n    this.pathLength = pathLength > 0 ? pathLength : undefined;\n    this.dashScale = this.pathLength !== undefined ? this.shape.totalLength / this.pathLength : 1;\n  };\n\n  var SvgElemMarker = function (obj, inherits) {\n    SvgElemHasChildren.call(this, obj, inherits);\n    let width = this.getLength('markerWidth', this.getParentVWidth(), 3),\n        height = this.getLength('markerHeight', this.getParentVHeight(), 3),\n        viewBox = this.getViewbox('viewBox', [0, 0, width, height]);\n\n    this.getVWidth = function () {\n      return viewBox[2];\n    };\n\n    this.getVHeight = function () {\n      return viewBox[3];\n    };\n\n    this.drawMarker = function (isClip, isMask, posArray, strokeWidth) {\n      doc.save();\n      let orient = this.attr('orient'),\n          units = this.attr('markerUnits'),\n          rotate = orient === 'auto' ? posArray[2] : (parseFloat(orient) || 0) * Math.PI / 180,\n          scale = units === 'userSpaceOnUse' ? 1 : strokeWidth;\n      doc.transform(Math.cos(rotate) * scale, Math.sin(rotate) * scale, -Math.sin(rotate) * scale, Math.cos(rotate) * scale, posArray[0], posArray[1]);\n      let refX = this.getLength('refX', this.getVWidth(), 0),\n          refY = this.getLength('refY', this.getVHeight(), 0),\n          aspectRatioMatrix = parseAspectRatio(this.attr('preserveAspectRatio'), width, height, viewBox[2], viewBox[3], 0.5);\n\n      if (this.get('overflow') === 'hidden') {\n        doc.rect(aspectRatioMatrix[0] * (viewBox[0] + viewBox[2] / 2 - refX) - width / 2, aspectRatioMatrix[3] * (viewBox[1] + viewBox[3] / 2 - refY) - height / 2, width, height).clip();\n      }\n\n      doc.transform.apply(doc, aspectRatioMatrix);\n      doc.translate(-refX, -refY);\n      let group;\n\n      if (this.get('opacity') < 1 && !isClip) {\n        group = docBeginGroup(getPageBBox());\n      }\n\n      this.drawChildren(isClip, isMask);\n\n      if (group) {\n        docEndGroup(group);\n        doc.fillOpacity(this.get('opacity'));\n        docInsertGroup(group);\n      }\n\n      doc.restore();\n    };\n  };\n\n  var SvgElemClipPath = function (obj, inherits) {\n    SvgElemHasChildren.call(this, obj, inherits);\n\n    this.useMask = function (bBox) {\n      let group = docBeginGroup(getPageBBox());\n      doc.save();\n\n      if (this.attr('clipPathUnits') === 'objectBoundingBox') {\n        doc.transform(bBox[2] - bBox[0], 0, 0, bBox[3] - bBox[1], bBox[0], bBox[1]);\n      }\n\n      this.clip();\n      this.drawChildren(true, false);\n      doc.restore();\n      docEndGroup(group);\n      docApplyMask(group, true);\n    };\n  };\n\n  var SvgElemMask = function (obj, inherits) {\n    SvgElemHasChildren.call(this, obj, inherits);\n\n    this.useMask = function (bBox) {\n      let group = docBeginGroup(getPageBBox());\n      doc.save();\n      let x, y, w, h;\n\n      if (this.attr('maskUnits') === 'userSpaceOnUse') {\n        x = this.getLength('x', this.getVWidth(), -0.1 * (bBox[2] - bBox[0]) + bBox[0]);\n        y = this.getLength('y', this.getVHeight(), -0.1 * (bBox[3] - bBox[1]) + bBox[1]);\n        w = this.getLength('width', this.getVWidth(), 1.2 * (bBox[2] - bBox[0]));\n        h = this.getLength('height', this.getVHeight(), 1.2 * (bBox[3] - bBox[1]));\n      } else {\n        x = this.getLength('x', this.getVWidth(), -0.1) * (bBox[2] - bBox[0]) + bBox[0];\n        y = this.getLength('y', this.getVHeight(), -0.1) * (bBox[3] - bBox[1]) + bBox[1];\n        w = this.getLength('width', this.getVWidth(), 1.2) * (bBox[2] - bBox[0]);\n        h = this.getLength('height', this.getVHeight(), 1.2) * (bBox[3] - bBox[1]);\n      }\n\n      doc.rect(x, y, w, h).clip();\n\n      if (this.attr('maskContentUnits') === 'objectBoundingBox') {\n        doc.transform(bBox[2] - bBox[0], 0, 0, bBox[3] - bBox[1], bBox[0], bBox[1]);\n      }\n\n      this.clip();\n      this.drawChildren(false, true);\n      doc.restore();\n      docEndGroup(group);\n      docApplyMask(group, true);\n    };\n  };\n\n  var SvgElemTextContainer = function (obj, inherits) {\n    SvgElemStylable.call(this, obj, inherits);\n    this.allowedChildren = ['tspan', '#text', '#cdata-section', 'a'];\n    this.isText = true;\n\n    this.getBoundingShape = function () {\n      let shape = new SvgShape();\n\n      for (let i = 0; i < this._pos.length; i++) {\n        let pos = this._pos[i];\n\n        if (!pos.hidden) {\n          let dx0 = pos.ascent * Math.sin(pos.rotate),\n              dy0 = -pos.ascent * Math.cos(pos.rotate),\n              dx1 = pos.descent * Math.sin(pos.rotate),\n              dy1 = -pos.descent * Math.cos(pos.rotate),\n              dx2 = pos.width * Math.cos(pos.rotate),\n              dy2 = pos.width * Math.sin(pos.rotate);\n          shape.M(pos.x + dx0, pos.y + dy0).L(pos.x + dx0 + dx2, pos.y + dy0 + dy2).M(pos.x + dx1 + dx2, pos.y + dy1 + dy2).L(pos.x + dx1, pos.y + dy1);\n        }\n      }\n\n      return shape;\n    };\n\n    this.drawTextInDocument = function (isClip, isMask) {\n      if (this.link && !isClip && !isMask) {\n        this.addLink();\n      }\n\n      if (this.get('text-decoration') === 'underline') {\n        this.decorate(0.05 * this._font.size, -0.075 * this._font.size, isClip, isMask);\n      }\n\n      if (this.get('text-decoration') === 'overline') {\n        this.decorate(0.05 * this._font.size, getAscent(this._font.font, this._font.size) + 0.075 * this._font.size, isClip, isMask);\n      }\n\n      let fill = this.getFill(isClip, isMask),\n          stroke = this.getStroke(isClip, isMask),\n          strokeWidth = this.get('stroke-width');\n\n      if (this._font.fauxBold) {\n        if (!stroke) {\n          stroke = fill;\n          strokeWidth = this._font.size * 0.03;\n        } else {\n          strokeWidth += this._font.size * 0.03;\n        }\n      }\n\n      let children = this.getChildren();\n\n      for (let i = 0; i < children.length; i++) {\n        let childElem = children[i];\n\n        switch (childElem.name) {\n          case 'tspan':\n          case 'textPath':\n          case 'a':\n            if (childElem.get('display') !== 'none') {\n              childElem.drawTextInDocument(isClip, isMask);\n            }\n\n            break;\n\n          case '#text':\n          case '#cdata-section':\n            if (this.get('visibility') === 'hidden') {\n              continue;\n            }\n\n            if (fill || stroke || isClip) {\n              if (fill) {\n                docFillColor(fill);\n              }\n\n              if (stroke && strokeWidth) {\n                docStrokeColor(stroke);\n                doc.lineWidth(strokeWidth).miterLimit(this.get('stroke-miterlimit')).lineJoin(this.get('stroke-linejoin')).lineCap(this.get('stroke-linecap')).dash(this.get('stroke-dasharray'), {\n                  phase: this.get('stroke-dashoffset')\n                });\n              }\n\n              docBeginText(this._font.font, this._font.size);\n              docSetTextMode(!!fill, !!stroke);\n\n              for (let j = 0, pos = childElem._pos; j < pos.length; j++) {\n                if (!pos[j].hidden && isNotEqual(pos[j].width, 0)) {\n                  let cos = Math.cos(pos[j].rotate),\n                      sin = Math.sin(pos[j].rotate),\n                      skew = this._font.fauxItalic ? -0.25 : 0;\n                  docSetTextMatrix(cos * pos[j].scale, sin * pos[j].scale, cos * skew - sin, sin * skew + cos, pos[j].x, pos[j].y);\n                  docWriteGlyph(pos[j].glyph);\n                }\n              }\n\n              docEndText();\n            }\n\n            break;\n        }\n      }\n\n      if (this.get('text-decoration') === 'line-through') {\n        this.decorate(0.05 * this._font.size, 0.5 * (getAscent(this._font.font, this._font.size) + getDescent(this._font.font, this._font.size)), isClip, isMask);\n      }\n    };\n\n    this.decorate = function (lineWidth, linePosition, isClip, isMask) {\n      let fill = this.getFill(isClip, isMask),\n          stroke = this.getStroke(isClip, isMask);\n\n      if (fill) {\n        docFillColor(fill);\n      }\n\n      if (stroke) {\n        docStrokeColor(stroke);\n        doc.lineWidth(this.get('stroke-width')).miterLimit(this.get('stroke-miterlimit')).lineJoin(this.get('stroke-linejoin')).lineCap(this.get('stroke-linecap')).dash(this.get('stroke-dasharray'), {\n          phase: this.get('stroke-dashoffset')\n        });\n      }\n\n      for (let j = 0, pos = this._pos; j < pos.length; j++) {\n        if (!pos[j].hidden && isNotEqual(pos[j].width, 0)) {\n          let dx0 = (linePosition + lineWidth / 2) * Math.sin(pos[j].rotate),\n              dy0 = -(linePosition + lineWidth / 2) * Math.cos(pos[j].rotate),\n              dx1 = (linePosition - lineWidth / 2) * Math.sin(pos[j].rotate),\n              dy1 = -(linePosition - lineWidth / 2) * Math.cos(pos[j].rotate),\n              dx2 = pos[j].width * Math.cos(pos[j].rotate),\n              dy2 = pos[j].width * Math.sin(pos[j].rotate);\n          new SvgShape().M(pos[j].x + dx0, pos[j].y + dy0).L(pos[j].x + dx0 + dx2, pos[j].y + dy0 + dy2).L(pos[j].x + dx1 + dx2, pos[j].y + dy1 + dy2).L(pos[j].x + dx1, pos[j].y + dy1).Z().insertInDocument();\n\n          if (fill && stroke) {\n            doc.fillAndStroke();\n          } else if (fill) {\n            doc.fill();\n          } else if (stroke) {\n            doc.stroke();\n          }\n        }\n      }\n    };\n  };\n\n  var SvgElemTextNode = function (obj, inherits) {\n    this.name = obj.nodeName;\n    this.textContent = obj.nodeValue;\n  };\n\n  var SvgElemTspan = function (obj, inherits) {\n    SvgElemTextContainer.call(this, obj, inherits);\n  };\n\n  var SvgElemTextPath = function (obj, inherits) {\n    SvgElemTextContainer.call(this, obj, inherits);\n    let pathObject, pathLength, temp;\n\n    if ((temp = this.attr('path')) && temp.trim() !== '') {\n      let pathLength = this.getLength('pathLength', this.getViewport());\n      this.pathObject = new SvgShape().path(temp);\n      this.pathLength = pathLength > 0 ? pathLength : this.pathObject.totalLength;\n      this.pathScale = this.pathObject.totalLength / this.pathLength;\n    } else if ((temp = this.getUrl('href') || this.getUrl('xlink:href')) && temp.nodeName === 'path') {\n      let pathElem = new SvgElemPath(temp, this);\n      this.pathObject = pathElem.shape.clone().transform(pathElem.get('transform'));\n      this.pathLength = this.chooseValue(pathElem.pathLength, this.pathObject.totalLength);\n      this.pathScale = this.pathObject.totalLength / this.pathLength;\n    }\n  };\n\n  var SvgElemText = function (obj, inherits) {\n    SvgElemTextContainer.call(this, obj, inherits);\n    this.allowedChildren = ['textPath', 'tspan', '#text', '#cdata-section', 'a'];\n\n    (function (textParentElem) {\n      let processedText = '',\n          remainingText = obj.textContent,\n          textPaths = [],\n          currentChunk = [],\n          currentAnchor,\n          currentDirection,\n          currentX = 0,\n          currentY = 0;\n\n      function doAnchoring() {\n        if (currentChunk.length) {\n          let last = currentChunk[currentChunk.length - 1];\n          let first = currentChunk[0];\n          let width = last.x + last.width - first.x;\n          let anchordx = {\n            'startltr': 0,\n            'middleltr': 0.5,\n            'endltr': 1,\n            'startrtl': 1,\n            'middlertl': 0.5,\n            'endrtl': 0\n          }[currentAnchor + currentDirection] * width || 0;\n\n          for (let i = 0; i < currentChunk.length; i++) {\n            currentChunk[i].x -= anchordx;\n          }\n        }\n\n        currentChunk = [];\n      }\n\n      function adjustLength(pos, length, spacingAndGlyphs) {\n        let firstChar = pos[0],\n            lastChar = pos[pos.length - 1],\n            startX = firstChar.x,\n            endX = lastChar.x + lastChar.width;\n\n        if (spacingAndGlyphs) {\n          let textScale = length / (endX - startX);\n\n          if (textScale > 0 && textScale < Infinity) {\n            for (let j = 0; j < pos.length; j++) {\n              pos[j].x = startX + textScale * (pos[j].x - startX);\n              pos[j].scale *= textScale;\n              pos[j].width *= textScale;\n            }\n          }\n        } else {\n          if (pos.length >= 2) {\n            let spaceDiff = (length - (endX - startX)) / (pos.length - 1);\n\n            for (let j = 0; j < pos.length; j++) {\n              pos[j].x += j * spaceDiff;\n            }\n          }\n        }\n\n        currentX += length - (endX - startX);\n      }\n\n      function recursive(currentElem, parentElem) {\n        currentElem._x = combineArrays(currentElem.getLengthList('x', currentElem.getVWidth()), parentElem ? parentElem._x.slice(parentElem._pos.length) : []);\n        currentElem._y = combineArrays(currentElem.getLengthList('y', currentElem.getVHeight()), parentElem ? parentElem._y.slice(parentElem._pos.length) : []);\n        currentElem._dx = combineArrays(currentElem.getLengthList('dx', currentElem.getVWidth()), parentElem ? parentElem._dx.slice(parentElem._pos.length) : []);\n        currentElem._dy = combineArrays(currentElem.getLengthList('dy', currentElem.getVHeight()), parentElem ? parentElem._dy.slice(parentElem._pos.length) : []);\n        currentElem._rot = combineArrays(currentElem.getNumberList('rotate'), parentElem ? parentElem._rot.slice(parentElem._pos.length) : []);\n        currentElem._defRot = currentElem.chooseValue(currentElem._rot[currentElem._rot.length - 1], parentElem && parentElem._defRot, 0);\n\n        if (currentElem.name === 'textPath') {\n          currentElem._y = [];\n        }\n\n        let fontOptions = {\n          fauxItalic: false,\n          fauxBold: false\n        },\n            fontNameorLink = fontCallback(currentElem.get('font-family'), currentElem.get('font-weight') === 'bold', currentElem.get('font-style') === 'italic', fontOptions);\n\n        try {\n          doc.font(fontNameorLink);\n        } catch (e) {\n          warningCallback('SVGElemText: failed to open font \"' + fontNameorLink + '\" in PDFKit');\n        }\n\n        currentElem._pos = [];\n        currentElem._index = 0;\n        currentElem._font = {\n          font: doc._font,\n          size: currentElem.get('font-size'),\n          fauxItalic: fontOptions.fauxItalic,\n          fauxBold: fontOptions.fauxBold\n        };\n        let textLength = currentElem.getLength('textLength', currentElem.getVWidth(), undefined),\n            spacingAndGlyphs = currentElem.attr('lengthAdjust') === 'spacingAndGlyphs',\n            wordSpacing = currentElem.get('word-spacing'),\n            letterSpacing = currentElem.get('letter-spacing'),\n            textAnchor = currentElem.get('text-anchor'),\n            textDirection = currentElem.get('direction'),\n            baseline = getBaseline(currentElem._font.font, currentElem._font.size, currentElem.get('alignment-baseline') || currentElem.get('dominant-baseline'), currentElem.get('baseline-shift'));\n\n        if (currentElem.name === 'textPath') {\n          doAnchoring();\n          currentX = currentY = 0;\n        }\n\n        let children = currentElem.getChildren();\n\n        for (let i = 0; i < children.length; i++) {\n          let childElem = children[i];\n\n          switch (childElem.name) {\n            case 'tspan':\n            case 'textPath':\n            case 'a':\n              recursive(childElem, currentElem);\n              break;\n\n            case '#text':\n            case '#cdata-section':\n              let rawText = childElem.textContent,\n                  renderedText = rawText,\n                  words;\n              childElem._font = currentElem._font;\n              childElem._pos = [];\n              remainingText = remainingText.substring(rawText.length);\n\n              if (currentElem.get('xml:space') === 'preserve') {\n                renderedText = renderedText.replace(/[\\s]/g, ' ');\n              } else {\n                renderedText = renderedText.replace(/[\\s]+/g, ' ');\n\n                if (processedText.match(/[\\s]$|^$/)) {\n                  renderedText = renderedText.replace(/^[\\s]/, '');\n                }\n\n                if (remainingText.match(/^[\\s]*$/)) {\n                  renderedText = renderedText.replace(/[\\s]$/, '');\n                }\n              }\n\n              processedText += rawText;\n\n              if (wordSpacing === 0) {\n                words = [renderedText];\n              } else {\n                words = renderedText.split(/(\\s)/);\n              }\n\n              for (let w = 0; w < words.length; w++) {\n                let pos = getTextPos(currentElem._font.font, currentElem._font.size, words[w]);\n\n                for (let j = 0; j < pos.length; j++) {\n                  let index = currentElem._index,\n                      xAttr = currentElem._x[index],\n                      yAttr = currentElem._y[index],\n                      dxAttr = currentElem._dx[index],\n                      dyAttr = currentElem._dy[index],\n                      rotAttr = currentElem._rot[index],\n                      continuous = !(w === 0 && j === 0);\n\n                  if (xAttr !== undefined) {\n                    continuous = false;\n                    doAnchoring();\n                    currentX = xAttr;\n                  }\n\n                  if (yAttr !== undefined) {\n                    continuous = false;\n                    doAnchoring();\n                    currentY = yAttr;\n                  }\n\n                  if (dxAttr !== undefined) {\n                    continuous = false;\n                    currentX += dxAttr;\n                  }\n\n                  if (dyAttr !== undefined) {\n                    continuous = false;\n                    currentY += dyAttr;\n                  }\n\n                  if (rotAttr !== undefined || currentElem._defRot !== 0) {\n                    continuous = false;\n                  }\n\n                  let position = {\n                    glyph: pos[j].glyph,\n                    rotate: Math.PI / 180 * currentElem.chooseValue(rotAttr, currentElem._defRot),\n                    x: currentX + pos[j].xOffset,\n                    y: currentY + baseline + pos[j].yOffset,\n                    width: pos[j].width,\n                    ascent: getAscent(currentElem._font.font, currentElem._font.size),\n                    descent: getDescent(currentElem._font.font, currentElem._font.size),\n                    scale: 1,\n                    hidden: false,\n                    continuous: continuous\n                  };\n                  currentChunk.push(position);\n\n                  childElem._pos.push(position);\n\n                  currentElem._pos.push(position);\n\n                  currentElem._index += pos[j].unicode.length;\n\n                  if (currentChunk.length === 1) {\n                    currentAnchor = textAnchor;\n                    currentDirection = textDirection;\n                  }\n\n                  currentX += pos[j].xAdvance + letterSpacing;\n                  currentY += pos[j].yAdvance;\n                }\n\n                if (words[w] === ' ') {\n                  currentX += wordSpacing;\n                }\n              }\n\n              break;\n\n            default:\n              remainingText = remainingText.substring(childElem.textContent.length);\n          }\n        }\n\n        if (textLength && currentElem._pos.length) {\n          adjustLength(currentElem._pos, textLength, spacingAndGlyphs);\n        }\n\n        if (currentElem.name === 'textPath' || currentElem.name === 'text') {\n          doAnchoring();\n        }\n\n        if (currentElem.name === 'textPath') {\n          textPaths.push(currentElem);\n          let pathObject = currentElem.pathObject;\n\n          if (pathObject) {\n            currentX = pathObject.endPoint[0];\n            currentY = pathObject.endPoint[1];\n          }\n        }\n\n        if (parentElem) {\n          parentElem._pos = parentElem._pos.concat(currentElem._pos);\n          parentElem._index += currentElem._index;\n        }\n      }\n\n      function textOnPath(currentElem) {\n        let pathObject = currentElem.pathObject,\n            pathLength = currentElem.pathLength,\n            pathScale = currentElem.pathScale;\n\n        if (pathObject) {\n          let textOffset = currentElem.getLength('startOffset', pathLength, 0);\n\n          for (let j = 0; j < currentElem._pos.length; j++) {\n            let charMidX = textOffset + currentElem._pos[j].x + 0.5 * currentElem._pos[j].width;\n\n            if (charMidX > pathLength || charMidX < 0) {\n              currentElem._pos[j].hidden = true;\n            } else {\n              let pointOnPath = pathObject.getPointAtLength(charMidX * pathScale);\n\n              if (isNotEqual(pathScale, 1)) {\n                currentElem._pos[j].scale *= pathScale;\n                currentElem._pos[j].width *= pathScale;\n              }\n\n              currentElem._pos[j].x = pointOnPath[0] - 0.5 * currentElem._pos[j].width * Math.cos(pointOnPath[2]) - currentElem._pos[j].y * Math.sin(pointOnPath[2]);\n              currentElem._pos[j].y = pointOnPath[1] - 0.5 * currentElem._pos[j].width * Math.sin(pointOnPath[2]) + currentElem._pos[j].y * Math.cos(pointOnPath[2]);\n              currentElem._pos[j].rotate = pointOnPath[2] + currentElem._pos[j].rotate;\n              currentElem._pos[j].continuous = false;\n            }\n          }\n        } else {\n          for (let j = 0; j < currentElem._pos.length; j++) {\n            currentElem._pos[j].hidden = true;\n          }\n        }\n      }\n\n      recursive(textParentElem, null);\n\n      for (let i = 0; i < textPaths.length; i++) {\n        textOnPath(textPaths[i]);\n      }\n    })(this);\n\n    this.getTransformation = function () {\n      return this.get('transform');\n    };\n\n    this.drawInDocument = function (isClip, isMask) {\n      doc.save();\n      this.transform();\n      this.clip();\n      let masked = this.mask(),\n          group;\n\n      if (masked) {\n        group = docBeginGroup(getPageBBox());\n      }\n\n      this.drawTextInDocument(isClip, isMask);\n\n      if (group) {\n        docEndGroup(group);\n        docInsertGroup(group);\n      }\n\n      doc.restore();\n    };\n  };\n\n  options = options || {};\n  var pxToPt = options.assumePt ? 1 : 72 / 96,\n      // 1px = 72/96pt, but only if assumePt is false\n  viewportWidth = (options.width || doc.page.width) / pxToPt,\n      viewportHeight = (options.height || doc.page.height) / pxToPt,\n      preserveAspectRatio = options.preserveAspectRatio || null,\n      // default to null so that the attr can override if not passed\n  useCSS = options.useCSS && typeof SVGElement !== 'undefined' && svg instanceof SVGElement && typeof getComputedStyle === 'function',\n      warningCallback = options.warningCallback,\n      fontCallback = options.fontCallback,\n      imageCallback = options.imageCallback,\n      colorCallback = options.colorCallback,\n      documentCallback = options.documentCallback,\n      precision = Math.ceil(Math.max(1, options.precision)) || 3,\n      groupStack = [],\n      documentCache = {},\n      links = [],\n      styleRules = [];\n\n  if (typeof warningCallback !== 'function') {\n    warningCallback = function (str) {\n      if (typeof console !== undefined && typeof console.warn === 'function') {\n        console.warn(str);\n      }\n    };\n  }\n\n  if (typeof fontCallback !== 'function') {\n    fontCallback = function (family, bold, italic, fontOptions) {\n      // Check if the font is already registered in the document\n      if (bold && italic) {\n        if (doc._registeredFonts.hasOwnProperty(family + '-BoldItalic')) {\n          return family + '-BoldItalic';\n        } else if (doc._registeredFonts.hasOwnProperty(family + '-Italic')) {\n          fontOptions.fauxBold = true;\n          return family + '-Italic';\n        } else if (doc._registeredFonts.hasOwnProperty(family + '-Bold')) {\n          fontOptions.fauxItalic = true;\n          return family + '-Bold';\n        } else if (doc._registeredFonts.hasOwnProperty(family)) {\n          fontOptions.fauxBold = true;\n          fontOptions.fauxItalic = true;\n          return family;\n        }\n      }\n\n      if (bold && !italic) {\n        if (doc._registeredFonts.hasOwnProperty(family + '-Bold')) {\n          return family + '-Bold';\n        } else if (doc._registeredFonts.hasOwnProperty(family)) {\n          fontOptions.fauxBold = true;\n          return family;\n        }\n      }\n\n      if (!bold && italic) {\n        if (doc._registeredFonts.hasOwnProperty(family + '-Italic')) {\n          return family + '-Italic';\n        } else if (doc._registeredFonts.hasOwnProperty(family)) {\n          fontOptions.fauxItalic = true;\n          return family;\n        }\n      }\n\n      if (!bold && !italic) {\n        if (doc._registeredFonts.hasOwnProperty(family)) {\n          return family;\n        }\n      } // Use standard fonts as fallback\n\n\n      if (family.match(/(?:^|,)\\s*serif\\s*$/)) {\n        if (bold && italic) {\n          return 'Times-BoldItalic';\n        }\n\n        if (bold && !italic) {\n          return 'Times-Bold';\n        }\n\n        if (!bold && italic) {\n          return 'Times-Italic';\n        }\n\n        if (!bold && !italic) {\n          return 'Times-Roman';\n        }\n      } else if (family.match(/(?:^|,)\\s*monospace\\s*$/)) {\n        if (bold && italic) {\n          return 'Courier-BoldOblique';\n        }\n\n        if (bold && !italic) {\n          return 'Courier-Bold';\n        }\n\n        if (!bold && italic) {\n          return 'Courier-Oblique';\n        }\n\n        if (!bold && !italic) {\n          return 'Courier';\n        }\n      } else if (family.match(/(?:^|,)\\s*sans-serif\\s*$/) || true) {\n        if (bold && italic) {\n          return 'Helvetica-BoldOblique';\n        }\n\n        if (bold && !italic) {\n          return 'Helvetica-Bold';\n        }\n\n        if (!bold && italic) {\n          return 'Helvetica-Oblique';\n        }\n\n        if (!bold && !italic) {\n          return 'Helvetica';\n        }\n      }\n    };\n  }\n\n  if (typeof imageCallback !== 'function') {\n    imageCallback = function (link) {\n      return link.replace(/\\s+/g, '');\n    };\n  }\n\n  if (typeof colorCallback !== 'function') {\n    colorCallback = null;\n  } else {\n    for (let color in DefaultColors) {\n      let newColor = colorCallback(DefaultColors[color]);\n      DefaultColors[color][0] = newColor[0];\n      DefaultColors[color][1] = newColor[1];\n    }\n  }\n\n  if (typeof documentCallback !== 'function') {\n    documentCallback = null;\n  }\n\n  if (typeof svg === 'string') {\n    svg = parseXml(svg);\n  }\n\n  if (svg) {\n    let styles = svg.getElementsByTagName('style');\n\n    for (let i = 0; i < styles.length; i++) {\n      styleRules = styleRules.concat(parseStyleSheet(styles[i].textContent));\n    }\n\n    let elem = createSVGElement(svg, null);\n\n    if (typeof elem.drawInDocument === 'function') {\n      if (options.useCSS && !useCSS) {\n        warningCallback('SVGtoPDF: useCSS option can only be used for SVG *elements* in compatible browsers');\n      }\n\n      let savedFillColor = doc._fillColor;\n      doc.save().translate(x || 0, y || 0).scale(pxToPt);\n      elem.drawInDocument();\n\n      for (let i = 0; i < links.length; i++) {\n        doc.page.annotations.push(links[i]);\n      }\n\n      doc.restore();\n      doc._fillColor = savedFillColor;\n    } else {\n      warningCallback('SVGtoPDF: this element can\\'t be rendered directly: ' + svg.nodeName);\n    }\n  } else {\n    warningCallback('SVGtoPDF: the input does not look like a valid SVG');\n  }\n};\n\nif (typeof module !== 'undefined' && module && typeof module.exports !== 'undefined') {\n  module.exports = SVGtoPDF;\n}","map":{"version":3,"sources":["/home/julianallende/Desktop/proyecto_sapo/client/node_modules/svg-to-pdfkit/source.js"],"names":["SVGtoPDF","doc","svg","x","y","options","NamedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","DefaultColors","transparent","Entities","quot","amp","lt","gt","apos","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","PathArguments","A","a","C","c","H","h","L","l","M","m","Q","q","S","s","T","t","V","v","Z","z","PathFlags","A3","A4","a3","a4","Properties","inherit","initial","undefined","values","normal","css","docBeginGroup","bbox","group","PDFGroup","name","_groupCount","resources","ref","xobj","Type","Subtype","FormType","BBox","Group","CS","I","K","Resources","write","savedMatrix","_ctm","savedPage","page","groupStack","push","width","height","data","fonts","xobjects","ext_gstates","patterns","docEndGroup","pop","Object","keys","length","Font","XObject","ExtGState","Pattern","end","docInsertGroup","addContent","docApplyMask","clip","_maskCount","gstate","CA","ca","BM","SMask","G","BC","docCreatePattern","dx","dy","matrix","pattern","PDFPattern","docUsePattern","stroke","_patternCount","PatternType","PaintType","TilingType","XStep","YStep","Matrix","multiplyMatrix","ProcSet","temp","docBeginText","font","size","id","docSetTextMatrix","b","d","e","f","validateNumber","docSetTextMode","fill","mode","docWriteGlyph","glyph","docEndText","docFillColor","color","constructor","fillOpacity","fillColor","docStrokeColor","strokeOpacity","strokeColor","docInsertLink","w","url","Rect","Border","URI","String","links","parseXml","xml","SvgNode","tag","type","value","error","nodeName","nodeValue","nodeType","attributes","create","childNodes","parentNode","textContent","classList","prototype","getAttribute","attr","getElementById","result","recursive","node","i","getElementsByTagName","parser","StringParser","trim","child","match","decodeEntities","split","warningCallback","matchAll","str","replace","mt","m0","m1","m2","fromCharCode","parseInt","parseColor","raw","slice","parseFloat","colorCallback","opacityToColor","opacity","isMask","newColor","newOpacity","multiply","arguments","transformPoint","p","getGlobalMatrix","ctm","getPageBBox","SvgShape","transform","inverseMatrix","getBoundingBox","dt","validateMatrix","m3","m4","m5","isNotEqual","solveEquation","curve","isEqual","Math","sqrt","getCurveValue","number","abs","n","round","isArrayLike","parseTranform","func","nums","parser2","temp2","matchNumber","Number","matchSeparator","PI","cos","sin","parseAspectRatio","aspectRatio","availWidth","availHeight","elemWidth","elemHeight","initAlign","ratioType","xAlign","yAlign","scaleX","scaleY","max","min","parseStyleAttr","key","fontFamily","fontSize","fontStyle","fontWeight","fontVariant","parts","parseSelector","ids","classes","tags","specificity","parseStyleSheet","rules","rule","selectors","selector","matchesSelector","elem","indexOf","getStyle","specificities","styleRules","combineArrays","array1","array2","concat","getAscent","ascender","maxY","scale","getDescent","descender","minY","getXHeight","xHeight","getBaseline","baseline","shift","dy1","dy2","getTextPos","text","encoded","encode","hex","pos","unicode","charCodeAt","advanceWidth","xOffset","yOffset","xAdvance","yAdvance","createSVGElement","obj","inherits","SvgElemUse","SvgElemSymbol","SvgElemGroup","SvgElemLink","SvgElemSvg","SVGElemImage","SvgElemRect","SvgElemCircle","SvgElemEllipse","SvgElemLine","SvgElemPolyline","SvgElemPolygon","SvgElemPath","SvgElemText","SvgElemTspan","SvgElemTextPath","SvgElemTextNode","SvgElem","exp","all","index","substring","matchSpace","matchLengthUnit","BezierSegment","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","divisions","precision","equationX","equationY","derivativeX","derivativeY","lengthMap","totalLength","startPoint","atan2","endPoint","minX","maxX","rootsX","rootsY","getPointAtLength","l1","l2","LineSegment","r","pathCommands","pathSegments","startX","startY","currX","currY","lastCom","lastCtrlX","lastCtrlY","move","line","segment","close","addCommand","apply","hasStart","hasEnd","cx","cy","rx","ry","fi","fa","fs","x1","y1","x2","y2","th1","th2","segms","ceil","th3","th4","endX","endY","path","command","Infinity","addBounds","bbox1","j","mergeShape","shape","clone","insertInDocument","moveTo","lineTo","bezierCurveTo","closePath","getSubPaths","subPaths","getMarkers","markers","subPath","subPathMarkers","startMarker","prevEndMarker","endMarker","styleCache","childrenCache","isOuterElement","stack","style","useCSS","getComputedStyle","allowedChildren","resolveUrl","file","svgObj","documentCallback","svgs","documentCache","computeUnits","unit","percent","isFontSize","getViewport","get","computeLength","temp1","computeLengthList","strict","getLength","getLengthList","getUrl","getNumberList","getViewbox","viewBox","getPercent","chooseValue","args","keyInfo","parsed","isNaN","object","fallbackColor","SvgElemGradient","SvgElemPattern","dasharray","getChildren","children","getParentVWidth","getVWidth","viewportWidth","getParentVHeight","getVHeight","viewportHeight","getParentViewport","getBoundingShape","SvgElemStylable","call","getTransformation","clipPath","SvgElemClipPath","useMask","mask","SvgElemMask","getFill","isClip","getPaint","getStroke","SvgElemHasChildren","childShape","drawChildren","drawInDocument","SvgElemContainer","drawContent","clipped","masked","save","restore","link","addLink","isText","preserveAspectRatio","imageCallback","openImage","rect","translate","fallback","_attr","_getChildren","bBox","gOpacity","bBoxUnitsPattern","bBoxUnitsContent","aspectRatioMatrix","stopColor","bBoxUnits","spread","grad","r2","nAfter","nBefore","nTotal","pow","multiplier","inv","corner1","corner2","corner3","corner4","linearGradient","radialGradient","offset","inOrder","_colorSpace","stop","setTransform","SvgElemBasicShape","dashScale","lineWidth","lineCap","circle","dashArray","dashOffset","miterLimit","lineJoin","dash","phase","fillAndStroke","markerStart","markerMid","markerEnd","markersPos","marker","SvgElemMarker","drawMarker","points","pathLength","posArray","strokeWidth","orient","units","rotate","refX","refY","SvgElemTextContainer","_pos","hidden","dx0","ascent","dy0","dx1","descent","dx2","drawTextInDocument","decorate","_font","fauxBold","childElem","skew","fauxItalic","linePosition","pathObject","pathScale","pathElem","textParentElem","processedText","remainingText","textPaths","currentChunk","currentAnchor","currentDirection","currentX","currentY","doAnchoring","last","first","anchordx","adjustLength","spacingAndGlyphs","firstChar","lastChar","textScale","spaceDiff","currentElem","parentElem","_x","_y","_dx","_dy","_rot","_defRot","fontOptions","fontNameorLink","fontCallback","_index","textLength","wordSpacing","letterSpacing","textAnchor","textDirection","rawText","renderedText","words","xAttr","yAttr","dxAttr","dyAttr","rotAttr","continuous","position","textOnPath","textOffset","charMidX","pointOnPath","pxToPt","assumePt","SVGElement","console","warn","family","bold","italic","_registeredFonts","hasOwnProperty","styles","savedFillColor","_fillColor","annotations","module","exports"],"mappings":"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","sourcesContent":["var SVGtoPDF = function(doc, svg, x, y, options) {\r\n    \"use strict\";\r\n\r\n    const NamedColors = {aliceblue: [240,248,255], antiquewhite: [250,235,215], aqua: [0,255,255], aquamarine: [127,255,212], azure: [240,255,255], beige: [245,245,220], bisque: [255,228,196], black: [0,0,0], blanchedalmond: [255,235,205], blue: [0,0,255], blueviolet: [138,43,226], brown: [165,42,42], burlywood: [222,184,135], cadetblue: [95,158,160], chartreuse: [127,255,0],\r\n      chocolate: [210,105,30], coral: [255,127,80], cornflowerblue: [100,149,237], cornsilk: [255,248,220], crimson: [220,20,60], cyan: [0,255,255], darkblue: [0,0,139], darkcyan: [0,139,139], darkgoldenrod: [184,134,11], darkgray: [169,169,169], darkgrey: [169,169,169], darkgreen: [0,100,0], darkkhaki: [189,183,107], darkmagenta: [139,0,139], darkolivegreen: [85,107,47],\r\n      darkorange: [255,140,0], darkorchid: [153,50,204], darkred: [139,0,0], darksalmon: [233,150,122], darkseagreen: [143,188,143], darkslateblue: [72,61,139], darkslategray: [47,79,79], darkslategrey: [47,79,79], darkturquoise: [0,206,209], darkviolet: [148,0,211], deeppink: [255,20,147], deepskyblue: [0,191,255], dimgray: [105,105,105], dimgrey: [105,105,105],\r\n      dodgerblue: [30,144,255], firebrick: [178,34,34], floralwhite: [255,250,240], forestgreen: [34,139,34], fuchsia: [255,0,255], gainsboro: [220,220,220], ghostwhite: [248,248,255], gold: [255,215,0], goldenrod: [218,165,32], gray: [128,128,128], grey: [128,128,128], green: [0,128,0], greenyellow: [173,255,47], honeydew: [240,255,240], hotpink: [255,105,180],\r\n      indianred: [205,92,92], indigo: [75,0,130], ivory: [255,255,240], khaki: [240,230,140], lavender: [230,230,250], lavenderblush: [255,240,245], lawngreen: [124,252,0], lemonchiffon: [255,250,205], lightblue: [173,216,230], lightcoral: [240,128,128], lightcyan: [224,255,255], lightgoldenrodyellow: [250,250,210], lightgray: [211,211,211], lightgrey: [211,211,211],\r\n      lightgreen: [144,238,144], lightpink: [255,182,193], lightsalmon: [255,160,122], lightseagreen: [32,178,170], lightskyblue: [135,206,250], lightslategray: [119,136,153], lightslategrey: [119,136,153], lightsteelblue: [176,196,222], lightyellow: [255,255,224], lime: [0,255,0], limegreen: [50,205,50], linen: [250,240,230], magenta: [255,0,255], maroon: [128,0,0],\r\n      mediumaquamarine: [102,205,170], mediumblue: [0,0,205], mediumorchid: [186,85,211], mediumpurple: [147,112,219], mediumseagreen: [60,179,113], mediumslateblue: [123,104,238], mediumspringgreen: [0,250,154], mediumturquoise: [72,209,204], mediumvioletred: [199,21,133], midnightblue: [25,25,112], mintcream: [245,255,250], mistyrose: [255,228,225], moccasin: [255,228,181],\r\n      navajowhite: [255,222,173], navy: [0,0,128], oldlace: [253,245,230], olive: [128,128,0], olivedrab: [107,142,35], orange: [255,165,0], orangered: [255,69,0], orchid: [218,112,214], palegoldenrod: [238,232,170], palegreen: [152,251,152], paleturquoise: [175,238,238], palevioletred: [219,112,147], papayawhip: [255,239,213], peachpuff: [255,218,185], peru: [205,133,63],\r\n      pink: [255,192,203], plum: [221,160,221], powderblue: [176,224,230], purple: [128,0,128], rebeccapurple: [102,51,153], red: [255,0,0], rosybrown: [188,143,143], royalblue: [65,105,225], saddlebrown: [139,69,19], salmon: [250,128,114], sandybrown: [244,164,96], seagreen: [46,139,87], seashell: [255,245,238], sienna: [160,82,45], silver: [192,192,192], skyblue: [135,206,235],\r\n      slateblue: [106,90,205], slategray: [112,128,144], slategrey: [112,128,144], snow: [255,250,250], springgreen: [0,255,127], steelblue: [70,130,180], tan: [210,180,140], teal: [0,128,128], thistle: [216,191,216], tomato: [255,99,71], turquoise: [64,224,208], violet: [238,130,238], wheat: [245,222,179], white: [255,255,255], whitesmoke: [245,245,245], yellow: [255,255,0]};\r\n    const DefaultColors = {black: [NamedColors.black, 1], white: [NamedColors.white, 1], transparent: [NamedColors.black, 0]};\r\n    const Entities = {quot: 34, amp: 38, lt: 60, gt: 62, apos: 39, OElig: 338, oelig: 339, Scaron: 352, scaron: 353, Yuml: 376, circ: 710, tilde: 732, ensp: 8194, emsp: 8195, thinsp: 8201, zwnj: 8204, zwj: 8205, lrm: 8206, rlm: 8207, ndash: 8211, mdash: 8212, lsquo: 8216, rsquo: 8217, sbquo: 8218, ldquo: 8220, rdquo: 8221, bdquo: 8222, dagger: 8224, Dagger: 8225, permil: 8240, lsaquo: 8249,\r\n      rsaquo: 8250, euro: 8364, nbsp: 160, iexcl: 161, cent: 162, pound: 163, curren: 164, yen: 165, brvbar: 166, sect: 167, uml: 168, copy: 169, ordf: 170, laquo: 171, not: 172, shy: 173, reg: 174, macr: 175, deg: 176, plusmn: 177, sup2: 178, sup3: 179, acute: 180, micro: 181, para: 182, middot: 183, cedil: 184, sup1: 185, ordm: 186, raquo: 187, frac14: 188, frac12: 189, frac34: 190,\r\n      iquest: 191, Agrave: 192, Aacute: 193, Acirc: 194, Atilde: 195, Auml: 196, Aring: 197, AElig: 198, Ccedil: 199, Egrave: 200, Eacute: 201, Ecirc: 202, Euml: 203, Igrave: 204, Iacute: 205, Icirc: 206, Iuml: 207, ETH: 208, Ntilde: 209, Ograve: 210, Oacute: 211, Ocirc: 212, Otilde: 213, Ouml: 214, times: 215, Oslash: 216, Ugrave: 217, Uacute: 218, Ucirc: 219, Uuml: 220, Yacute: 221,\r\n      THORN: 222, szlig: 223, agrave: 224, aacute: 225, acirc: 226, atilde: 227, auml: 228, aring: 229, aelig: 230, ccedil: 231, egrave: 232, eacute: 233, ecirc: 234, euml: 235, igrave: 236, iacute: 237, icirc: 238, iuml: 239, eth: 240, ntilde: 241, ograve: 242, oacute: 243, ocirc: 244, otilde: 245, ouml: 246, divide: 247, oslash: 248, ugrave: 249, uacute: 250, ucirc: 251, uuml: 252,\r\n      yacute: 253, thorn: 254, yuml: 255, fnof: 402, Alpha: 913, Beta: 914, Gamma: 915, Delta: 916, Epsilon: 917, Zeta: 918, Eta: 919, Theta: 920, Iota: 921, Kappa: 922, Lambda: 923, Mu: 924, Nu: 925, Xi: 926, Omicron: 927, Pi: 928, Rho: 929, Sigma: 931, Tau: 932, Upsilon: 933, Phi: 934, Chi: 935, Psi: 936, Omega: 937, alpha: 945, beta: 946, gamma: 947, delta: 948, epsilon: 949,\r\n      zeta: 950, eta: 951, theta: 952, iota: 953, kappa: 954, lambda: 955, mu: 956, nu: 957, xi: 958, omicron: 959, pi: 960, rho: 961, sigmaf: 962, sigma: 963, tau: 964, upsilon: 965, phi: 966, chi: 967, psi: 968, omega: 969, thetasym: 977, upsih: 978, piv: 982, bull: 8226, hellip: 8230, prime: 8242, Prime: 8243, oline: 8254, frasl: 8260, weierp: 8472, image: 8465, real: 8476,\r\n      trade: 8482, alefsym: 8501, larr: 8592, uarr: 8593, rarr: 8594, darr: 8595, harr: 8596, crarr: 8629, lArr: 8656, uArr: 8657, rArr: 8658, dArr: 8659, hArr: 8660, forall: 8704, part: 8706, exist: 8707, empty: 8709, nabla: 8711, isin: 8712, notin: 8713, ni: 8715, prod: 8719, sum: 8721, minus: 8722, lowast: 8727, radic: 8730, prop: 8733, infin: 8734, ang: 8736, and: 8743, or: 8744,\r\n      cap: 8745, cup: 8746, int: 8747, there4: 8756, sim: 8764, cong: 8773, asymp: 8776, ne: 8800, equiv: 8801, le: 8804, ge: 8805, sub: 8834, sup: 8835, nsub: 8836, sube: 8838, supe: 8839, oplus: 8853, otimes: 8855, perp: 8869, sdot: 8901, lceil: 8968, rceil: 8969, lfloor: 8970, rfloor: 8971, lang: 9001, rang: 9002, loz: 9674, spades: 9824, clubs: 9827, hearts: 9829, diams: 9830};\r\n    const PathArguments = {A: 7, a: 7, C: 6, c: 6, H: 1, h: 1, L: 2, l: 2, M: 2, m: 2, Q: 4, q: 4, S: 4, s: 4, T: 2, t: 2, V: 1, v: 1, Z: 0, z: 0};\r\n    const PathFlags = {A3: true, A4: true, a3: true, a4: true};\r\n    const Properties = {\r\n      'color':              {inherit: true, initial: undefined},\r\n      'visibility':         {inherit: true, initial: 'visible', values: {'hidden': 'hidden', 'collapse': 'hidden', 'visible':'visible'}},\r\n      'fill':               {inherit: true, initial: DefaultColors.black},\r\n      'stroke':             {inherit: true, initial: 'none'},\r\n      'stop-color':         {inherit: false, initial: DefaultColors.black},\r\n      'fill-opacity':       {inherit: true, initial: 1},\r\n      'stroke-opacity':     {inherit: true, initial: 1},\r\n      'stop-opacity':       {inherit: false, initial: 1},\r\n      'fill-rule':          {inherit: true, initial: 'nonzero', values: {'nonzero':'nonzero', 'evenodd':'evenodd'}},\r\n      'clip-rule':          {inherit: true, initial: 'nonzero', values: {'nonzero':'nonzero', 'evenodd':'evenodd'}},\r\n      'stroke-width':       {inherit: true, initial: 1},\r\n      'stroke-dasharray':   {inherit: true, initial: []},\r\n      'stroke-dashoffset':  {inherit: true, initial: 0},\r\n      'stroke-miterlimit':  {inherit: true, initial: 4},\r\n      'stroke-linejoin':    {inherit: true, initial: 'miter', values: {'miter':'miter', 'round':'round', 'bevel':'bevel'}},\r\n      'stroke-linecap':     {inherit: true, initial: 'butt', values: {'butt':'butt', 'round':'round', 'square':'square'}},\r\n      'font-size':          {inherit: true, initial: 16, values: {'xx-small':9, 'x-small':10, 'small':13, 'medium':16, 'large':18, 'x-large':24, 'xx-large':32}},\r\n      'font-family':        {inherit: true, initial: 'sans-serif'},\r\n      'font-weight':        {inherit: true, initial: 'normal', values: {'600':'bold', '700':'bold', '800':'bold', '900':'bold', 'bold':'bold', 'bolder':'bold', '500':'normal', '400':'normal', '300':'normal', '200':'normal', '100':'normal', 'normal':'normal', 'lighter':'normal'}},\r\n      'font-style':         {inherit: true, initial: 'normal', values: {'italic':'italic', 'oblique':'italic', 'normal':'normal'}},\r\n      'text-anchor':        {inherit: true, initial: 'start', values: {'start':'start', 'middle':'middle', 'end':'end'}},\r\n      'direction':          {inherit: true, initial: 'ltr', values: {'ltr':'ltr', 'rtl':'rtl'}},\r\n      'dominant-baseline':  {inherit: true, initial: 'baseline', values: {'auto':'baseline', 'baseline':'baseline', 'before-edge':'before-edge', 'text-before-edge':'before-edge', 'middle':'middle', 'central':'central', 'after-edge':'after-edge', 'text-after-edge':'after-edge', 'ideographic':'ideographic', 'alphabetic':'alphabetic', 'hanging':'hanging', 'mathematical':'mathematical'}},\r\n      'alignment-baseline': {inherit: false, initial: undefined, values: {'auto':'baseline', 'baseline':'baseline', 'before-edge':'before-edge', 'text-before-edge':'before-edge', 'middle':'middle', 'central':'central', 'after-edge':'after-edge', 'text-after-edge':'after-edge', 'ideographic':'ideographic', 'alphabetic':'alphabetic', 'hanging':'hanging', 'mathematical':'mathematical'}},\r\n      'baseline-shift':     {inherit: true, initial: 'baseline', values: {'baseline':'baseline', 'sub':'sub', 'super':'super'}},\r\n      'word-spacing':       {inherit: true, initial: 0, values: {normal:0}},\r\n      'letter-spacing':     {inherit: true, initial: 0, values: {normal:0}},\r\n      'text-decoration':    {inherit: false, initial: 'none', values: {'none':'none', 'underline':'underline', 'overline':'overline', 'line-through':'line-through'}},\r\n      'xml:space':          {inherit: true, initial: 'default', css: 'white-space', values: {'preserve':'preserve', 'default':'default', 'pre':'preserve', 'pre-line':'preserve', 'pre-wrap':'preserve', 'nowrap': 'default'}},\r\n      'marker-start':       {inherit: true, initial: 'none'},\r\n      'marker-mid':         {inherit: true, initial: 'none'},\r\n      'marker-end':         {inherit: true, initial: 'none'},\r\n      'opacity':            {inherit: false, initial: 1},\r\n      'transform':          {inherit: false, initial: [1, 0, 0, 1, 0, 0]},\r\n      'display':            {inherit: false, initial: 'inline', values: {'none':'none', 'inline':'inline', 'block':'inline'}},\r\n      'clip-path':          {inherit: false, initial: 'none'},\r\n      'mask':               {inherit: false, initial: 'none'},\r\n      'overflow':           {inherit: false, initial: 'hidden', values: {'hidden':'hidden', 'scroll':'hidden', 'visible':'visible'}}\r\n    };\r\n\r\n    function docBeginGroup(bbox) {\r\n      let group = new (function PDFGroup() {})();\r\n      group.name = 'G' + (doc._groupCount = (doc._groupCount || 0) + 1);\r\n      group.resources = doc.ref();\r\n      group.xobj = doc.ref({\r\n        Type: 'XObject',\r\n        Subtype: 'Form',\r\n        FormType: 1,\r\n        BBox: bbox,\r\n        Group: {S: 'Transparency', CS: 'DeviceRGB', I: true, K: false},\r\n        Resources: group.resources\r\n      });\r\n      group.xobj.write('');\r\n      group.savedMatrix = doc._ctm;\r\n      group.savedPage = doc.page;\r\n      groupStack.push(group);\r\n      doc._ctm = [1, 0, 0, 1, 0, 0];\r\n      doc.page = {\r\n        width: doc.page.width, height: doc.page.height,\r\n        write: function(data) {group.xobj.write(data);},\r\n        fonts: {}, xobjects: {}, ext_gstates: {}, patterns: {}\r\n      };\r\n      return group;\r\n    }\r\n    function docEndGroup(group) {\r\n      if (group !== groupStack.pop()) {throw('Group not matching');}\r\n      if (Object.keys(doc.page.fonts).length) {group.resources.data.Font = doc.page.fonts;}\r\n      if (Object.keys(doc.page.xobjects).length) {group.resources.data.XObject = doc.page.xobjects;}\r\n      if (Object.keys(doc.page.ext_gstates).length) {group.resources.data.ExtGState = doc.page.ext_gstates;}\r\n      if (Object.keys(doc.page.patterns).length) {group.resources.data.Pattern = doc.page.patterns;}\r\n      group.resources.end();\r\n      group.xobj.end();\r\n      doc._ctm = group.savedMatrix;\r\n      doc.page = group.savedPage;\r\n    }\r\n    function docInsertGroup(group) {\r\n      doc.page.xobjects[group.name] = group.xobj;\r\n      doc.addContent('/' + group.name + ' Do');\r\n    }\r\n    function docApplyMask(group, clip) {\r\n      let name = 'M' + (doc._maskCount = (doc._maskCount || 0) + 1);\r\n      let gstate = doc.ref({\r\n        Type: 'ExtGState', CA: 1, ca: 1, BM: 'Normal',\r\n        SMask: {S: 'Luminosity', G: group.xobj, BC: (clip ? [0, 0, 0] : [1, 1, 1])}\r\n      });\r\n      gstate.end();\r\n      doc.page.ext_gstates[name] = gstate;\r\n      doc.addContent('/' + name + ' gs');\r\n    }\r\n    function docCreatePattern(group, dx, dy, matrix) {\r\n      let pattern = new (function PDFPattern() {})();\r\n      pattern.group = group;\r\n      pattern.dx = dx;\r\n      pattern.dy = dy;\r\n      pattern.matrix = matrix || [1, 0, 0, 1, 0, 0];\r\n      return pattern;\r\n    }\r\n    function docUsePattern(pattern, stroke) {\r\n      let name = 'P' + (doc._patternCount = (doc._patternCount || 0) + 1);\r\n      let ref = doc.ref({\r\n        Type: 'Pattern', PatternType: 1, PaintType: 1, TilingType: 2,\r\n        BBox: [0, 0, pattern.dx, pattern.dy], XStep: pattern.dx, YStep: pattern.dy,\r\n        Matrix: multiplyMatrix(doc._ctm, pattern.matrix),\r\n        Resources: {\r\n          ProcSet: ['PDF', 'Text', 'ImageB', 'ImageC', 'ImageI'],\r\n          XObject: (function() {let temp = {}; temp[pattern.group.name] = pattern.group.xobj; return temp;})()\r\n        }\r\n      });\r\n      ref.write('/' + pattern.group.name + ' Do');\r\n      ref.end();\r\n      doc.page.patterns[name] = ref;\r\n      if (stroke) {\r\n        doc.addContent('/Pattern CS');\r\n        doc.addContent('/' + name + ' SCN');\r\n      } else {\r\n        doc.addContent('/Pattern cs');\r\n        doc.addContent('/' + name + ' scn');\r\n      }\r\n    }\r\n    function docBeginText(font, size) {\r\n      if (!doc.page.fonts[font.id]) {doc.page.fonts[font.id] = font.ref();}\r\n      doc.addContent('BT').addContent('/' + font.id + ' ' + size + ' Tf');\r\n    }\r\n    function docSetTextMatrix(a, b, c, d, e, f) {\r\n      doc.addContent(validateNumber(a) + ' ' + validateNumber(b) + ' ' + validateNumber(-c) + ' '  + validateNumber(-d) + ' ' + validateNumber(e) + ' ' + validateNumber(f) + ' Tm');\r\n    }\r\n    function docSetTextMode(fill, stroke) {\r\n      let mode = fill && stroke ? 2 : stroke ? 1 : fill ? 0 : 3;\r\n      doc.addContent(mode + ' Tr');\r\n    }\r\n    function docWriteGlyph(glyph) {\r\n      doc.addContent('<' + glyph + '> Tj');\r\n    }\r\n    function docEndText() {\r\n      doc.addContent('ET');\r\n    }\r\n    function docFillColor(color) {\r\n      if (color[0].constructor.name === 'PDFPattern') {\r\n        doc.fillOpacity(color[1]);\r\n        docUsePattern(color[0], false);\r\n      } else {\r\n        doc.fillColor(color[0], color[1]);\r\n      }\r\n    }\r\n    function docStrokeColor(color) {\r\n      if (color[0].constructor.name === 'PDFPattern') {\r\n        doc.strokeOpacity(color[1]);\r\n        docUsePattern(color[0], true);\r\n      } else {\r\n        doc.strokeColor(color[0], color[1]);\r\n      }\r\n    }\r\n    function docInsertLink(x, y, w, h, url) {\r\n      let ref = doc.ref({\r\n        Type: 'Annot',\r\n        Subtype: 'Link',\r\n        Rect: [x, y, w, h],\r\n        Border: [0, 0, 0],\r\n        A: {\r\n          S: 'URI',\r\n          URI: new String(url)\r\n        }\r\n      });\r\n      ref.end();\r\n      links.push(ref);\r\n    }\r\n    function parseXml(xml) {\r\n      let SvgNode = function(tag, type, value, error) {\r\n        this.error = error;\r\n        this.nodeName = tag;\r\n        this.nodeValue = value;\r\n        this.nodeType = type;\r\n        this.attributes = Object.create(null);\r\n        this.childNodes = [];\r\n        this.parentNode = null;\r\n        this.id = '';\r\n        this.textContent = '';\r\n        this.classList = [];\r\n      };\r\n      SvgNode.prototype.getAttribute = function(attr) {\r\n        return this.attributes[attr] != null ? this.attributes[attr] : null;\r\n      };\r\n      SvgNode.prototype.getElementById = function(id) {\r\n        let result = null;\r\n        (function recursive(node) {\r\n          if (result) {return;}\r\n          if (node.nodeType === 1) {\r\n            if (node.id === id) {result = node;}\r\n            for (let i = 0; i < node.childNodes.length; i++) {\r\n              recursive(node.childNodes[i]);\r\n            }\r\n          }\r\n        })(this);\r\n        return result;\r\n      };\r\n      SvgNode.prototype.getElementsByTagName = function(tag) {\r\n        let result = [];\r\n        (function recursive(node) {\r\n          if (node.nodeType === 1) {\r\n            if (node.nodeName === tag) {result.push(node);}\r\n            for (let i = 0; i < node.childNodes.length; i++) {\r\n              recursive(node.childNodes[i]);\r\n            }\r\n          }\r\n        })(this);\r\n        return result;\r\n      };\r\n      let parser = new StringParser(xml.trim()), result, child, error = false; \r\n      let recursive = function() {\r\n        let temp, child;\r\n        if (temp = parser.match(/^<([\\w:.-]+)\\s*/, true)) { // Opening tag\r\n          let node = new SvgNode(temp[1], 1, null, error);\r\n          while (temp = parser.match(/^([\\w:.-]+)(?:\\s*=\\s*\"([^\"]*)\"|\\s*=\\s*'([^']*)')?\\s*/, true)) { // Attribute\r\n            let attr = temp[1], value = decodeEntities(temp[2] || temp[3] || '');\r\n            if (!node.attributes[attr]) {\r\n              node.attributes[attr] = value;\r\n              if (attr === 'id') {node.id = value;}\r\n              if (attr === 'class') {node.classList = value.split(' ');}\r\n            } else {\r\n              warningCallback('parseXml: duplicate attribute \"' + attr + '\"');\r\n              error = true;\r\n            }\r\n          }\r\n          if (parser.match(/^>/)) { // End of opening tag\r\n            while (child = recursive()) {\r\n              node.childNodes.push(child);\r\n              child.parentNode = node;\r\n              node.textContent += (child.nodeType === 3 || child.nodeType === 4 ? child.nodeValue : child.textContent);\r\n            }\r\n            if (temp = parser.match(/^<\\/([\\w:.-]+)\\s*>/, true)) { // Closing tag\r\n              if (temp[1] === node.nodeName) {\r\n                return node;\r\n              } else {\r\n                warningCallback('parseXml: tag not matching, opening \"' + node.nodeName + '\" & closing \"' + temp[1] + '\"');\r\n                error = true;\r\n                return node;\r\n              }\r\n            } else {\r\n              warningCallback('parseXml: tag not matching, opening \"' + node.nodeName + '\" & not closing');\r\n              error = true;\r\n              return node;\r\n            }\r\n          } else if (parser.match(/^\\/>/)) { // Self-closing tag\r\n            return node;\r\n          } else {\r\n            warningCallback('parseXml: tag could not be parsed \"' + node.nodeName + '\"');\r\n            error = true;\r\n          }\r\n        } else if (temp = parser.match(/^<!--[\\s\\S]*?-->/)) { // Comment\r\n          return new SvgNode(null, 8, temp, error);\r\n        } else if (temp = parser.match(/^<\\?[\\s\\S]*?\\?>/)) { // Processing instructions\r\n          return new SvgNode(null, 7, temp, error);\r\n        } else if (temp = parser.match(/^<!DOCTYPE\\s*([\\s\\S]*?)>/)) { // Doctype\r\n          return new SvgNode(null, 10, temp, error);\r\n        } else if (temp = parser.match(/^<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>/, true)) { // Cdata node\r\n          return new SvgNode('#cdata-section', 4, temp[1], error);\r\n        } else if (temp = parser.match(/^([^<]+)/, true)) { // Text node\r\n          return new SvgNode('#text', 3, decodeEntities(temp[1]), error);\r\n        }\r\n      };\r\n      while (child = recursive()) {\r\n        if (child.nodeType === 1 && !result) {\r\n          result = child;\r\n        } else if (child.nodeType === 1 || (child.nodeType === 3 && child.nodeValue.trim() !== '')) {\r\n          warningCallback('parseXml: data after document end has been discarded');\r\n        }\r\n      }\r\n      if (parser.matchAll()) {\r\n        warningCallback('parseXml: parsing error');\r\n      }\r\n      return result;\r\n    };\r\n    function decodeEntities(str) {\r\n      return(str.replace(/&(?:#([0-9]+)|#[xX]([0-9A-Fa-f]+)|([0-9A-Za-z]+));/g, function(mt, m0, m1, m2) {\r\n        if (m0) {return String.fromCharCode(parseInt(m0, 10));}\r\n        else if (m1) {return String.fromCharCode(parseInt(m1, 16));}\r\n        else if (m2 && Entities[m2]) {return String.fromCharCode(Entities[m2]);}\r\n        else {return mt;}\r\n      }));\r\n    }\r\n    function parseColor(raw) {\r\n      let temp, result;\r\n      raw = (raw || '').trim();\r\n      if (temp = NamedColors[raw]) {\r\n        result = [temp.slice(), 1];\r\n      } else if (temp = raw.match(/^rgba\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9.]+)\\s*\\)$/i)) {\r\n        temp[1] = parseInt(temp[1]); temp[2] = parseInt(temp[2]); temp[3] = parseInt(temp[3]); temp[4] = parseFloat(temp[4]);\r\n        if (temp[1] < 256 && temp[2] < 256 && temp[3] < 256 && temp[4] <= 1) {\r\n          result = [temp.slice(1, 4), temp[4]];\r\n        }\r\n      } else if (temp = raw.match(/^rgb\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*\\)$/i)) {\r\n        temp[1] = parseInt(temp[1]); temp[2] = parseInt(temp[2]); temp[3] = parseInt(temp[3]);\r\n        if (temp[1] < 256 && temp[2] < 256 && temp[3] < 256) {\r\n          result = [temp.slice(1, 4), 1];\r\n        }\r\n      } else if (temp = raw.match(/^rgb\\(\\s*([0-9.]+)%\\s*,\\s*([0-9.]+)%\\s*,\\s*([0-9.]+)%\\s*\\)$/i)) {\r\n        temp[1] = 2.55 * parseFloat(temp[1]); temp[2] = 2.55 * parseFloat(temp[2]); temp[3] = 2.55 * parseFloat(temp[3]);\r\n        if (temp[1] < 256 && temp[2] < 256 && temp[3] < 256) {\r\n          result = [temp.slice(1, 4), 1];\r\n        }\r\n      } else if (temp = raw.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i)) {\r\n        result = [[parseInt(temp[1], 16), parseInt(temp[2], 16), parseInt(temp[3], 16)], 1];\r\n      } else if (temp = raw.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i)) {\r\n        result = [[0x11 * parseInt(temp[1], 16), 0x11 * parseInt(temp[2], 16), 0x11 * parseInt(temp[3], 16)], 1];\r\n      }\r\n      return colorCallback ? colorCallback(result, raw) : result;\r\n    }\r\n    function opacityToColor(color, opacity, isMask) {\r\n      let newColor = color[0].slice(),\r\n          newOpacity = color[1] * opacity;\r\n      if (isMask) {\r\n        for (let i = 0; i < color.length; i++) {\r\n          newColor[i] *= newOpacity;\r\n        }\r\n        return [newColor, 1];\r\n      } else {\r\n        return [newColor, newOpacity];\r\n      }\r\n    }\r\n    function multiplyMatrix() {\r\n      function multiply(a, b) {\r\n        return [ a[0]*b[0]+a[2]*b[1], a[1]*b[0]+a[3]*b[1], a[0]*b[2]+a[2]*b[3],\r\n                 a[1]*b[2]+a[3]*b[3], a[0]*b[4]+a[2]*b[5]+a[4], a[1]*b[4]+a[3]*b[5]+a[5] ];\r\n      }\r\n      let result = arguments[0];\r\n      for (let i = 1; i < arguments.length; i++) {\r\n        result = multiply(result, arguments[i]);\r\n      }\r\n      return result;\r\n    }\r\n    function transformPoint(p, m) {\r\n      return [m[0] * p[0] + m[2] * p[1] + m[4], m[1] * p[0] + m[3] * p[1] + m[5]];\r\n    }\r\n    function getGlobalMatrix() {\r\n      let ctm = doc._ctm;\r\n      for (let i = groupStack.length - 1; i >= 0; i--) {\r\n        ctm = multiplyMatrix(groupStack[i].savedMatrix, ctm);\r\n      }\r\n      return ctm;\r\n    }\r\n    function getPageBBox() {\r\n      return new SvgShape().M(0, 0).L(doc.page.width, 0).L(doc.page.width, doc.page.height).L(0, doc.page.height)\r\n                           .transform(inverseMatrix(getGlobalMatrix())).getBoundingBox();\r\n    }\r\n    function inverseMatrix(m) {\r\n      let dt = m[0] * m[3] - m[1] * m[2];\r\n      return [m[3] / dt, -m[1] / dt, -m[2] / dt, m[0] / dt, (m[2]*m[5] - m[3]*m[4]) / dt, (m[1]*m[4] - m[0]*m[5]) / dt];\r\n    }\r\n    function validateMatrix(m) {\r\n      let m0 = validateNumber(m[0]), m1 = validateNumber(m[1]), m2 = validateNumber(m[2]),\r\n          m3 = validateNumber(m[3]), m4 = validateNumber(m[4]), m5 = validateNumber(m[5]);\r\n      if (isNotEqual(m0 * m3 - m1 * m2, 0)) {\r\n        return [m0, m1, m2, m3, m4, m5];\r\n      }\r\n    }\r\n    function solveEquation(curve) {\r\n      let a = curve[2] || 0, b = curve[1] || 0, c = curve[0] || 0;\r\n      if (isEqual(a, 0) && isEqual(b, 0)) {\r\n        return [];\r\n      } else if (isEqual(a, 0)) {\r\n        return [(-c) / b];\r\n      } else {\r\n        let d = b * b - 4 * a * c;\r\n        if (isNotEqual(d, 0) && d > 0) {\r\n          return [(-b + Math.sqrt(d)) / (2 * a), (-b - Math.sqrt(d)) / (2 * a)];\r\n        } else if (isEqual(d, 0)) {\r\n          return [(-b) / (2 * a)];\r\n        } else {\r\n          return [];\r\n        }\r\n      }\r\n    }\r\n    function getCurveValue(t, curve) {\r\n      return (curve[0] || 0) + (curve[1] || 0) * t + (curve[2] || 0) * t * t + (curve[3] || 0) * t * t * t;\r\n    }\r\n    function isEqual(number, ref) {\r\n      return Math.abs(number - ref) < 1e-10;\r\n    }\r\n    function isNotEqual(number, ref) {\r\n      return Math.abs(number - ref) >= 1e-10;\r\n    }\r\n    function validateNumber(n) {\r\n      return n > -1e21 && n < 1e21 ? Math.round(n * 1e6) / 1e6 : 0;\r\n    }\r\n    function isArrayLike(v) {\r\n      return typeof v === 'object' && v !== null && typeof v.length === 'number';\r\n    }\r\n    function parseTranform(v) {\r\n      let parser = new StringParser((v || '').trim()), result = [1, 0, 0, 1, 0, 0], temp;\r\n      while (temp = parser.match(/^([A-Za-z]+)\\s*[(]([^(]+)[)]/, true)) {\r\n        let func = temp[1], nums = [], parser2 = new StringParser(temp[2].trim()), temp2;\r\n        while (temp2 = parser2.matchNumber()) {\r\n          nums.push(Number(temp2));\r\n          parser2.matchSeparator();\r\n        }\r\n        if (func === 'matrix' && nums.length === 6) {\r\n          result = multiplyMatrix(result, [nums[0], nums[1], nums[2], nums[3], nums[4], nums[5]]);\r\n        } else if (func === 'translate' && nums.length === 2) {\r\n          result = multiplyMatrix(result, [1, 0, 0, 1, nums[0], nums[1]]);\r\n        } else if (func === 'translate' && nums.length === 1) {\r\n          result = multiplyMatrix(result, [1, 0, 0, 1, nums[0], 0]);\r\n        } else if (func === 'scale' && nums.length === 2) {\r\n          result = multiplyMatrix(result, [nums[0], 0, 0, nums[1], 0, 0]);\r\n        } else if (func === 'scale' && nums.length === 1) {\r\n          result = multiplyMatrix(result, [nums[0], 0, 0, nums[0], 0, 0]);\r\n        } else if (func === 'rotate' && nums.length === 3) {\r\n          let a = nums[0] * Math.PI / 180;\r\n          result = multiplyMatrix(result, [1, 0, 0, 1, nums[1], nums[2]], [Math.cos(a), Math.sin(a), -Math.sin(a), Math.cos(a), 0, 0], [1, 0, 0, 1, -nums[1], -nums[2]]);\r\n        } else if (func === 'rotate' && nums.length === 1) {\r\n          let a = nums[0] * Math.PI / 180;\r\n          result = multiplyMatrix(result, [Math.cos(a), Math.sin(a), -Math.sin(a), Math.cos(a), 0, 0]);\r\n        } else if (func === 'skewX' && nums.length === 1) {\r\n          let a = nums[0] * Math.PI / 180;\r\n          result = multiplyMatrix(result, [1, 0, Math.tan(a), 1, 0, 0]);\r\n        } else if (func === 'skewY' && nums.length === 1) {\r\n          let a = nums[0] * Math.PI / 180;\r\n          result = multiplyMatrix(result, [1, Math.tan(a), 0, 1, 0, 0]);\r\n        } else {return;}\r\n        parser.matchSeparator();\r\n      }\r\n      if (parser.matchAll()) {return;}\r\n      return result;\r\n    }\r\n    function parseAspectRatio(aspectRatio, availWidth, availHeight, elemWidth, elemHeight, initAlign) {\r\n      let temp = (aspectRatio || '').trim().match(/^(none)$|^x(Min|Mid|Max)Y(Min|Mid|Max)(?:\\s+(meet|slice))?$/) || [],\r\n          ratioType = temp[1] || temp[4] || 'meet',\r\n          xAlign = temp[2] || 'Mid',\r\n          yAlign = temp[3] || 'Mid',\r\n          scaleX = availWidth / elemWidth,\r\n          scaleY = availHeight / elemHeight,\r\n          dx = {'Min':0, 'Mid':0.5, 'Max':1}[xAlign] - (initAlign || 0),\r\n          dy = {'Min':0, 'Mid':0.5, 'Max':1}[yAlign] - (initAlign || 0);\r\n      if (ratioType === 'slice') {\r\n        scaleY = scaleX = Math.max(scaleX, scaleY);\r\n      } else if (ratioType === 'meet') {\r\n        scaleY = scaleX = Math.min(scaleX, scaleY);\r\n      }\r\n      return [scaleX, 0, 0, scaleY, dx * (availWidth - elemWidth * scaleX), dy * (availHeight - elemHeight * scaleY)];\r\n    }\r\n    function parseStyleAttr(v) {\r\n      let result = Object.create(null);\r\n      v = (v || '').trim().split(/;/);\r\n      for (let i = 0; i < v.length; i++) {\r\n        let key = (v[i].split(':')[0] || '').trim(),\r\n            value = (v[i].split(':')[1] || '').trim();\r\n        if (key) {\r\n          result[key] = value;\r\n        }\r\n      }\r\n      if (result['marker']) {\r\n        if (!result['marker-start']) {result['marker-start'] = result['marker'];}\r\n        if (!result['marker-mid']) {result['marker-mid'] = result['marker'];}\r\n        if (!result['marker-end']) {result['marker-end'] = result['marker'];}\r\n      }\r\n      if (result['font']) {\r\n        let fontFamily = null, fontSize = null, fontStyle = \"normal\", fontWeight = \"normal\", fontVariant = \"normal\";\r\n        let parts = result['font'].split(/\\s+/);\r\n        for (let i = 0; i < parts.length; i++) {\r\n          switch (parts[i]) {\r\n            case \"normal\":\r\n              break;\r\n            case \"italic\": case \"oblique\":\r\n              fontStyle = parts[i];\r\n              break;\r\n            case \"small-caps\":\r\n              fontVariant = parts[i];\r\n              break;\r\n            case \"bold\": case \"bolder\": case \"lighter\": case \"100\": case \"200\": case \"300\":\r\n            case \"400\": case \"500\": case \"600\": case \"700\": case \"800\": case \"900\":\r\n              fontWeight = parts[i];\r\n              break;\r\n            default:\r\n              if (!fontSize) {\r\n                fontSize = parts[i].split('/')[0];\r\n              } else {\r\n                if (!fontFamily) {\r\n                  fontFamily = parts[i];\r\n                } else {\r\n                  fontFamily += ' ' + parts[i];\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        if (!result['font-style']) {result['font-style'] = fontStyle;}\r\n        if (!result['font-variant']) {result['font-variant'] = fontVariant;}\r\n        if (!result['font-weight']) {result['font-weight'] = fontWeight;}\r\n        if (!result['font-size']) {result['font-size'] = fontSize;}\r\n        if (!result['font-family']) {result['font-family'] = fontFamily;}\r\n      }\r\n      return result;\r\n    }\r\n    function parseSelector(v) {\r\n      let parts = v.split(/(?=[.#])/g), ids = [], classes = [], tags = [], temp;\r\n      for (let i = 0; i < parts.length; i++) {\r\n        if (temp = parts[i].match(/^[#]([_A-Za-z0-9-]+)$/)) {\r\n          ids.push(temp[1]);\r\n        } else if (temp = parts[i].match(/^[.]([_A-Za-z0-9-]+)$/)) {\r\n          classes.push(temp[1]);\r\n        } else if (temp = parts[i].match(/^([_A-Za-z0-9-]+)$/)) {\r\n          tags.push(temp[1]);\r\n        } else if (parts[i] !== '*') {\r\n          return;\r\n        }\r\n      }\r\n      return {\r\n        tags: tags, ids: ids, classes: classes,\r\n        specificity: ids.length * 10000 + classes.length * 100 + tags.length\r\n      };\r\n    }\r\n    function parseStyleSheet(v) {\r\n      let parser = new StringParser(v.trim()), rules = [], rule;\r\n      while (rule = parser.match(/^\\s*([^\\{\\}]*?)\\s*\\{([^\\{\\}]*?)\\}/, true)) {\r\n        let selectors = rule[1].split(/\\s*,\\s*/g),\r\n            css = parseStyleAttr(rule[2]);\r\n        for (let i = 0; i < selectors.length; i++) {\r\n          let selector = parseSelector(selectors[i]);\r\n          if (selector) {\r\n            rules.push({selector: selector, css:css});\r\n          }\r\n        }\r\n      }\r\n      return rules;\r\n    }\r\n    function matchesSelector(elem, selector) {\r\n      if (elem.nodeType !== 1) {return false;}\r\n      for (let i = 0; i < selector.tags.length; i++) {\r\n        if (selector.tags[i] !== elem.nodeName) {return false;}\r\n      }\r\n      for (let i = 0; i < selector.ids.length; i++) {\r\n        if (selector.ids[i] !== elem.id) {return false;}\r\n      }\r\n      for (let i = 0; i < selector.classes.length; i++) {\r\n        if (elem.classList.indexOf(selector.classes[i]) === -1) {return false;}\r\n      }\r\n      return true;\r\n    }\r\n    function getStyle(elem) {\r\n      let result = Object.create(null);\r\n      let specificities = Object.create(null);\r\n      for (let i = 0; i < styleRules.length; i++) {\r\n        let rule = styleRules[i];\r\n        if (matchesSelector(elem, rule.selector)) {\r\n          for (let key in rule.css) {\r\n            if (!(specificities[key] > rule.selector.specificity)) {\r\n              result[key] = rule.css[key];\r\n              specificities[key] = rule.selector.specificity;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n    function combineArrays(array1, array2) {\r\n      return array1.concat(array2.slice(array1.length));\r\n    }\r\n    function getAscent(font, size) {\r\n      return Math.max(font.ascender, (font.bbox[3] || font.bbox.maxY) * (font.scale || 1)) * size / 1000;\r\n    }\r\n    function getDescent(font, size) {\r\n      return Math.min(font.descender, (font.bbox[1] || font.bbox.minY) * (font.scale || 1)) * size / 1000;\r\n    }\r\n    function getXHeight(font, size) {\r\n      return (font.xHeight || 0.5 * (font.ascender - font.descender)) * size / 1000;\r\n    }\r\n    function getBaseline(font, size, baseline, shift) {\r\n      let dy1, dy2;\r\n      switch (baseline) {\r\n        case 'middle': dy1 = 0.5 * getXHeight(font, size); break;\r\n        case 'central': dy1 = 0.5 * (getDescent(font, size) + getAscent(font, size)); break;\r\n        case 'after-edge': case 'text-after-edge': dy1 = getDescent(font, size); break;\r\n        case 'alphabetic': case 'auto': case 'baseline': dy1 = 0; break;\r\n        case 'mathematical': dy1 = 0.5 * getAscent(font, size); break;\r\n        case 'hanging': dy1 = 0.8 * getAscent(font, size); break;\r\n        case 'before-edge': case 'text-before-edge': dy1 = getAscent(font, size); break;\r\n        default: dy1 = 0; break;\r\n      }\r\n      switch (shift) {\r\n        case 'baseline': dy2 = 0; break;\r\n        case 'super': dy2 = 0.6 * size; break;\r\n        case 'sub': dy2 = -0.6 * size; break;\r\n        default: dy2 = shift; break;\r\n      }\r\n      return dy1 - dy2;\r\n    }\r\n    function getTextPos(font, size, text) {\r\n      let encoded = font.encode('' + text), hex = encoded[0], pos = encoded[1], data = [];\r\n      for (let i = 0; i < hex.length; i++) {\r\n        let unicode = font.unicode ? font.unicode[parseInt(hex[i], 16)] : [text.charCodeAt(i)];\r\n        data.push({\r\n          glyph: hex[i],\r\n          unicode: unicode,\r\n          width: pos[i].advanceWidth * size / 1000,\r\n          xOffset: pos[i].xOffset * size / 1000,\r\n          yOffset: pos[i].yOffset * size / 1000,\r\n          xAdvance: pos[i].xAdvance * size / 1000,\r\n          yAdvance: pos[i].yAdvance * size / 1000\r\n        });\r\n      }\r\n      return data;\r\n    }\r\n    function createSVGElement(obj, inherits) {\r\n      switch (obj.nodeName) {\r\n        case 'use': return new SvgElemUse(obj, inherits);\r\n        case 'symbol': return new SvgElemSymbol(obj, inherits);\r\n        case 'g': return new SvgElemGroup(obj, inherits);\r\n        case 'a': return new SvgElemLink(obj, inherits);\r\n        case 'svg': return new SvgElemSvg(obj, inherits);\r\n        case 'image': return new SVGElemImage(obj, inherits);\r\n        case 'rect': return new SvgElemRect(obj, inherits);\r\n        case 'circle': return new SvgElemCircle(obj, inherits);\r\n        case 'ellipse': return new SvgElemEllipse(obj, inherits);\r\n        case 'line': return new SvgElemLine(obj, inherits);\r\n        case 'polyline': return new SvgElemPolyline(obj, inherits);\r\n        case 'polygon': return new SvgElemPolygon(obj, inherits);\r\n        case 'path': return new SvgElemPath(obj, inherits);\r\n        case 'text': return new SvgElemText(obj, inherits);\r\n        case 'tspan': return new SvgElemTspan(obj, inherits);\r\n        case 'textPath': return new SvgElemTextPath(obj, inherits);\r\n        case '#text': case '#cdata-section': return new SvgElemTextNode(obj, inherits);\r\n        default: return new SvgElem(obj, inherits);\r\n      }\r\n    }\r\n\r\n    var StringParser = function(str) {\r\n      this.match = function(exp, all) {\r\n        let temp = str.match(exp);\r\n        if (!temp || temp.index !== 0) {return;}\r\n        str = str.substring(temp[0].length);\r\n        return (all ? temp : temp[0]);\r\n      };\r\n      this.matchSeparator = function() {\r\n        return this.match(/^(?:\\s*,\\s*|\\s*|)/);\r\n      };\r\n      this.matchSpace = function() {\r\n        return this.match(/^(?:\\s*)/);\r\n      };\r\n      this.matchLengthUnit = function() {\r\n        return this.match(/^(?:px|pt|cm|mm|in|pc|em|ex|%|)/);\r\n      };\r\n      this.matchNumber = function() {\r\n        return this.match(/^(?:[-+]?(?:[0-9]+[.][0-9]+|[0-9]+[.]|[.][0-9]+|[0-9]+)(?:[eE][-+]?[0-9]+)?)/);\r\n      };\r\n      this.matchAll = function() {\r\n        return this.match(/^[\\s\\S]+/);\r\n      };\r\n    };\r\n\r\n    var BezierSegment = function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n      let divisions = 6 * precision;\r\n      let equationX = [p1x, -3 * p1x + 3 * c1x, 3 * p1x - 6 * c1x + 3 * c2x, -p1x + 3 * c1x - 3 * c2x + p2x];\r\n      let equationY = [p1y, -3 * p1y + 3 * c1y, 3 * p1y - 6 * c1y + 3 * c2y, -p1y + 3 * c1y - 3 * c2y + p2y];\r\n      let derivativeX = [-3 * p1x + 3 * c1x, 6 * p1x - 12 * c1x + 6 * c2x, -3 * p1x + 9 * c1x - 9 * c2x + 3 * p2x];\r\n      let derivativeY = [-3 * p1y + 3 * c1y, 6 * p1y - 12 * c1y + 6 * c2y, -3 * p1y + 9 * c1y - 9 * c2y + 3 * p2y];\r\n      let lengthMap = [0];\r\n      for (let i = 1; i <= divisions; i++) {\r\n        let t = (i - 0.5) / divisions;\r\n        let dx = getCurveValue(t, derivativeX) / divisions,\r\n            dy = getCurveValue(t, derivativeY) / divisions,\r\n            l = Math.sqrt(dx * dx + dy * dy);\r\n        lengthMap[i] = lengthMap[i - 1] + l;\r\n      }\r\n      this.totalLength = lengthMap[divisions];\r\n      this.startPoint = [p1x, p1y, isEqual(p1x, c1x) && isEqual(p1y, c1y) ? Math.atan2(c2y - c1y, c2x - c1x) : Math.atan2(c1y - p1y, c1x - p1x)];\r\n      this.endPoint = [p2x, p2y, isEqual(c2x, p2x) && isEqual(c2y, p2y) ? Math.atan2(c2y - c1y, c2x - c1x) : Math.atan2(p2y - c2y, p2x - c2x)];\r\n      this.getBoundingBox = function() {\r\n        let temp;\r\n        let minX = getCurveValue(0, equationX), minY = getCurveValue(0, equationY),\r\n            maxX = getCurveValue(1, equationX), maxY = getCurveValue(1, equationY);\r\n        if (minX > maxX) {temp = maxX; maxX = minX; minX = temp;}\r\n        if (minY > maxY) {temp = maxY; maxY = minY; minY = temp;}\r\n        let rootsX = solveEquation(derivativeX);\r\n        for (let i = 0; i < rootsX.length; i++) {\r\n          if (rootsX[i] >= 0 && rootsX[i] <= 1) {\r\n            let x = getCurveValue(rootsX[i], equationX);\r\n            if (x < minX) {minX = x;}\r\n            if (x > maxX) {maxX = x;}\r\n          }\r\n        }\r\n        let rootsY = solveEquation(derivativeY);\r\n        for (let i = 0; i < rootsY.length; i++) {\r\n          if (rootsY[i] >= 0 && rootsY[i] <= 1) {\r\n            let y = getCurveValue(rootsY[i], equationY);\r\n            if (y < minY) {minY = y;}\r\n            if (y > maxY) {maxY = y;}\r\n          }\r\n        }\r\n        return [minX, minY, maxX, maxY];\r\n      };\r\n      this.getPointAtLength = function(l) {\r\n        if (isEqual(l, 0)) {return this.startPoint;}\r\n        if (isEqual(l, this.totalLength)) {return this.endPoint;}\r\n        if (l < 0 || l > this.totalLength) {return;}\r\n        for (let i = 1; i <= divisions; i++) {\r\n          let l1 = lengthMap[i-1], l2 = lengthMap[i];\r\n          if (l1 <= l && l <= l2) {\r\n            let t = (i - (l2 - l) / (l2 - l1)) / divisions,\r\n                x = getCurveValue(t, equationX), y = getCurveValue(t, equationY),\r\n                dx = getCurveValue(t, derivativeX), dy = getCurveValue(t, derivativeY);\r\n            return [x, y, Math.atan2(dy, dx)];\r\n          }\r\n        }\r\n      };\r\n    };\r\n\r\n    var LineSegment = function(p1x, p1y, p2x, p2y) {\r\n      this.totalLength = Math.sqrt((p2x - p1x) * (p2x - p1x) + (p2y - p1y) * (p2y - p1y));\r\n      this.startPoint = [p1x, p1y, Math.atan2(p2y - p1y, p2x - p1x)];\r\n      this.endPoint = [p2x, p2y, Math.atan2(p2y - p1y, p2x - p1x)];\r\n      this.getBoundingBox = function() {\r\n        return [Math.min(this.startPoint[0], this.endPoint[0]), Math.min(this.startPoint[1], this.endPoint[1]),\r\n                Math.max(this.startPoint[0], this.endPoint[0]), Math.max(this.startPoint[1], this.endPoint[1])];\r\n      };\r\n      this.getPointAtLength = function(l) {\r\n        if (l >= 0 && l <= this.totalLength) {\r\n          let r = l / this.totalLength || 0,\r\n              x = this.startPoint[0] + r * (this.endPoint[0] - this.startPoint[0]),\r\n              y = this.startPoint[1] + r * (this.endPoint[1] - this.startPoint[1]);\r\n          return [x, y, this.startPoint[2]];\r\n        }\r\n      };\r\n    };\r\n\r\n    var SvgShape = function() {\r\n      this.pathCommands = [];\r\n      this.pathSegments = [];\r\n      this.startPoint = null;\r\n      this.endPoint = null;\r\n      this.totalLength = 0;\r\n      let startX = 0, startY = 0, currX = 0, currY = 0, lastCom, lastCtrlX, lastCtrlY;\r\n      this.move = function(x, y) {\r\n        startX = currX = x; startY = currY = y;\r\n        return null;\r\n      };\r\n      this.line = function(x, y) {\r\n        let segment = new LineSegment(currX, currY, x, y);\r\n        currX = x; currY = y;\r\n        return segment;\r\n      };\r\n      this.curve = function(c1x, c1y, c2x, c2y, x, y) {\r\n        let segment = new BezierSegment(currX, currY, c1x, c1y, c2x, c2y, x, y);\r\n        currX = x; currY = y;\r\n        return segment;\r\n      };\r\n      this.close = function() {\r\n        let segment = new LineSegment(currX, currY, startX, startY);\r\n        currX = startX; currY = startY;\r\n        return segment;\r\n      };\r\n      this.addCommand = function(data) {\r\n        this.pathCommands.push(data);\r\n        let segment = this[data[0]].apply(this, data.slice(3));\r\n        if (segment) {\r\n          segment.hasStart = data[1];\r\n          segment.hasEnd = data[2];\r\n          this.startPoint = this.startPoint || segment.startPoint;\r\n          this.endPoint = segment.endPoint;\r\n          this.pathSegments.push(segment);\r\n          this.totalLength += segment.totalLength;\r\n        }\r\n      };\r\n      this.M = function(x, y) {\r\n        this.addCommand(['move', true, true, x, y]);\r\n        lastCom = 'M';\r\n        return this;\r\n      };\r\n      this.m = function(x, y) {\r\n        return this.M(currX + x, currY + y);\r\n      };\r\n      this.Z = this.z = function() {\r\n        this.addCommand(['close', true, true]);\r\n        lastCom = 'Z';\r\n        return this;\r\n      };\r\n      this.L = function(x, y) {\r\n        this.addCommand(['line', true, true, x, y]);\r\n        lastCom = 'L';\r\n        return this;\r\n      };\r\n      this.l = function(x, y) {\r\n        return this.L(currX + x, currY + y);\r\n      };\r\n      this.H = function(x) {\r\n        return this.L(x, currY);\r\n      };\r\n      this.h = function(x) {\r\n        return this.L(currX + x, currY);\r\n      };\r\n      this.V = function(y) {\r\n        return this.L(currX, y);\r\n      };\r\n      this.v = function(y) {\r\n        return this.L(currX, currY + y);\r\n      };\r\n      this.C = function(c1x, c1y, c2x, c2y, x, y) {\r\n        this.addCommand(['curve', true, true, c1x, c1y, c2x, c2y, x, y]);\r\n        lastCom = 'C'; lastCtrlX = c2x; lastCtrlY = c2y;\r\n        return this;\r\n      };\r\n      this.c = function(c1x, c1y, c2x, c2y, x, y) {\r\n        return this.C(currX + c1x, currY + c1y, currX + c2x, currY + c2y, currX + x, currY + y);\r\n      };\r\n      this.S = function(c1x, c1y, x, y) {\r\n        return this.C(currX + (lastCom === 'C' ? currX - lastCtrlX : 0), currY + (lastCom === 'C' ? currY - lastCtrlY : 0), c1x, c1y, x, y);\r\n      };\r\n      this.s = function(c1x, c1y, x, y) {\r\n        return this.C(currX + (lastCom === 'C' ? currX - lastCtrlX : 0), currY + (lastCom === 'C' ? currY - lastCtrlY : 0), currX + c1x, currY + c1y, currX + x, currY + y);\r\n      };\r\n      this.Q = function(cx, cy, x, y) {\r\n        let c1x = currX + 2 / 3 * (cx - currX), c1y = currY + 2 / 3 * (cy - currY),\r\n            c2x = x + 2 / 3 * (cx - x), c2y = y + 2 / 3 * (cy - y);\r\n        this.addCommand(['curve', true, true, c1x, c1y, c2x, c2y, x, y]);\r\n        lastCom = 'Q'; lastCtrlX = cx; lastCtrlY = cy;\r\n        return this;\r\n      };\r\n      this.q = function(c1x, c1y, x, y) {\r\n        return this.Q(currX + c1x, currY + c1y, currX + x, currY + y);\r\n      };\r\n      this.T = function(x, y) {\r\n        return this.Q(currX + (lastCom === 'Q' ? currX - lastCtrlX : 0), currY + (lastCom === 'Q' ? currY - lastCtrlY : 0), x, y);\r\n      };\r\n      this.t = function(x, y) {\r\n        return this.Q(currX + (lastCom === 'Q' ? currX - lastCtrlX : 0), currY + (lastCom === 'Q' ? currY - lastCtrlY : 0), currX + x, currY + y);\r\n      };\r\n      this.A = function(rx, ry, fi, fa, fs, x, y) {\r\n        if (isEqual(rx, 0) || isEqual(ry, 0)) {\r\n          this.addCommand(['line', true, true, x, y]);\r\n        } else {\r\n          fi = fi * (Math.PI / 180);\r\n          rx = Math.abs(rx);\r\n          ry = Math.abs(ry);\r\n          fa = 1 * !!fa;\r\n          fs = 1 * !!fs;\r\n          let x1 = Math.cos(fi) * (currX - x) / 2 + Math.sin(fi) * (currY - y) / 2,\r\n              y1 = Math.cos(fi) * (currY - y) / 2 - Math.sin(fi) * (currX - x) / 2,\r\n              lambda = (x1 * x1) / (rx * rx) + (y1 * y1) / (ry * ry);\r\n          if (lambda > 1) {\r\n            rx *= Math.sqrt(lambda);\r\n            ry *= Math.sqrt(lambda);\r\n          }\r\n          let r = Math.sqrt(Math.max(0, rx * rx * ry * ry - rx * rx * y1 * y1 - ry * ry * x1 * x1) / (rx * rx * y1 * y1 + ry * ry * x1 * x1)),\r\n              x2 = (fa === fs ? -1 : 1) * r * rx * y1 / ry,\r\n              y2 = (fa === fs ? 1 : -1) * r * ry * x1 / rx;\r\n          let cx = Math.cos(fi) * x2 - Math.sin(fi) * y2 + (currX + x) / 2,\r\n              cy = Math.sin(fi) * x2 + Math.cos(fi) * y2 + (currY + y) / 2,\r\n              th1 = Math.atan2((y1 - y2) / ry, (x1 - x2) / rx),\r\n              th2 = Math.atan2((-y1 - y2) / ry, (-x1 - x2) / rx);\r\n          if (fs === 0 && th2 - th1 > 0) {\r\n            th2 -= 2 * Math.PI;\r\n          } else if (fs === 1 && th2 - th1 < 0) {\r\n            th2 += 2 * Math.PI;\r\n          }\r\n          let segms = Math.ceil(Math.abs(th2 - th1) / (Math.PI / precision));\r\n          for (let i = 0; i < segms; i++) {\r\n            let th3 = th1 + i * (th2 - th1) / segms,\r\n                th4 = th1 + (i + 1) * (th2 - th1) / segms,\r\n                t = 4/3 * Math.tan((th4 - th3) / 4);\r\n            let c1x = cx + Math.cos(fi) * rx * (Math.cos(th3) - t * Math.sin(th3)) - Math.sin(fi) * ry * (Math.sin(th3) + t * Math.cos(th3)),\r\n                c1y = cy + Math.sin(fi) * rx * (Math.cos(th3) - t * Math.sin(th3)) + Math.cos(fi) * ry * (Math.sin(th3) + t * Math.cos(th3)),\r\n                c2x = cx + Math.cos(fi) * rx * (Math.cos(th4) + t * Math.sin(th4)) - Math.sin(fi) * ry * (Math.sin(th4) - t * Math.cos(th4)),\r\n                c2y = cy + Math.sin(fi) * rx * (Math.cos(th4) + t * Math.sin(th4)) + Math.cos(fi) * ry * (Math.sin(th4) - t * Math.cos(th4)),\r\n                endX = cx + Math.cos(fi) * rx * Math.cos(th4) - Math.sin(fi) * ry * Math.sin(th4),\r\n                endY = cy + Math.sin(fi) * rx * Math.cos(th4) + Math.cos(fi) * ry * Math.sin(th4);\r\n            this.addCommand(['curve', (i === 0), (i === segms - 1), c1x, c1y, c2x, c2y, endX, endY]);\r\n          }\r\n        }\r\n        lastCom = 'A';\r\n        return this;\r\n      };\r\n      this.a = function(rx, ry, fi, fa, fs, x, y) {\r\n        return this.A(rx, ry, fi, fa, fs, currX + x, currY + y);\r\n      };\r\n      this.path = function(d) {\r\n        let command, value, temp,\r\n            parser = new StringParser((d || '').trim());\r\n        while (command = parser.match(/^[astvzqmhlcASTVZQMHLC]/)) {\r\n          parser.matchSeparator();\r\n          let values = [];\r\n          while (value = (PathFlags[command + values.length] ? parser.match(/^[01]/) : parser.matchNumber())) {\r\n            parser.matchSeparator();\r\n            if (values.length === PathArguments[command]) {\r\n              this[command].apply(this, values);\r\n              values = [];\r\n              if (command === 'M') {command = 'L';}\r\n              else if (command === 'm') {command = 'l';}\r\n            }\r\n            values.push(Number(value));\r\n          }\r\n          if (values.length === PathArguments[command]) {\r\n            this[command].apply(this, values);\r\n          } else {\r\n            warningCallback('SvgPath: command ' + command + ' with ' + values.length + ' numbers'); return;\r\n          }\r\n        }\r\n        if (temp = parser.matchAll()) {\r\n          warningCallback('SvgPath: unexpected string ' + temp);\r\n        }\r\n        return this;\r\n      };\r\n      this.getBoundingBox = function() {\r\n        let bbox = [Infinity, Infinity, -Infinity, -Infinity];\r\n        function addBounds(bbox1) {\r\n          if (bbox1[0] < bbox[0]) {bbox[0] = bbox1[0];}\r\n          if (bbox1[2] > bbox[2]) {bbox[2] = bbox1[2];}\r\n          if (bbox1[1] < bbox[1]) {bbox[1] = bbox1[1];}\r\n          if (bbox1[3] > bbox[3]) {bbox[3] = bbox1[3];}\r\n        }\r\n        for (let i = 0; i < this.pathSegments.length; i++) {\r\n          addBounds(this.pathSegments[i].getBoundingBox());\r\n        }\r\n        if (bbox[0] === Infinity) {bbox[0] = 0;}\r\n        if (bbox[1] === Infinity) {bbox[1] = 0;}\r\n        if (bbox[2] === -Infinity) {bbox[2] = 0;}\r\n        if (bbox[3] === -Infinity) {bbox[3] = 0;}\r\n        return bbox;\r\n      };\r\n      this.getPointAtLength = function(l) {\r\n        if (l >= 0 && l <= this.totalLength) {\r\n          let temp;\r\n          for (let i = 0; i < this.pathSegments.length; i++) {\r\n            if (temp = this.pathSegments[i].getPointAtLength(l)) {\r\n              return temp;\r\n            }\r\n            l -= this.pathSegments[i].totalLength;\r\n          }\r\n          return this.endPoint;\r\n        }\r\n      };\r\n      this.transform = function(m) {\r\n        this.pathSegments = [];\r\n        this.startPoint = null;\r\n        this.endPoint = null;\r\n        this.totalLength = 0;\r\n        for (let i = 0; i < this.pathCommands.length; i++) {\r\n          let data = this.pathCommands.shift();\r\n          for (let j = 3; j < data.length; j+=2) {\r\n            let p = transformPoint([data[j], data[j + 1]], m)\r\n            data[j] = p[0];\r\n            data[j + 1] = p[1];\r\n          }\r\n          this.addCommand(data);\r\n        }\r\n        return this;        \r\n      };\r\n      this.mergeShape = function(shape) {\r\n        for (let i = 0; i < shape.pathCommands.length; i++) {\r\n          this.addCommand(shape.pathCommands[i].slice());\r\n        }\r\n        return this;\r\n      };\r\n      this.clone = function() {\r\n        return new SvgShape().mergeShape(this);\r\n      };\r\n      this.insertInDocument = function() {\r\n        for (let i = 0; i < this.pathCommands.length; i++) {\r\n          let command = this.pathCommands[i][0], values = this.pathCommands[i].slice(3);\r\n          switch(command) {\r\n            case 'move':  doc.moveTo(values[0], values[1]);  break;\r\n            case 'line':  doc.lineTo(values[0], values[1]);  break;\r\n            case 'curve':  doc.bezierCurveTo(values[0], values[1], values[2], values[3], values[4], values[5]);  break;\r\n            case 'close':  doc.closePath();  break;\r\n          }\r\n        }\r\n      };\r\n      this.getSubPaths = function() {\r\n        let subPaths = [], shape = new SvgShape();\r\n        for (let i = 0; i < this.pathCommands.length; i++) {\r\n          let data = this.pathCommands[i], command = this.pathCommands[i][0];\r\n          if (command === 'move' && i !== 0) {\r\n            subPaths.push(shape);\r\n            shape = new SvgShape();\r\n          }\r\n          shape.addCommand(data);\r\n        }\r\n        subPaths.push(shape);\r\n        return subPaths;\r\n      };\r\n      this.getMarkers = function() {\r\n        let markers = [], subPaths = this.getSubPaths();\r\n        for (let i = 0; i < subPaths.length; i++) {\r\n          let subPath = subPaths[i], subPathMarkers = [];\r\n          for (let j = 0; j < subPath.pathSegments.length; j++) {\r\n            let segment = subPath.pathSegments[j];\r\n            if (isNotEqual(segment.totalLength, 0) || j === 0 || j === subPath.pathSegments.length - 1) {\r\n              if (segment.hasStart) {\r\n                let startMarker = segment.getPointAtLength(0), prevEndMarker = subPathMarkers.pop();\r\n                if (prevEndMarker) {startMarker[2] = 0.5 * (prevEndMarker[2] + startMarker[2]);}\r\n                subPathMarkers.push(startMarker);\r\n              }\r\n              if (segment.hasEnd) {\r\n                let endMarker = segment.getPointAtLength(segment.totalLength);\r\n                subPathMarkers.push(endMarker);\r\n              }\r\n            }\r\n          }\r\n          markers = markers.concat(subPathMarkers);\r\n        }\r\n        return markers;\r\n      };\r\n    };\r\n\r\n    var SvgElem = function(obj, inherits) {\r\n      let styleCache = Object.create(null);\r\n      let childrenCache = null;\r\n      this.name = obj.nodeName;\r\n      this.isOuterElement = obj === svg || !obj.parentNode;\r\n      this.inherits = inherits || (!this.isOuterElement ? createSVGElement(obj.parentNode, null) : null);\r\n      this.stack = (this.inherits ? this.inherits.stack.concat(obj) : [obj]);\r\n      this.style = parseStyleAttr(typeof obj.getAttribute === 'function' && obj.getAttribute('style'));\r\n      this.css = useCSS ? getComputedStyle(obj) : getStyle(obj);\r\n      this.allowedChildren = [];\r\n      this.attr = function(key) {\r\n        if (typeof obj.getAttribute === 'function') {\r\n          return obj.getAttribute(key);\r\n        }\r\n      };\r\n      this.resolveUrl = function(value) {\r\n        let temp = (value || '').match(/^\\s*(?:url\\(\"(.*)#(.*)\"\\)|url\\('(.*)#(.*)'\\)|url\\((.*)#(.*)\\)|(.*)#(.*))\\s*$/) || [];\r\n        let file = temp[1] || temp[3] || temp[5] || temp[7],\r\n            id = temp[2] || temp[4] || temp[6] || temp[8];\r\n        if (id) {\r\n          if (!file) {\r\n            let svgObj = svg.getElementById(id);\r\n            if (svgObj) {\r\n              if (this.stack.indexOf(svgObj) === -1) {\r\n                return svgObj;\r\n              } else {\r\n                warningCallback('SVGtoPDF: loop of circular references for id \"' + id + '\"');\r\n                return;\r\n              }\r\n            }\r\n          }\r\n          if (documentCallback) {\r\n            let svgs = documentCache[file];\r\n            if (!svgs) {\r\n              svgs = documentCallback(file);\r\n              if (!isArrayLike(svgs)) {svgs = [svgs];}\r\n              for (let i = 0; i < svgs.length; i++) {\r\n                if (typeof svgs[i] === 'string') {svgs[i] = parseXml(svgs[i]);}\r\n              }\r\n              documentCache[file] = svgs;\r\n            }\r\n            for (let i = 0; i < svgs.length; i++) {\r\n              let svgObj = svgs[i].getElementById(id);\r\n              if (svgObj) {\r\n                if (this.stack.indexOf(svgObj) === -1) {\r\n                  return svgObj;\r\n                } else {\r\n                  warningCallback('SVGtoPDF: loop of circular references for id \"' + file + '#' + id + '\"');\r\n                  return;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n      this.computeUnits = function(value, unit, percent, isFontSize) {\r\n        if (unit === '%') {\r\n          return parseFloat(value) / 100 * (isFontSize || percent != null ? percent : this.getViewport());\r\n        } else if (unit === 'ex' || unit === 'em') {\r\n          return value * {'em':1, 'ex':0.5}[unit] * (isFontSize ? percent : this.get('font-size'));\r\n        } else {\r\n          return value * {'':1, 'px':1, 'pt':96/72, 'cm':96/2.54, 'mm':96/25.4, 'in':96, 'pc':96/6}[unit];\r\n        }\r\n      };\r\n      this.computeLength = function(value, percent, initial, isFontSize) {\r\n        let parser = new StringParser((value || '').trim()), temp1, temp2;\r\n        if (typeof (temp1 = parser.matchNumber()) === 'string' && typeof (temp2 = parser.matchLengthUnit()) === 'string' && !parser.matchAll()) {\r\n          return this.computeUnits(temp1, temp2, percent, isFontSize);\r\n        }\r\n        return initial;\r\n      };\r\n      this.computeLengthList = function(value, percent, strict) {\r\n        let parser = new StringParser((value || '').trim()), result = [], temp1, temp2;\r\n        while (typeof (temp1 = parser.matchNumber()) === 'string' && typeof (temp2 = parser.matchLengthUnit()) === 'string') {\r\n          result.push(this.computeUnits(temp1, temp2, percent));\r\n          parser.matchSeparator();\r\n        }\r\n        if (strict && parser.matchAll()) {return;}\r\n        return result;\r\n      };\r\n      this.getLength = function(key, percent, initial) {\r\n        return this.computeLength(this.attr(key), percent, initial);\r\n      };\r\n      this.getLengthList = function(key, percent) {\r\n        return this.computeLengthList(this.attr(key), percent);\r\n      };\r\n      this.getUrl = function(key) {\r\n        return this.resolveUrl(this.attr(key))\r\n      };\r\n      this.getNumberList = function(key) {\r\n        let parser = new StringParser((this.attr(key) || '').trim()), result = [], temp;\r\n        while (temp = parser.matchNumber()) {\r\n          result.push(Number(temp));\r\n          parser.matchSeparator();\r\n        }\r\n        result.error = parser.matchAll();\r\n        return result;\r\n      }\r\n      this.getViewbox = function(key, initial) {\r\n        let viewBox = this.getNumberList(key);\r\n        if (viewBox.length === 4 && viewBox[2] >= 0 && viewBox[3] >= 0) {return viewBox;}\r\n        return initial;\r\n      };\r\n      this.getPercent = function(key, initial) {\r\n        let value = this.attr(key);\r\n        let parser = new StringParser((value || '').trim()), temp1, temp2;\r\n        let number = parser.matchNumber();\r\n        if (!number) {return initial;}\r\n        if (parser.match('%')) {number *= 0.01;}\r\n        if (parser.matchAll()) {return initial;}\r\n        return Math.max(0, Math.min(1, number));\r\n      };\r\n      this.chooseValue = function(args) {\r\n        for (let i = 0; i < arguments.length; i++) {\r\n          if (arguments[i] != null && arguments[i] === arguments[i]) {return arguments[i];}\r\n        }\r\n        return arguments[arguments.length - 1];\r\n      };\r\n      this.get = function(key) {\r\n        if (styleCache[key] !== undefined) {return styleCache[key];}\r\n        let keyInfo = Properties[key] || {}, value, result;\r\n        for (let i = 0; i < 3; i++) {\r\n          switch (i) {\r\n            case 0:\r\n              if (key !== 'transform') { // the CSS transform behaves strangely\r\n                value = this.css[keyInfo.css || key];\r\n              }\r\n              break;\r\n            case 1:\r\n              value = this.style[key];\r\n              break;\r\n            case 2:\r\n              value = this.attr(key);\r\n              break;\r\n          }\r\n          if (value === 'inherit') {\r\n            result = (this.inherits ? this.inherits.get(key) : keyInfo.initial);\r\n            if (result != null) {return styleCache[key] = result;}\r\n          }\r\n          if (keyInfo.values != null) {\r\n            result = keyInfo.values[value];\r\n            if (result != null) {return styleCache[key] = result;}\r\n          }\r\n          if (value != null) {\r\n            let parsed;\r\n            switch (key) {\r\n              case 'font-size':\r\n                result = this.computeLength(value, this.inherits ? this.inherits.get(key) : keyInfo.initial, undefined, true);\r\n                break;\r\n              case 'baseline-shift':\r\n                result = this.computeLength(value, this.get('font-size'));\r\n                break;\r\n              case 'font-family':\r\n                result = value || undefined;\r\n                break;\r\n              case 'opacity': case 'stroke-opacity': case 'fill-opacity': case 'stop-opacity':\r\n                parsed = parseFloat(value);\r\n                if (!isNaN(parsed)) {\r\n                  result = Math.max(0, Math.min(1, parsed));\r\n                }\r\n                break;\r\n              case 'transform':\r\n                result = parseTranform(value);\r\n                break;\r\n              case 'stroke-dasharray':\r\n                if (value === 'none') {\r\n                  result = [];\r\n                } else if (parsed = this.computeLengthList(value, this.getViewport(), true)) {\r\n                  let sum = 0, error = false;\r\n                  for (let j = 0; j < parsed.length; j++) {\r\n                    if (parsed[j] < 0) {error = true;}\r\n                    sum += parsed[j];\r\n                  }\r\n                  if (!error) {\r\n                    if (parsed.length % 2 === 1) {\r\n                      parsed = parsed.concat(parsed);\r\n                    }\r\n                    result = (sum === 0 ? [] : parsed);\r\n                  }\r\n                }\r\n                break;\r\n              case 'color':\r\n                if (value === 'none' || value === 'transparent') {\r\n                  result = 'none';\r\n                } else {\r\n                  result = parseColor(value);\r\n                }\r\n                break;\r\n              case 'fill': case 'stroke':\r\n                if (value === 'none' || value === 'transparent') {\r\n                  result = 'none';\r\n                } else if (value === 'currentColor') {\r\n                  result = this.get('color');\r\n                } else if (parsed = parseColor(value)) {\r\n                  return parsed;\r\n                } else if (parsed = (value || '').split(' ')) {\r\n                  let object = this.resolveUrl(parsed[0]),\r\n                      fallbackColor = parseColor(parsed[1]);\r\n                  if (object == null) {\r\n                    result = fallbackColor;\r\n                  } else if (object.nodeName === 'linearGradient' || object.nodeName === 'radialGradient') {\r\n                    result = new SvgElemGradient(object, null, fallbackColor);\r\n                  } else if (object.nodeName === 'pattern') {\r\n                    result = new SvgElemPattern(object, null, fallbackColor);\r\n                  } else {\r\n                    result = fallbackColor;\r\n                  }\r\n                }\r\n                break;\r\n              case 'stop-color':\r\n                if (value === 'none' || value === 'transparent') {\r\n                  result = 'none';\r\n                } else if (value === 'currentColor') {\r\n                  result = this.get('color');\r\n                } else {\r\n                  result = parseColor(value);\r\n                }\r\n                break;\r\n              case 'marker-start': case 'marker-mid': case 'marker-end': case 'clip-path': case 'mask':\r\n                if (value === 'none') {\r\n                  result = 'none';\r\n                } else {\r\n                  result = this.resolveUrl(value);\r\n                }\r\n                break;\r\n              case 'stroke-width':\r\n                parsed = this.computeLength(value, this.getViewport());\r\n                if (parsed != null && parsed >= 0) {\r\n                  result = parsed;\r\n                }\r\n                break;\r\n              case 'stroke-miterlimit':\r\n                parsed = parseFloat(value);\r\n                if (parsed != null && parsed >= 1) {\r\n                  result = parsed;\r\n                }\r\n                break;\r\n              case 'word-spacing': case 'letter-spacing':\r\n                result = this.computeLength(value, this.getViewport());\r\n                break;\r\n              case 'stroke-dashoffset':\r\n                result = this.computeLength(value, this.getViewport());\r\n                if (result != null) {\r\n                  if (result < 0) { // fix for crbug.com/660850\r\n                    let dasharray = this.get('stroke-dasharray');\r\n                    for (let j = 0; j < dasharray.length; j++) {result += dasharray[j];}\r\n                  }\r\n                }\r\n                break;\r\n            }\r\n            if (result != null) {return styleCache[key] = result;}\r\n          }\r\n        }\r\n        return styleCache[key] = (keyInfo.inherit && this.inherits ? this.inherits.get(key) : keyInfo.initial);\r\n      };\r\n      this.getChildren = function() {\r\n        if (childrenCache != null) {return childrenCache;}\r\n        let children = [];\r\n        for (let i = 0; i < obj.childNodes.length; i++) {\r\n          let child = obj.childNodes[i];\r\n          if (!child.error && this.allowedChildren.indexOf(child.nodeName) !== -1) {\r\n            children.push(createSVGElement(child, this));\r\n          }\r\n        }\r\n        return childrenCache = children;\r\n      };\r\n      this.getParentVWidth = function() {\r\n        return (this.inherits ? this.inherits.getVWidth(): viewportWidth);\r\n      };\r\n      this.getParentVHeight = function() {\r\n        return (this.inherits ? this.inherits.getVHeight() : viewportHeight);\r\n      };\r\n      this.getParentViewport = function() {\r\n        return Math.sqrt(0.5 * this.getParentVWidth() * this.getParentVWidth() + 0.5 * this.getParentVHeight() * this.getParentVHeight());\r\n      };\r\n      this.getVWidth = function() {\r\n        return this.getParentVWidth();\r\n      };\r\n      this.getVHeight = function() {\r\n        return this.getParentVHeight();\r\n      };\r\n      this.getViewport = function() {\r\n        return Math.sqrt(0.5 * this.getVWidth() * this.getVWidth() + 0.5 * this.getVHeight() * this.getVHeight());\r\n      };\r\n      this.getBoundingBox = function() {\r\n        let shape = this.getBoundingShape();\r\n        return shape.getBoundingBox();\r\n      };\r\n    };\r\n\r\n    var SvgElemStylable = function(obj, inherits) {\r\n      SvgElem.call(this, obj, inherits);\r\n      this.transform = function() {\r\n        doc.transform.apply(doc, this.getTransformation());\r\n      };\r\n      this.clip = function() {\r\n        if (this.get('clip-path') !== 'none') {\r\n          let clipPath = new SvgElemClipPath(this.get('clip-path'), null);\r\n          clipPath.useMask(this.getBoundingBox());\r\n          return true;\r\n        }\r\n      };\r\n      this.mask = function() {\r\n        if (this.get('mask') !== 'none') {\r\n          let mask = new SvgElemMask(this.get('mask'), null);\r\n          mask.useMask(this.getBoundingBox());\r\n          return true;\r\n        }\r\n      };\r\n      this.getFill = function(isClip, isMask) {\r\n        let opacity = this.get('opacity'),\r\n            fill = this.get('fill'),\r\n            fillOpacity = this.get('fill-opacity');\r\n        if (isClip) {return DefaultColors.white;}\r\n        if (fill !== 'none' && opacity && fillOpacity) {\r\n          if (fill instanceof SvgElemGradient || fill instanceof SvgElemPattern) {\r\n            return fill.getPaint(this.getBoundingBox(), fillOpacity * opacity, isClip, isMask);\r\n          }\r\n          return opacityToColor(fill, fillOpacity * opacity, isMask);\r\n        }\r\n      };\r\n      this.getStroke = function(isClip, isMask) {\r\n        let opacity = this.get('opacity'),\r\n            stroke = this.get('stroke'),\r\n            strokeOpacity = this.get('stroke-opacity');\r\n        if (isClip || isEqual(this.get('stroke-width'), 0)) {return;}\r\n        if (stroke !== 'none' && opacity && strokeOpacity) {\r\n          if (stroke instanceof SvgElemGradient || stroke instanceof SvgElemPattern) {\r\n            return stroke.getPaint(this.getBoundingBox(), strokeOpacity * opacity, isClip, isMask);\r\n          }\r\n          return opacityToColor(stroke, strokeOpacity * opacity, isMask);\r\n        }\r\n      };\r\n    };\r\n\r\n    var SvgElemHasChildren = function(obj, inherits) {\r\n      SvgElemStylable.call(this, obj, inherits);\r\n      this.allowedChildren = ['use', 'g', 'a', 'svg', 'image', 'rect', 'circle', 'ellipse', 'line', 'polyline', 'polygon', 'path', 'text'];\r\n      this.getBoundingShape = function() {\r\n        let shape = new SvgShape(),\r\n            children = this.getChildren();\r\n        for (let i = 0; i < children.length; i++) {\r\n          if (children[i].get('display') !== 'none') {\r\n            if (typeof children[i].getBoundingShape === 'function') {\r\n              let childShape = children[i].getBoundingShape().clone();\r\n              if (typeof children[i].getTransformation === 'function') {\r\n                childShape.transform(children[i].getTransformation());\r\n              }\r\n              shape.mergeShape(childShape);\r\n            }\r\n          }\r\n        }\r\n        return shape;\r\n      };\r\n      this.drawChildren = function(isClip, isMask) {\r\n        let children = this.getChildren();\r\n        for (let i = 0; i < children.length; i++) {\r\n          if (children[i].get('display') !== 'none') {\r\n            if (typeof children[i].drawInDocument === 'function') {\r\n              children[i].drawInDocument(isClip, isMask);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    };\r\n\r\n    var SvgElemContainer = function(obj, inherits) {\r\n      SvgElemHasChildren.call(this, obj, inherits);\r\n      this.drawContent = function(isClip, isMask) {\r\n        this.transform();\r\n        let clipped = this.clip(),\r\n            masked = this.mask(),\r\n            group;\r\n        if ((this.get('opacity') < 1 || clipped || masked) && !isClip) {\r\n          group = docBeginGroup(getPageBBox());\r\n        }\r\n        this.drawChildren(isClip, isMask);\r\n        if (group) {\r\n          docEndGroup(group);\r\n          doc.fillOpacity(this.get('opacity'));\r\n          docInsertGroup(group);\r\n        }\r\n      };\r\n    };\r\n\r\n    var SvgElemUse = function(obj, inherits) {\r\n      SvgElemContainer.call(this, obj, inherits);\r\n      let x = this.getLength('x', this.getVWidth(), 0),\r\n          y = this.getLength('y', this.getVHeight(), 0),\r\n          child = this.getUrl('href') || this.getUrl('xlink:href');\r\n      if (child) {child = createSVGElement(child, this);}\r\n      this.getChildren  = function() {\r\n        return child ? [child] : [];\r\n      };\r\n      this.drawInDocument = function(isClip, isMask) {\r\n        doc.save();\r\n        this.drawContent(isClip, isMask);\r\n        doc.restore();\r\n      };\r\n      this.getTransformation = function() {\r\n        return multiplyMatrix(this.get('transform'), [1, 0, 0, 1, x, y]);\r\n      };\r\n    };\r\n\r\n    var SvgElemSymbol = function(obj, inherits) {\r\n      SvgElemContainer.call(this, obj, inherits);\r\n      let width = this.getLength('width', this.getParentVWidth(), this.getParentVWidth()),\r\n          height = this.getLength('height', this.getParentVHeight(), this.getParentVHeight());\r\n      if (inherits instanceof SvgElemUse) {\r\n        width = inherits.getLength('width', inherits.getParentVWidth(), width);\r\n        height = inherits.getLength('height', inherits.getParentVHeight(), height);\r\n      }\r\n      let aspectRatio = (this.attr('preserveAspectRatio') || '').trim(),\r\n          viewBox = this.getViewbox('viewBox', [0, 0, width, height]);\r\n      this.getVWidth = function() {\r\n        return viewBox[2];\r\n      };\r\n      this.getVHeight = function() {\r\n        return viewBox[3];\r\n      };\r\n      this.drawInDocument = function(isClip, isMask) {\r\n        doc.save();\r\n        this.drawContent(isClip, isMask);\r\n        doc.restore();\r\n      };\r\n      this.getTransformation = function() {\r\n        return multiplyMatrix(parseAspectRatio(aspectRatio, width, height, viewBox[2], viewBox[3]), [1, 0, 0, 1, -viewBox[0], -viewBox[1]]);\r\n      };\r\n    };\r\n\r\n    var SvgElemGroup = function(obj, inherits) {\r\n      SvgElemContainer.call(this, obj, inherits);\r\n      this.drawInDocument = function(isClip, isMask) {\r\n        doc.save();\r\n        if (this.link && !isClip && !isMask) {this.addLink();}\r\n        this.drawContent(isClip, isMask);\r\n        doc.restore();\r\n      };\r\n      this.getTransformation = function() {\r\n        return this.get('transform');\r\n      };\r\n    };\r\n\r\n    var SvgElemLink = function(obj, inherits) {\r\n      if (inherits && inherits.isText) {\r\n        SvgElemTspan.call(this, obj, inherits);\r\n        this.allowedChildren = ['textPath', 'tspan', '#text', '#cdata-section', 'a'];\r\n      } else {\r\n        SvgElemGroup.call(this, obj, inherits);\r\n      }\r\n      this.link = this.attr('href') || this.attr('xlink:href');\r\n      this.addLink = function() {\r\n        if (this.link.match(/^(?:[a-z][a-z0-9+.-]*:|\\/\\/)?/i) && this.getChildren().length) {\r\n          let bbox = this.getBoundingShape().transform(getGlobalMatrix()).getBoundingBox();\r\n          docInsertLink(bbox[0], bbox[1], bbox[2], bbox[3], this.link);\r\n        }\r\n      }\r\n    };\r\n\r\n    var SvgElemSvg = function(obj, inherits) {\r\n      SvgElemContainer.call(this, obj, inherits);\r\n      let width = this.getLength('width', this.getParentVWidth(), this.getParentVWidth()),\r\n          height = this.getLength('height', this.getParentVHeight(), this.getParentVHeight()),\r\n          x = this.getLength('x', this.getParentVWidth(), 0),\r\n          y = this.getLength('y', this.getParentVHeight(), 0);\r\n      if (inherits instanceof SvgElemUse) {\r\n        width = inherits.getLength('width', inherits.getParentVWidth(), width);\r\n        height = inherits.getLength('height', inherits.getParentVHeight(), height);\r\n      }\r\n      let aspectRatio = this.attr('preserveAspectRatio'),\r\n          viewBox = this.getViewbox('viewBox', [0, 0, width, height]);\r\n      if (this.isOuterElement && preserveAspectRatio) {\r\n        x = y = 0;\r\n        width = viewportWidth;\r\n        height = viewportHeight;\r\n        aspectRatio = preserveAspectRatio;\r\n      }\r\n      this.getVWidth = function() {\r\n        return viewBox[2];\r\n      };\r\n      this.getVHeight = function() {\r\n        return viewBox[3];\r\n      };\r\n      this.drawInDocument = function(isClip, isMask) {\r\n        doc.save();\r\n        if (this.get('overflow') === 'hidden') {\r\n          new SvgShape().M(x, y).L(x + width, y).L(x + width, y + height).L(x, y + height).Z()\r\n                        .transform(this.get('transform'))\r\n                        .insertInDocument();\r\n          doc.clip();\r\n        }\r\n        this.drawContent(isClip, isMask);\r\n        doc.restore();\r\n      };\r\n      this.getTransformation = function() {\r\n        return multiplyMatrix(\r\n          this.get('transform'),\r\n          [1, 0, 0, 1, x, y],\r\n          parseAspectRatio(aspectRatio, width, height, viewBox[2], viewBox[3]),\r\n          [1, 0, 0, 1, -viewBox[0], -viewBox[1]]\r\n        );\r\n      };\r\n    };\r\n\r\n    var SVGElemImage = function(obj, inherits) {\r\n      SvgElemStylable.call(this, obj, inherits);\r\n      let link = imageCallback(this.attr('href') || this.attr('xlink:href') || ''),\r\n          x = this.getLength('x', this.getVWidth(), 0),\r\n          y = this.getLength('y', this.getVHeight(), 0),\r\n          width = this.getLength('width', this.getVWidth(), 'auto'),\r\n          height = this.getLength('height', this.getVHeight(), 'auto'),\r\n          image;\r\n      try {\r\n        image = doc.openImage(link);\r\n      } catch(e) {\r\n        warningCallback('SVGElemImage: failed to open image \"' + link + '\" in PDFKit');\r\n      }\r\n      if (image) {\r\n        if (width === 'auto' && height !== 'auto') {\r\n          width = height * image.width / image.height;\r\n        } else if (height === 'auto' && width !== 'auto') {\r\n          height = width * image.height / image.width;\r\n        } else if (width === 'auto' && height === 'auto') {\r\n          width = image.width;\r\n          height = image.height;\r\n        }\r\n      }\r\n      if (width === 'auto' || width < 0) {width = 0;}\r\n      if (height === 'auto' || height < 0) {height = 0;}\r\n      this.getTransformation = function() {\r\n        return this.get('transform');\r\n      };\r\n      this.getBoundingShape = function() {\r\n        return new SvgShape().M(x, y).L(x + width, y).M(x + width, y + height).L(x, y + height);\r\n      };\r\n      this.drawInDocument = function(isClip, isMask) {\r\n        if (this.get('visibility') === 'hidden' || !image) {return;}\r\n        doc.save();\r\n        this.transform();\r\n        if (this.get('overflow') === 'hidden') {\r\n          doc.rect(x, y, width, height).clip();\r\n        }\r\n        this.clip();\r\n        this.mask();\r\n        doc.translate(x, y);\r\n        doc.transform.apply(doc, parseAspectRatio(this.attr('preserveAspectRatio'), width, height, image ? image.width : width, image ? image.height : height));\r\n        if (!isClip) {\r\n          doc.fillOpacity(this.get('opacity'));\r\n          doc.image(image, 0, 0);\r\n        } else {\r\n          doc.rect(0, 0, image.width, image.height);\r\n          docFillColor(DefaultColors.white).fill();\r\n        }\r\n        doc.restore();\r\n      };\r\n    };\r\n\r\n    var SvgElemPattern = function(obj, inherits, fallback) {\r\n      SvgElemHasChildren.call(this, obj, inherits);\r\n      this.ref = (function() {\r\n        let ref = this.getUrl('href') || this.getUrl('xlink:href');\r\n        if (ref && ref.nodeName === obj.nodeName) {\r\n          return new SvgElemPattern(ref, inherits, fallback);\r\n        }\r\n      }).call(this);\r\n      let _attr = this.attr;\r\n      this.attr = function(key) {\r\n        let attr = _attr.call(this, key);\r\n        if (attr != null || key === 'href' || key === 'xlink:href') {return attr;}\r\n        return this.ref ? this.ref.attr(key) : null;\r\n      };\r\n      let _getChildren = this.getChildren;\r\n      this.getChildren = function() {\r\n        let children = _getChildren.call(this);\r\n        if (children.length > 0) {return children;}\r\n        return this.ref ? this.ref.getChildren() : [];\r\n      };\r\n      this.getPaint = function(bBox, gOpacity, isClip, isMask) {\r\n        let bBoxUnitsPattern = (this.attr('patternUnits') !== 'userSpaceOnUse'),\r\n            bBoxUnitsContent = (this.attr('patternContentUnits') === 'objectBoundingBox'),\r\n            x = this.getLength('x', (bBoxUnitsPattern ? 1 : this.getParentVWidth()), 0),\r\n            y = this.getLength('y', (bBoxUnitsPattern ? 1 : this.getParentVHeight()), 0),\r\n            width = this.getLength('width', (bBoxUnitsPattern ? 1 : this.getParentVWidth()), 0),\r\n            height = this.getLength('height', (bBoxUnitsPattern ? 1 : this.getParentVHeight()), 0);\r\n        if (bBoxUnitsContent && !bBoxUnitsPattern) { // Use the same units for pattern & pattern content\r\n          x = (x - bBox[0]) / (bBox[2] - bBox[0]) || 0;\r\n          y = (y - bBox[1]) / (bBox[3] - bBox[1]) || 0;\r\n          width = width / (bBox[2] - bBox[0]) || 0;\r\n          height = height / (bBox[3] - bBox[1]) || 0;\r\n        } else if (!bBoxUnitsContent && bBoxUnitsPattern) {\r\n          x = bBox[0] + x * (bBox[2] - bBox[0]);\r\n          y = bBox[1] + y * (bBox[3] - bBox[1]);\r\n          width = width * (bBox[2] - bBox[0]);\r\n          height = height * (bBox[3] - bBox[1]);\r\n        }\r\n        let viewBox = this.getViewbox('viewBox', [0, 0, width, height]),\r\n            aspectRatio = (this.attr('preserveAspectRatio') || '').trim(),\r\n            aspectRatioMatrix = multiplyMatrix(\r\n              parseAspectRatio(aspectRatio, width, height, viewBox[2], viewBox[3], 0),\r\n              [1, 0, 0, 1, -viewBox[0], -viewBox[1]]\r\n            ),\r\n            matrix = parseTranform(this.attr('patternTransform'));\r\n        if (bBoxUnitsContent) {\r\n          matrix = multiplyMatrix([bBox[2] - bBox[0], 0, 0, bBox[3] - bBox[1], bBox[0], bBox[1]], matrix);\r\n        }\r\n        matrix = multiplyMatrix(matrix, [1, 0, 0, 1, x, y]);\r\n        if ((matrix = validateMatrix(matrix)) && (aspectRatioMatrix = validateMatrix(aspectRatioMatrix)) && (width = validateNumber(width)) && (height = validateNumber(height))) {\r\n          let group = docBeginGroup([0, 0, width, height]);\r\n          doc.transform.apply(doc, aspectRatioMatrix);\r\n          this.drawChildren(isClip, isMask);\r\n          docEndGroup(group);\r\n          return [docCreatePattern(group, width, height, matrix), gOpacity];\r\n        } else {\r\n          return fallback ? [fallback[0], fallback[1] * gOpacity] : undefined;\r\n        }\r\n      };\r\n      this.getVWidth = function() {\r\n        let bBoxUnitsPattern = (this.attr('patternUnits') !== 'userSpaceOnUse'),\r\n            width = this.getLength('width', (bBoxUnitsPattern ? 1 : this.getParentVWidth()), 0);\r\n        return this.getViewbox('viewBox', [0, 0, width, 0])[2];\r\n      };\r\n      this.getVHeight = function() {\r\n        let bBoxUnitsPattern = (this.attr('patternUnits') !== 'userSpaceOnUse'),\r\n            height = this.getLength('height', (bBoxUnitsPattern ? 1 : this.getParentVHeight()), 0);\r\n        return this.getViewbox('viewBox', [0, 0, 0, height])[3];\r\n      };\r\n    };\r\n\r\n    var SvgElemGradient = function(obj, inherits, fallback) {\r\n      SvgElem.call(this, obj, inherits);\r\n      this.allowedChildren = ['stop'];\r\n      this.ref = (function() {\r\n        let ref = this.getUrl('href') || this.getUrl('xlink:href');\r\n        if (ref && ref.nodeName === obj.nodeName) {\r\n          return new SvgElemGradient(ref, inherits, fallback);\r\n        }\r\n      }).call(this);\r\n      let _attr = this.attr;\r\n      this.attr = function(key) {\r\n        let attr = _attr.call(this, key);\r\n        if (attr != null || key === 'href' || key === 'xlink:href') {return attr;}\r\n        return this.ref ? this.ref.attr(key) : null;\r\n      };\r\n      let _getChildren = this.getChildren;\r\n      this.getChildren = function() {\r\n        let children = _getChildren.call(this);\r\n        if (children.length > 0) {return children;}\r\n        return this.ref ? this.ref.getChildren() : [];\r\n      };\r\n      this.getPaint = function(bBox, gOpacity, isClip, isMask) {\r\n        let children = this.getChildren();\r\n        if (children.length === 0) {return;}\r\n        if (children.length === 1) {\r\n          let child = children[0],\r\n              stopColor = child.get('stop-color');\r\n          if (stopColor === 'none') {return;}\r\n          return opacityToColor(stopColor, child.get('stop-opacity') * gOpacity, isMask);\r\n        }\r\n        let bBoxUnits = (this.attr('gradientUnits') !== 'userSpaceOnUse'),\r\n            matrix = parseTranform(this.attr('gradientTransform')),\r\n            spread = this.attr('spreadMethod'),\r\n            grad,\r\n            x1, x2, y1, y2, r2,\r\n            nAfter = 0,\r\n            nBefore = 0,\r\n            nTotal = 1;\r\n        if (bBoxUnits) {\r\n          matrix = multiplyMatrix([bBox[2] - bBox[0], 0, 0, bBox[3] - bBox[1], bBox[0], bBox[1]], matrix);\r\n        }\r\n        if (matrix = validateMatrix(matrix)) {\r\n          if (this.name === 'linearGradient') {\r\n            x1 = this.getLength('x1', (bBoxUnits ? 1 : this.getVWidth()), 0);\r\n            x2 = this.getLength('x2', (bBoxUnits ? 1 : this.getVWidth()), (bBoxUnits ? 1 : this.getVWidth()));\r\n            y1 = this.getLength('y1', (bBoxUnits ? 1 : this.getVHeight()), 0);\r\n            y2 = this.getLength('y2', (bBoxUnits ? 1 : this.getVHeight()), 0);\r\n          } else {\r\n            x2 = this.getLength('cx', (bBoxUnits ? 1 : this.getVWidth()), (bBoxUnits ? 0.5 : 0.5 * this.getVWidth()));\r\n            y2 = this.getLength('cy', (bBoxUnits ? 1 : this.getVHeight()), (bBoxUnits ? 0.5 : 0.5 * this.getVHeight()));\r\n            r2 = this.getLength('r', (bBoxUnits ? 1 : this.getViewport()), (bBoxUnits ? 0.5 : 0.5 * this.getViewport()));\r\n            x1 = this.getLength('fx', (bBoxUnits ? 1 : this.getVWidth()), x2);\r\n            y1 = this.getLength('fy', (bBoxUnits ? 1 : this.getVHeight()), y2);\r\n            if (r2 < 0) {\r\n              warningCallback('SvgElemGradient: negative r value');\r\n            }\r\n            let d = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\r\n                multiplier = 1;\r\n            if (d > r2) { // according to specification\r\n              multiplier = r2 / d;\r\n              x1 = x2 + (x1 - x2) * multiplier;\r\n              y1 = y2 + (y1 - y2) * multiplier;\r\n            }\r\n            r2 = Math.max(r2, d * multiplier * (1 + 1e-6)); // fix for edge-case gradients see issue #84\r\n          }\r\n          if (spread === 'reflect' || spread === 'repeat') {\r\n            let inv = inverseMatrix(matrix),\r\n                corner1 = transformPoint([bBox[0], bBox[1]], inv),\r\n                corner2 = transformPoint([bBox[2], bBox[1]], inv),\r\n                corner3 = transformPoint([bBox[2], bBox[3]], inv),\r\n                corner4 = transformPoint([bBox[0], bBox[3]], inv);\r\n            if (this.name === 'linearGradient') { // See file 'gradient-repeat-maths.png'\r\n              nAfter  = Math.max((corner1[0] - x2) * (x2 - x1) + (corner1[1] - y2) * (y2 - y1),\r\n                                 (corner2[0] - x2) * (x2 - x1) + (corner2[1] - y2) * (y2 - y1),\r\n                                 (corner3[0] - x2) * (x2 - x1) + (corner3[1] - y2) * (y2 - y1),\r\n                                 (corner4[0] - x2) * (x2 - x1) + (corner4[1] - y2) * (y2 - y1))\r\n                                / (Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n              nBefore = Math.max((corner1[0] - x1) * (x1 - x2) + (corner1[1] - y1) * (y1 - y2),\r\n                                 (corner2[0] - x1) * (x1 - x2) + (corner2[1] - y1) * (y1 - y2),\r\n                                 (corner3[0] - x1) * (x1 - x2) + (corner3[1] - y1) * (y1 - y2),\r\n                                 (corner4[0] - x1) * (x1 - x2) + (corner4[1] - y1) * (y1 - y2))\r\n                                / (Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n            } else {\r\n              nAfter  = Math.sqrt(Math.max(Math.pow(corner1[0] - x2, 2) + Math.pow(corner1[1] - y2, 2),\r\n                                           Math.pow(corner2[0] - x2, 2) + Math.pow(corner2[1] - y2, 2),\r\n                                           Math.pow(corner3[0] - x2, 2) + Math.pow(corner3[1] - y2, 2),\r\n                                           Math.pow(corner4[0] - x2, 2) + Math.pow(corner4[1] - y2, 2))) / r2 - 1;\r\n            }\r\n            nAfter = Math.ceil(nAfter + 0.5); // Add a little more because the stroke can extend outside of the bounding box\r\n            nBefore = Math.ceil(nBefore + 0.5);\r\n            nTotal = nBefore + 1 + nAfter; // How many times the gradient needs to be repeated to fill the object bounding box\r\n          }\r\n          if (this.name === 'linearGradient') {\r\n            grad = doc.linearGradient(x1 - nBefore * (x2 - x1), y1 - nBefore * (y2 - y1), x2 + nAfter * (x2 - x1), y2 + nAfter * (y2 - y1));\r\n          } else {\r\n            grad = doc.radialGradient(x1, y1, 0, x2, y2, r2 + nAfter * r2);\r\n          }\r\n          for (let n = 0; n < nTotal; n++) {\r\n            let offset = 0,\r\n                inOrder = (spread !== 'reflect' || (n - nBefore) % 2 === 0);\r\n            for (let i = 0; i < children.length; i++) {\r\n              let child = children[inOrder ? i : children.length - 1 - i],\r\n                  stopColor = child.get('stop-color');\r\n              if (stopColor === 'none') {stopColor = DefaultColors.transparent;}\r\n              stopColor = opacityToColor(stopColor, child.get('stop-opacity') * gOpacity, isMask);\r\n              offset = Math.max(offset, inOrder ? child.getPercent('offset', 0) : 1 - child.getPercent('offset', 0));\r\n              if (i === 0 && stopColor[0].length === 4) {grad._colorSpace = 'DeviceCMYK';} // Fix until PR #763 is merged into PDFKit\r\n              if (i === 0 && offset > 0) {\r\n                grad.stop((n + 0) / nTotal, stopColor[0], stopColor[1]);\r\n              }\r\n              grad.stop((n + offset) / (nAfter + nBefore + 1), stopColor[0], stopColor[1]);\r\n              if (i === children.length - 1 && offset < 1) {\r\n                grad.stop((n + 1) / nTotal, stopColor[0], stopColor[1]);\r\n              }\r\n            }\r\n          }\r\n          grad.setTransform.apply(grad, matrix);\r\n          return [grad, 1];\r\n        } else {\r\n          return fallback ? [fallback[0], fallback[1] * gOpacity] : undefined;\r\n        }\r\n      }\r\n    };\r\n\r\n    var SvgElemBasicShape = function(obj, inherits) {\r\n      SvgElemStylable.call(this, obj, inherits);\r\n      this.dashScale = 1;\r\n      this.getBoundingShape = function() {\r\n        return this.shape;\r\n      };\r\n      this.getTransformation = function() {\r\n        return this.get('transform');\r\n      };\r\n      this.drawInDocument = function(isClip, isMask) {\r\n        if (this.get('visibility') === 'hidden' || !this.shape) {return;}\r\n        doc.save();\r\n        this.transform();\r\n        this.clip();\r\n        if (!isClip) {\r\n          let masked = this.mask(),\r\n              group;\r\n          if (masked) {\r\n            group = docBeginGroup(getPageBBox());\r\n          }\r\n          let subPaths = this.shape.getSubPaths(),\r\n              fill = this.getFill(isClip, isMask),\r\n              stroke = this.getStroke(isClip, isMask),\r\n              lineWidth = this.get('stroke-width'),\r\n              lineCap = this.get('stroke-linecap');\r\n          if (fill || stroke) {\r\n            if (fill) {\r\n              docFillColor(fill);\r\n            }\r\n            if (stroke) {\r\n              for (let j = 0; j < subPaths.length; j++) {\r\n                if (isEqual(subPaths[j].totalLength, 0)) {\r\n                  if ((lineCap === 'square' || lineCap === 'round') && lineWidth > 0) {\r\n                    if (subPaths[j].startPoint && subPaths[j].startPoint.length > 1) {\r\n                      let x = subPaths[j].startPoint[0],\r\n                          y = subPaths[j].startPoint[1];\r\n                      docFillColor(stroke);\r\n                      if (lineCap === 'square') {\r\n                        doc.rect(x - 0.5 * lineWidth, y - 0.5 * lineWidth, lineWidth, lineWidth);\r\n                      } else if (lineCap === 'round') {\r\n                        doc.circle(x, y, 0.5 * lineWidth);\r\n                      }\r\n                      doc.fill();\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              let dashArray = this.get('stroke-dasharray'),\r\n                  dashOffset = this.get('stroke-dashoffset');\r\n              if (isNotEqual(this.dashScale, 1)) {\r\n                for (let j = 0; j < dashArray.length; j++) {\r\n                  dashArray[j] *= this.dashScale;\r\n                }\r\n                dashOffset *= this.dashScale;\r\n              }\r\n              docStrokeColor(stroke);\r\n              doc.lineWidth(lineWidth)\r\n                 .miterLimit(this.get('stroke-miterlimit'))\r\n                 .lineJoin(this.get('stroke-linejoin'))\r\n                 .lineCap(lineCap)\r\n                 .dash(dashArray, {phase: dashOffset});\r\n            }\r\n            for (let j = 0; j < subPaths.length; j++) {\r\n              if (subPaths[j].totalLength > 0) {\r\n                subPaths[j].insertInDocument();\r\n              }\r\n            }\r\n            if (fill && stroke) {\r\n              doc.fillAndStroke(this.get('fill-rule'));\r\n            } else if (fill) {\r\n              doc.fill(this.get('fill-rule'));\r\n            } else if (stroke) {\r\n              doc.stroke();\r\n            }\r\n          }\r\n          let markerStart = this.get('marker-start'),\r\n              markerMid = this.get('marker-mid'),\r\n              markerEnd = this.get('marker-end');\r\n          if (markerStart !== 'none' || markerMid !== 'none' || markerEnd !== 'none') {\r\n            let markersPos = this.shape.getMarkers();\r\n            if (markerStart !== 'none') {\r\n              let marker = new SvgElemMarker(markerStart, null);\r\n              marker.drawMarker(false, isMask, markersPos[0], lineWidth);\r\n            }\r\n            if (markerMid !== 'none') {\r\n              for (let i = 1; i < markersPos.length - 1; i++) {\r\n                let marker = new SvgElemMarker(markerMid, null);\r\n                marker.drawMarker(false, isMask, markersPos[i], lineWidth);\r\n              }\r\n            }\r\n            if (markerEnd !== 'none') {\r\n              let marker = new SvgElemMarker(markerEnd, null);\r\n              marker.drawMarker(false, isMask, markersPos[markersPos.length - 1], lineWidth);\r\n            }\r\n          }\r\n          if (group) {\r\n            docEndGroup(group);\r\n            docInsertGroup(group);\r\n          }\r\n        } else {\r\n          this.shape.insertInDocument();\r\n          docFillColor(DefaultColors.white);\r\n          doc.fill(this.get('clip-rule'));\r\n        }\r\n        doc.restore();\r\n      };\r\n    };\r\n\r\n    var SvgElemRect = function(obj, inherits) {\r\n      SvgElemBasicShape.call(this, obj, inherits);\r\n      let x = this.getLength('x', this.getVWidth(), 0),\r\n          y = this.getLength('y', this.getVHeight(), 0),\r\n          w = this.getLength('width', this.getVWidth(), 0),\r\n          h = this.getLength('height', this.getVHeight(), 0),\r\n          rx = this.getLength('rx', this.getVWidth()),\r\n          ry = this.getLength('ry', this.getVHeight());\r\n      if (rx === undefined && ry === undefined) {rx = ry = 0;}\r\n      else if (rx === undefined && ry !== undefined) {rx = ry;}\r\n      else if (rx !== undefined && ry === undefined) {ry = rx;}\r\n      if (w > 0 && h > 0) {\r\n        if (rx && ry) {\r\n          rx = Math.min(rx, 0.5 * w);\r\n          ry = Math.min(ry, 0.5 * h);\r\n          this.shape = new SvgShape().M(x + rx, y).L(x + w - rx, y).A(rx, ry, 0, 0, 1, x + w, y + ry)\r\n                            .L(x + w, y + h - ry).A(rx, ry, 0, 0, 1, x + w - rx, y + h).L(x + rx, y + h)\r\n                            .A(rx, ry, 0, 0, 1, x, y + h - ry).L(x, y + ry).A(rx, ry, 0, 0, 1, x + rx, y).Z();\r\n        } else {\r\n          this.shape = new SvgShape().M(x, y).L(x + w, y).L(x + w, y + h).L(x, y + h).Z();\r\n        }\r\n      } else {\r\n        this.shape = new SvgShape();\r\n      }\r\n    };\r\n\r\n    var SvgElemCircle = function(obj, inherits) {\r\n      SvgElemBasicShape.call(this, obj, inherits);\r\n      let cx = this.getLength('cx', this.getVWidth(), 0),\r\n          cy = this.getLength('cy', this.getVHeight(), 0),\r\n          r = this.getLength('r', this.getViewport(), 0);\r\n      if (r > 0) {\r\n        this.shape = new SvgShape().M(cx + r, cy).A(r, r, 0, 0, 1, cx - r, cy).A(r, r, 0, 0, 1, cx + r, cy).Z();\r\n      } else {\r\n        this.shape = new SvgShape();\r\n      }\r\n    };\r\n\r\n    var SvgElemEllipse = function(obj, inherits) {\r\n      SvgElemBasicShape.call(this, obj, inherits);\r\n      let cx = this.getLength('cx', this.getVWidth(), 0),\r\n          cy = this.getLength('cy', this.getVHeight(), 0),\r\n          rx = this.getLength('rx', this.getVWidth(), 0),\r\n          ry = this.getLength('ry', this.getVHeight(), 0);\r\n      if (rx > 0 && ry > 0) {\r\n        this.shape = new SvgShape().M(cx + rx, cy).A(rx, ry, 0, 0, 1, cx - rx, cy).A(rx, ry, 0, 0, 1, cx + rx, cy).Z();\r\n      } else {\r\n        this.shape = new SvgShape();\r\n      }\r\n    };\r\n\r\n    var SvgElemLine = function(obj, inherits) {\r\n      SvgElemBasicShape.call(this, obj, inherits);\r\n      let x1 = this.getLength('x1', this.getVWidth(), 0),\r\n          y1 = this.getLength('y1', this.getVHeight(), 0),\r\n          x2 = this.getLength('x2', this.getVWidth(), 0),\r\n          y2 = this.getLength('y2', this.getVHeight(), 0);\r\n      this.shape = new SvgShape().M(x1, y1).L(x2, y2);\r\n    };\r\n\r\n    var SvgElemPolyline = function(obj, inherits) {\r\n      SvgElemBasicShape.call(this, obj, inherits);\r\n      let points = this.getNumberList('points');\r\n      this.shape = new SvgShape();\r\n      for (let i = 0; i < points.length - 1; i += 2) {\r\n        if (i === 0) {\r\n          this.shape.M(points[i], points[i+1]);\r\n        } else {\r\n          this.shape.L(points[i], points[i+1]);\r\n        }\r\n      }\r\n      if (points.error) {warningCallback('SvgElemPolygon: unexpected string ' + points.error);}\r\n      if (points.length % 2 === 1) {warningCallback('SvgElemPolyline: uneven number of coordinates');}\r\n    };\r\n\r\n    var SvgElemPolygon = function(obj, inherits) {\r\n      SvgElemBasicShape.call(this, obj, inherits);\r\n      let points = this.getNumberList('points');\r\n      this.shape = new SvgShape();\r\n      for (let i = 0; i < points.length - 1; i += 2) {\r\n        if (i === 0) {\r\n          this.shape.M(points[i], points[i+1]);\r\n        } else {\r\n          this.shape.L(points[i], points[i+1]);\r\n        }\r\n      }\r\n      this.shape.Z();\r\n      if (points.error) {warningCallback('SvgElemPolygon: unexpected string ' + points.error);}\r\n      if (points.length % 2 === 1) {warningCallback('SvgElemPolygon: uneven number of coordinates');}\r\n    };\r\n\r\n    var SvgElemPath = function(obj, inherits) {\r\n      SvgElemBasicShape.call(this, obj, inherits);\r\n      this.shape = new SvgShape().path(this.attr('d'));\r\n      let pathLength = this.getLength('pathLength', this.getViewport());\r\n      this.pathLength = pathLength > 0 ? pathLength : undefined;\r\n      this.dashScale = (this.pathLength !== undefined ? this.shape.totalLength / this.pathLength : 1);\r\n    };\r\n\r\n    var SvgElemMarker = function(obj, inherits) {\r\n      SvgElemHasChildren.call(this, obj, inherits);\r\n      let width = this.getLength('markerWidth', this.getParentVWidth(), 3),\r\n          height = this.getLength('markerHeight', this.getParentVHeight(), 3),\r\n          viewBox = this.getViewbox('viewBox', [0, 0, width, height]);\r\n      this.getVWidth = function() {\r\n        return viewBox[2];\r\n      };\r\n      this.getVHeight = function() {\r\n        return viewBox[3];\r\n      };\r\n      this.drawMarker = function(isClip, isMask, posArray, strokeWidth) {\r\n        doc.save();\r\n        let orient = this.attr('orient'),\r\n            units = this.attr('markerUnits'),\r\n            rotate = (orient === 'auto' ? posArray[2] : (parseFloat(orient) || 0) * Math.PI / 180),\r\n            scale = (units === 'userSpaceOnUse' ? 1 : strokeWidth);\r\n        doc.transform(Math.cos(rotate) * scale, Math.sin(rotate) * scale, -Math.sin(rotate) * scale, Math.cos(rotate) * scale, posArray[0], posArray[1]);\r\n        let refX = this.getLength('refX', this.getVWidth(), 0),\r\n            refY = this.getLength('refY', this.getVHeight(), 0),\r\n            aspectRatioMatrix = parseAspectRatio(this.attr('preserveAspectRatio'), width, height, viewBox[2], viewBox[3], 0.5);\r\n        if (this.get('overflow') === 'hidden') {\r\n          doc.rect(aspectRatioMatrix[0] * (viewBox[0] + viewBox[2] / 2 - refX) - width / 2, aspectRatioMatrix[3] * (viewBox[1] + viewBox[3] / 2 - refY) - height / 2, width, height).clip();\r\n        }\r\n        doc.transform.apply(doc, aspectRatioMatrix);\r\n        doc.translate(-refX, -refY);\r\n        let group;\r\n        if (this.get('opacity') < 1 && !isClip) {\r\n          group = docBeginGroup(getPageBBox());\r\n        }\r\n        this.drawChildren(isClip, isMask);\r\n        if (group) {\r\n          docEndGroup(group);\r\n          doc.fillOpacity(this.get('opacity'));\r\n          docInsertGroup(group);\r\n        }\r\n        doc.restore();\r\n      };\r\n    };\r\n\r\n    var SvgElemClipPath = function(obj, inherits) {\r\n      SvgElemHasChildren.call(this, obj, inherits);\r\n      this.useMask = function(bBox) {\r\n        let group = docBeginGroup(getPageBBox());\r\n        doc.save();\r\n        if (this.attr('clipPathUnits') === 'objectBoundingBox') {\r\n          doc.transform(bBox[2] - bBox[0], 0, 0, bBox[3] - bBox[1], bBox[0], bBox[1]);\r\n        }\r\n        this.clip();\r\n        this.drawChildren(true, false);\r\n        doc.restore();\r\n        docEndGroup(group);\r\n        docApplyMask(group, true);\r\n      };\r\n    };\r\n\r\n    var SvgElemMask = function(obj, inherits) {\r\n      SvgElemHasChildren.call(this, obj, inherits);\r\n      this.useMask = function(bBox) {\r\n        let group = docBeginGroup(getPageBBox());\r\n        doc.save();\r\n        let x, y, w, h;\r\n        if (this.attr('maskUnits') === 'userSpaceOnUse') {\r\n          x = this.getLength('x', this.getVWidth(), -0.1 * (bBox[2] - bBox[0]) + bBox[0]);\r\n          y = this.getLength('y', this.getVHeight(), -0.1 * (bBox[3] - bBox[1]) + bBox[1]);\r\n          w = this.getLength('width', this.getVWidth(), 1.2 * (bBox[2] - bBox[0]));\r\n          h = this.getLength('height', this.getVHeight(), 1.2 * (bBox[3] - bBox[1]));\r\n        } else {\r\n          x = this.getLength('x', this.getVWidth(), -0.1) * (bBox[2] - bBox[0]) + bBox[0];\r\n          y = this.getLength('y', this.getVHeight(), -0.1) * (bBox[3] - bBox[1]) + bBox[1];\r\n          w = this.getLength('width', this.getVWidth(), 1.2) * (bBox[2] - bBox[0]);\r\n          h = this.getLength('height', this.getVHeight(), 1.2) * (bBox[3] - bBox[1]);\r\n        }\r\n        doc.rect(x, y, w, h).clip();\r\n        if (this.attr('maskContentUnits') === 'objectBoundingBox') {\r\n          doc.transform(bBox[2] - bBox[0], 0, 0, bBox[3] - bBox[1], bBox[0], bBox[1]);\r\n        }\r\n        this.clip();\r\n        this.drawChildren(false, true);\r\n        doc.restore();\r\n        docEndGroup(group);\r\n        docApplyMask(group, true);\r\n      };\r\n    };\r\n\r\n    var SvgElemTextContainer = function(obj, inherits) {\r\n      SvgElemStylable.call(this, obj, inherits);\r\n      this.allowedChildren = ['tspan', '#text', '#cdata-section', 'a'];\r\n      this.isText = true;\r\n      this.getBoundingShape = function() {\r\n        let shape = new SvgShape();\r\n        for (let i = 0; i < this._pos.length; i++) {\r\n          let pos = this._pos[i];\r\n          if (!pos.hidden) {\r\n            let dx0 = pos.ascent * Math.sin(pos.rotate), dy0 = -pos.ascent * Math.cos(pos.rotate),\r\n                dx1 = pos.descent * Math.sin(pos.rotate), dy1 = -pos.descent * Math.cos(pos.rotate),\r\n                dx2 = pos.width * Math.cos(pos.rotate), dy2 = pos.width * Math.sin(pos.rotate);\r\n            shape.M(pos.x + dx0, pos.y + dy0).L(pos.x + dx0 + dx2, pos.y + dy0 + dy2)\r\n                 .M(pos.x + dx1 + dx2, pos.y + dy1 + dy2).L(pos.x + dx1, pos.y + dy1);\r\n          }\r\n        }\r\n        return shape;\r\n      };\r\n      this.drawTextInDocument = function(isClip, isMask) {\r\n        if (this.link && !isClip && !isMask) {this.addLink();}\r\n        if (this.get('text-decoration') === 'underline') {\r\n          this.decorate(0.05 * this._font.size, -0.075 * this._font.size, isClip, isMask);\r\n        }\r\n        if (this.get('text-decoration') === 'overline') {\r\n          this.decorate(0.05 * this._font.size, getAscent(this._font.font, this._font.size) + 0.075 * this._font.size, isClip, isMask);\r\n        }\r\n        let fill = this.getFill(isClip, isMask),\r\n            stroke = this.getStroke(isClip, isMask),\r\n            strokeWidth = this.get('stroke-width');\r\n        if (this._font.fauxBold) {\r\n          if (!stroke) {\r\n            stroke = fill;\r\n            strokeWidth = this._font.size * 0.03;\r\n          } else {\r\n            strokeWidth += this._font.size * 0.03;\r\n          }\r\n        }\r\n        let children = this.getChildren();\r\n        for (let i = 0; i < children.length; i++) {\r\n          let childElem = children[i];\r\n          switch(childElem.name) {\r\n            case 'tspan': case 'textPath': case 'a':\r\n              if (childElem.get('display') !== 'none') {\r\n                childElem.drawTextInDocument(isClip, isMask);\r\n              }\r\n              break;\r\n            case '#text': case '#cdata-section':\r\n              if (this.get('visibility') === 'hidden') {continue;}\r\n              if (fill || stroke || isClip) {\r\n                if (fill) {\r\n                  docFillColor(fill);\r\n                }\r\n                if (stroke && strokeWidth) {\r\n                  docStrokeColor(stroke);\r\n                  doc.lineWidth(strokeWidth)\r\n                     .miterLimit(this.get('stroke-miterlimit'))\r\n                     .lineJoin(this.get('stroke-linejoin'))\r\n                     .lineCap(this.get('stroke-linecap'))\r\n                     .dash(this.get('stroke-dasharray'), {phase:this.get('stroke-dashoffset')});\r\n                }\r\n                docBeginText(this._font.font, this._font.size);\r\n                docSetTextMode(!!fill, !!stroke);\r\n                for (let j = 0, pos = childElem._pos; j < pos.length; j++) {\r\n                  if (!pos[j].hidden && isNotEqual(pos[j].width, 0)) {\r\n                    let cos = Math.cos(pos[j].rotate), sin = Math.sin(pos[j].rotate), skew = (this._font.fauxItalic ? -0.25 : 0);\r\n                    docSetTextMatrix(cos * pos[j].scale, sin * pos[j].scale, cos * skew - sin, sin * skew + cos, pos[j].x, pos[j].y);\r\n                    docWriteGlyph(pos[j].glyph);\r\n                  }\r\n                }\r\n                docEndText();\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        if (this.get('text-decoration') === 'line-through') {\r\n          this.decorate(0.05 * this._font.size, 0.5 * (getAscent(this._font.font, this._font.size) + getDescent(this._font.font, this._font.size)), isClip, isMask);\r\n        }\r\n      };\r\n      this.decorate = function(lineWidth, linePosition, isClip, isMask) {\r\n        let fill = this.getFill(isClip, isMask),\r\n            stroke = this.getStroke(isClip, isMask);\r\n        if (fill) {\r\n          docFillColor(fill);\r\n        }\r\n        if (stroke) {\r\n          docStrokeColor(stroke);\r\n          doc.lineWidth(this.get('stroke-width'))\r\n             .miterLimit(this.get('stroke-miterlimit'))\r\n             .lineJoin(this.get('stroke-linejoin'))\r\n             .lineCap(this.get('stroke-linecap'))\r\n             .dash(this.get('stroke-dasharray'), {phase:this.get('stroke-dashoffset')});\r\n        }\r\n        for (let j = 0, pos = this._pos; j < pos.length; j++) {\r\n          if (!pos[j].hidden && isNotEqual(pos[j].width, 0)) {\r\n            let dx0 = (linePosition + lineWidth / 2) * Math.sin(pos[j].rotate),\r\n                dy0 = -(linePosition + lineWidth / 2) * Math.cos(pos[j].rotate),\r\n                dx1 = (linePosition - lineWidth / 2) * Math.sin(pos[j].rotate),\r\n                dy1 = -(linePosition - lineWidth / 2) * Math.cos(pos[j].rotate),\r\n                dx2 = pos[j].width * Math.cos(pos[j].rotate),\r\n                dy2 = pos[j].width * Math.sin(pos[j].rotate);\r\n            new SvgShape().M(pos[j].x + dx0, pos[j].y + dy0)\r\n                          .L(pos[j].x + dx0 + dx2, pos[j].y + dy0 + dy2)\r\n                          .L(pos[j].x + dx1 + dx2, pos[j].y + dy1 + dy2)\r\n                          .L(pos[j].x + dx1, pos[j].y + dy1).Z()\r\n                          .insertInDocument();\r\n            if (fill && stroke) {\r\n              doc.fillAndStroke();\r\n            } else if (fill) {\r\n              doc.fill();\r\n            } else if (stroke) {\r\n              doc.stroke();\r\n            }\r\n          }\r\n        }\r\n      };\r\n    };\r\n\r\n    var SvgElemTextNode = function(obj, inherits) {\r\n      this.name = obj.nodeName;\r\n      this.textContent = obj.nodeValue;\r\n    };\r\n\r\n    var SvgElemTspan = function(obj, inherits) {\r\n      SvgElemTextContainer.call(this, obj, inherits);\r\n    };\r\n\r\n    var SvgElemTextPath = function(obj, inherits) {\r\n      SvgElemTextContainer.call(this, obj, inherits);\r\n      let pathObject, pathLength, temp;\r\n      if ((temp = this.attr('path')) && temp.trim() !== '') {\r\n        let pathLength = this.getLength('pathLength', this.getViewport());\r\n        this.pathObject = new SvgShape().path(temp);\r\n        this.pathLength = pathLength > 0 ? pathLength : this.pathObject.totalLength;\r\n        this.pathScale = this.pathObject.totalLength / this.pathLength;\r\n      } else if ((temp = this.getUrl('href') || this.getUrl('xlink:href')) && temp.nodeName === 'path') {\r\n        let pathElem = new SvgElemPath(temp, this);\r\n        this.pathObject = pathElem.shape.clone().transform(pathElem.get('transform'));\r\n        this.pathLength = this.chooseValue(pathElem.pathLength, this.pathObject.totalLength);\r\n        this.pathScale = this.pathObject.totalLength / this.pathLength;\r\n      }\r\n    };\r\n\r\n    var SvgElemText = function(obj, inherits) {\r\n      SvgElemTextContainer.call(this, obj, inherits);\r\n      this.allowedChildren = ['textPath', 'tspan', '#text', '#cdata-section', 'a'];\r\n      (function (textParentElem) {\r\n        let processedText = '', remainingText = obj.textContent, textPaths = [], currentChunk = [], currentAnchor, currentDirection, currentX = 0, currentY = 0;\r\n        function doAnchoring() {\r\n          if (currentChunk.length) {\r\n            let last = currentChunk[currentChunk.length - 1];\r\n            let first = currentChunk[0]\r\n            let width = last.x + last.width - first.x;\r\n            let anchordx = {'startltr': 0, 'middleltr': 0.5, 'endltr': 1, 'startrtl': 1, 'middlertl': 0.5, 'endrtl': 0}[currentAnchor + currentDirection] * width || 0;\r\n            for (let i = 0; i < currentChunk.length; i++) {\r\n              currentChunk[i].x -= anchordx;\r\n            }\r\n          }\r\n          currentChunk = [];\r\n        }\r\n        function adjustLength(pos, length, spacingAndGlyphs) {\r\n          let firstChar = pos[0], lastChar = pos[pos.length - 1],\r\n              startX = firstChar.x, endX = lastChar.x + lastChar.width;\r\n          if (spacingAndGlyphs) {\r\n            let textScale = length / (endX - startX);\r\n            if (textScale > 0 && textScale < Infinity) {\r\n              for (let j = 0; j < pos.length; j++) {\r\n                pos[j].x = startX + textScale * (pos[j].x - startX);\r\n                pos[j].scale *= textScale;\r\n                pos[j].width *= textScale;\r\n              }\r\n            }\r\n          } else {\r\n            if (pos.length >= 2) {\r\n              let spaceDiff = (length - (endX - startX)) / (pos.length - 1);\r\n              for (let j = 0; j < pos.length; j++) {\r\n                pos[j].x += j * spaceDiff;\r\n              }\r\n            }\r\n          }\r\n          currentX += length - (endX - startX);\r\n        }\r\n        function recursive(currentElem, parentElem) {\r\n          currentElem._x = combineArrays(currentElem.getLengthList('x', currentElem.getVWidth()), (parentElem ? parentElem._x.slice(parentElem._pos.length) : []));\r\n          currentElem._y = combineArrays(currentElem.getLengthList('y', currentElem.getVHeight()), (parentElem ? parentElem._y.slice(parentElem._pos.length) : []));\r\n          currentElem._dx = combineArrays(currentElem.getLengthList('dx', currentElem.getVWidth()), (parentElem ? parentElem._dx.slice(parentElem._pos.length) : []));\r\n          currentElem._dy = combineArrays(currentElem.getLengthList('dy', currentElem.getVHeight()), (parentElem ? parentElem._dy.slice(parentElem._pos.length) : []));\r\n          currentElem._rot = combineArrays(currentElem.getNumberList('rotate'), (parentElem ? parentElem._rot.slice(parentElem._pos.length) : []));\r\n          currentElem._defRot = currentElem.chooseValue(currentElem._rot[currentElem._rot.length - 1], parentElem && parentElem._defRot, 0);\r\n          if (currentElem.name === 'textPath') {currentElem._y = [];}\r\n          let fontOptions = {fauxItalic: false, fauxBold: false},\r\n              fontNameorLink = fontCallback(currentElem.get('font-family'), currentElem.get('font-weight') === 'bold', currentElem.get('font-style') === 'italic', fontOptions);\r\n          try {\r\n            doc.font(fontNameorLink);\r\n          } catch(e) {\r\n            warningCallback('SVGElemText: failed to open font \"' + fontNameorLink + '\" in PDFKit');\r\n          }\r\n          currentElem._pos = [];\r\n          currentElem._index = 0;\r\n          currentElem._font = {font: doc._font, size: currentElem.get('font-size'), fauxItalic: fontOptions.fauxItalic, fauxBold: fontOptions.fauxBold};\r\n          let textLength = currentElem.getLength('textLength', currentElem.getVWidth(), undefined),\r\n              spacingAndGlyphs = currentElem.attr('lengthAdjust') === 'spacingAndGlyphs',\r\n              wordSpacing = currentElem.get('word-spacing'),\r\n              letterSpacing = currentElem.get('letter-spacing'),\r\n              textAnchor = currentElem.get('text-anchor'),\r\n              textDirection = currentElem.get('direction'),\r\n              baseline = getBaseline(currentElem._font.font, currentElem._font.size, currentElem.get('alignment-baseline') || currentElem.get('dominant-baseline'), currentElem.get('baseline-shift'));\r\n          if (currentElem.name === 'textPath') {\r\n            doAnchoring();\r\n            currentX = currentY = 0;\r\n          }\r\n          let children = currentElem.getChildren();\r\n          for (let i = 0; i < children.length; i++) {\r\n            let childElem = children[i];\r\n            switch(childElem.name) {\r\n              case 'tspan': case 'textPath': case 'a':\r\n                recursive(childElem, currentElem);\r\n                break;\r\n              case '#text': case '#cdata-section':\r\n                let rawText = childElem.textContent, renderedText = rawText, words;\r\n                childElem._font = currentElem._font;\r\n                childElem._pos = [];\r\n                remainingText = remainingText.substring(rawText.length);\r\n                if (currentElem.get('xml:space') === 'preserve') {\r\n                  renderedText = renderedText.replace(/[\\s]/g, ' ');\r\n                } else {\r\n                  renderedText = renderedText.replace(/[\\s]+/g, ' ');\r\n                  if (processedText.match(/[\\s]$|^$/)) {renderedText = renderedText.replace(/^[\\s]/, '');}\r\n                  if (remainingText.match(/^[\\s]*$/)) {renderedText = renderedText.replace(/[\\s]$/, '');}\r\n                }\r\n                processedText += rawText;\r\n                if (wordSpacing === 0) {\r\n                  words = [renderedText];\r\n                } else {\r\n                  words = renderedText.split(/(\\s)/);\r\n                }\r\n                for (let w = 0; w < words.length; w++) {\r\n                  let pos = getTextPos(currentElem._font.font, currentElem._font.size, words[w]);\r\n                  for (let j = 0; j < pos.length; j++) {\r\n                    let index = currentElem._index,\r\n                        xAttr = currentElem._x[index],\r\n                        yAttr = currentElem._y[index],\r\n                        dxAttr = currentElem._dx[index],\r\n                        dyAttr = currentElem._dy[index],\r\n                        rotAttr = currentElem._rot[index],\r\n                        continuous = !(w === 0 && j === 0);\r\n                    if (xAttr !== undefined) {continuous = false; doAnchoring(); currentX = xAttr;}\r\n                    if (yAttr !== undefined) {continuous = false; doAnchoring(); currentY = yAttr;}\r\n                    if (dxAttr !== undefined) {continuous = false; currentX += dxAttr;}\r\n                    if (dyAttr !== undefined) {continuous = false; currentY += dyAttr;}\r\n                    if (rotAttr !== undefined || currentElem._defRot !== 0) {continuous = false;}\r\n                    let position = {\r\n                      glyph: pos[j].glyph,\r\n                      rotate: (Math.PI / 180) * currentElem.chooseValue(rotAttr, currentElem._defRot),\r\n                      x: currentX + pos[j].xOffset,\r\n                      y: currentY + baseline + pos[j].yOffset,\r\n                      width: pos[j].width,\r\n                      ascent: getAscent(currentElem._font.font, currentElem._font.size),\r\n                      descent: getDescent(currentElem._font.font, currentElem._font.size),\r\n                      scale: 1,\r\n                      hidden: false,\r\n                      continuous: continuous\r\n                    };\r\n                    currentChunk.push(position);\r\n                    childElem._pos.push(position);\r\n                    currentElem._pos.push(position);\r\n                    currentElem._index += pos[j].unicode.length;\r\n                    if (currentChunk.length === 1) {\r\n                      currentAnchor = textAnchor;\r\n                      currentDirection = textDirection;\r\n                    }\r\n                    currentX += pos[j].xAdvance + letterSpacing;\r\n                    currentY += pos[j].yAdvance;\r\n                  }\r\n                  if (words[w] === ' ') {\r\n                    currentX += wordSpacing;\r\n                  }\r\n                }\r\n                break;\r\n              default:\r\n                remainingText = remainingText.substring(childElem.textContent.length);\r\n            }\r\n          }\r\n          if (textLength && currentElem._pos.length) {\r\n            adjustLength(currentElem._pos, textLength, spacingAndGlyphs);\r\n          }\r\n          if (currentElem.name === 'textPath' || currentElem.name === 'text') {\r\n            doAnchoring();\r\n          }\r\n          if (currentElem.name === 'textPath') {\r\n            textPaths.push(currentElem);\r\n            let pathObject = currentElem.pathObject;\r\n            if (pathObject) {\r\n              currentX = pathObject.endPoint[0]; currentY = pathObject.endPoint[1];\r\n            }\r\n          }\r\n          if (parentElem) {\r\n            parentElem._pos = parentElem._pos.concat(currentElem._pos);\r\n            parentElem._index += currentElem._index;\r\n          }\r\n        }\r\n        function textOnPath(currentElem) {\r\n          let pathObject = currentElem.pathObject,\r\n              pathLength = currentElem.pathLength,\r\n              pathScale = currentElem.pathScale;\r\n          if (pathObject) {\r\n            let textOffset = currentElem.getLength('startOffset', pathLength, 0);\r\n            for (let j = 0; j < currentElem._pos.length; j++) {\r\n              let charMidX = textOffset + currentElem._pos[j].x + 0.5 * currentElem._pos[j].width;\r\n              if (charMidX > pathLength || charMidX < 0) {\r\n                currentElem._pos[j].hidden = true;\r\n              } else {\r\n                let pointOnPath = pathObject.getPointAtLength(charMidX * pathScale);\r\n                if (isNotEqual(pathScale, 1)) {\r\n                  currentElem._pos[j].scale *= pathScale;\r\n                  currentElem._pos[j].width *= pathScale;\r\n                }\r\n                currentElem._pos[j].x = pointOnPath[0] - 0.5 * currentElem._pos[j].width * Math.cos(pointOnPath[2]) - currentElem._pos[j].y * Math.sin(pointOnPath[2]);\r\n                currentElem._pos[j].y = pointOnPath[1] - 0.5 * currentElem._pos[j].width * Math.sin(pointOnPath[2]) + currentElem._pos[j].y * Math.cos(pointOnPath[2]);\r\n                currentElem._pos[j].rotate = pointOnPath[2] + currentElem._pos[j].rotate;\r\n                currentElem._pos[j].continuous = false;\r\n              }\r\n            }\r\n          } else {\r\n            for (let j = 0; j < currentElem._pos.length; j++) {\r\n              currentElem._pos[j].hidden = true;\r\n            }\r\n          }\r\n        }\r\n        recursive(textParentElem, null);\r\n        for (let i = 0; i < textPaths.length; i++) {\r\n          textOnPath(textPaths[i]);\r\n        }\r\n      })(this);\r\n      this.getTransformation = function() {\r\n        return this.get('transform');\r\n      };\r\n      this.drawInDocument = function(isClip, isMask) {\r\n        doc.save();\r\n        this.transform();\r\n        this.clip();\r\n        let masked = this.mask(), group;\r\n        if (masked) {\r\n          group = docBeginGroup(getPageBBox());\r\n        }\r\n        this.drawTextInDocument(isClip, isMask);\r\n        if (group) {\r\n          docEndGroup(group);\r\n          docInsertGroup(group);\r\n        }\r\n        doc.restore();\r\n      };\r\n    };\r\n\r\n    options = options || {};\r\n    var pxToPt = options.assumePt ? 1 : (72/96), // 1px = 72/96pt, but only if assumePt is false\r\n        viewportWidth = (options.width || doc.page.width) / pxToPt,\r\n        viewportHeight = (options.height || doc.page.height) / pxToPt,\r\n        preserveAspectRatio = options.preserveAspectRatio || null, // default to null so that the attr can override if not passed\r\n        useCSS = options.useCSS && typeof SVGElement !== 'undefined' && svg instanceof SVGElement && typeof getComputedStyle === 'function',\r\n        warningCallback = options.warningCallback,\r\n        fontCallback = options.fontCallback,\r\n        imageCallback = options.imageCallback,\r\n        colorCallback = options.colorCallback,\r\n        documentCallback = options.documentCallback,\r\n        precision = Math.ceil(Math.max(1, options.precision)) || 3,\r\n        groupStack = [],\r\n        documentCache = {},\r\n        links = [],\r\n        styleRules = [];\r\n\r\n    if (typeof warningCallback !== 'function') {\r\n      warningCallback = function(str) {\r\n        if (typeof console !== undefined && typeof console.warn === 'function') {console.warn(str);}\r\n      };\r\n    }\r\n    if (typeof fontCallback !== 'function') {\r\n      fontCallback = function(family, bold, italic, fontOptions) {\r\n        // Check if the font is already registered in the document\r\n        if (bold && italic) {\r\n          if (doc._registeredFonts.hasOwnProperty(family + '-BoldItalic')) {\r\n            return family + '-BoldItalic';\r\n          } else if (doc._registeredFonts.hasOwnProperty(family + '-Italic')) {\r\n            fontOptions.fauxBold = true;\r\n            return family + '-Italic';\r\n          } else if (doc._registeredFonts.hasOwnProperty(family + '-Bold')) {\r\n            fontOptions.fauxItalic = true;\r\n            return family + '-Bold';\r\n          } else if (doc._registeredFonts.hasOwnProperty(family)) {\r\n            fontOptions.fauxBold = true;\r\n            fontOptions.fauxItalic = true;\r\n            return family;\r\n          }\r\n        }\r\n        if (bold && !italic) {\r\n          if (doc._registeredFonts.hasOwnProperty(family + '-Bold')) {\r\n            return family + '-Bold';\r\n          } else if (doc._registeredFonts.hasOwnProperty(family)) {\r\n            fontOptions.fauxBold = true;\r\n            return family;\r\n          }\r\n        }\r\n        if (!bold && italic) {\r\n          if (doc._registeredFonts.hasOwnProperty(family + '-Italic')) {\r\n            return family + '-Italic';\r\n          } else if (doc._registeredFonts.hasOwnProperty(family)) {\r\n            fontOptions.fauxItalic = true;\r\n            return family;\r\n          }\r\n        }\r\n        if (!bold && !italic) {\r\n          if (doc._registeredFonts.hasOwnProperty(family)) {\r\n            return family;\r\n          }\r\n        }\r\n        // Use standard fonts as fallback\r\n        if (family.match(/(?:^|,)\\s*serif\\s*$/)) {\r\n          if (bold && italic) {return 'Times-BoldItalic';}\r\n          if (bold && !italic) {return 'Times-Bold';}\r\n          if (!bold && italic) {return 'Times-Italic';}\r\n          if (!bold && !italic) {return 'Times-Roman';}\r\n        } else if (family.match(/(?:^|,)\\s*monospace\\s*$/)) {\r\n          if (bold && italic) {return 'Courier-BoldOblique';}\r\n          if (bold && !italic) {return 'Courier-Bold';}\r\n          if (!bold && italic) {return 'Courier-Oblique';}\r\n          if (!bold && !italic) {return 'Courier';}\r\n        } else if (family.match(/(?:^|,)\\s*sans-serif\\s*$/) || true) {\r\n          if (bold && italic) {return 'Helvetica-BoldOblique';}\r\n          if (bold && !italic) {return 'Helvetica-Bold';}\r\n          if (!bold && italic) {return 'Helvetica-Oblique';}\r\n          if (!bold && !italic) {return 'Helvetica';}\r\n        }\r\n      };\r\n    }\r\n    if (typeof imageCallback !== 'function') {\r\n      imageCallback = function(link) {\r\n        return link.replace(/\\s+/g, '');\r\n      };\r\n    }\r\n    if (typeof colorCallback !== 'function') {\r\n      colorCallback = null;\r\n    } else {\r\n      for (let color in DefaultColors) {\r\n        let newColor = colorCallback(DefaultColors[color]);\r\n        DefaultColors[color][0] = newColor[0];\r\n        DefaultColors[color][1] = newColor[1];\r\n      }\r\n    }\r\n    if (typeof documentCallback !== 'function') {\r\n      documentCallback = null;\r\n    }\r\n\r\n    if (typeof svg === 'string') {svg = parseXml(svg);}\r\n    if (svg) {\r\n      let styles = svg.getElementsByTagName('style');\r\n      for (let i = 0; i < styles.length; i++) {\r\n        styleRules = styleRules.concat(parseStyleSheet(styles[i].textContent));\r\n      }\r\n      let elem = createSVGElement(svg, null);\r\n      if (typeof elem.drawInDocument === 'function') {\r\n        if (options.useCSS && !useCSS) {\r\n          warningCallback('SVGtoPDF: useCSS option can only be used for SVG *elements* in compatible browsers');\r\n        }\r\n        let savedFillColor = doc._fillColor;\r\n        doc.save().translate(x || 0, y || 0).scale(pxToPt);\r\n        elem.drawInDocument();\r\n        for (let i = 0; i < links.length; i++) {\r\n          doc.page.annotations.push(links[i]);\r\n        }\r\n        doc.restore();\r\n        doc._fillColor = savedFillColor;\r\n      } else {\r\n        warningCallback('SVGtoPDF: this element can\\'t be rendered directly: ' + svg.nodeName);\r\n      }\r\n    } else {\r\n      warningCallback('SVGtoPDF: the input does not look like a valid SVG');\r\n    }\r\n\r\n};\r\n\r\nif (typeof module !== 'undefined' && module && typeof module.exports !== 'undefined') {\r\n  module.exports = SVGtoPDF;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}