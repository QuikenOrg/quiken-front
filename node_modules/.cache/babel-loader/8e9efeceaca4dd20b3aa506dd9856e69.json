{"ast":null,"code":"var _jsxFileName = \"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { CategoryScale } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport styled from \"styled-components\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GuidesChart = _ref => {\n  _s();\n\n  let {\n    dashboardData\n  } = _ref;\n  const yearsShipments = Object.keys(dashboardData.shipments);\n  const yearsRecargas = Object.keys(dashboardData.refils);\n  const [data, setData] = useState([\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"]);\n  const [yearsToSelect, setYearsToSelect] = useState([]);\n  const yearsSelect = [\"2019\", \"2018\", \"2017\", \"2016\", \"2015\", \"2014\", \"2013\", \"2012\"];\n  Chart.register(CategoryScale);\n  const barChartData = {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Mar\", \"Abr\", \"May\", \"Jun\", \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"],\n    datasets: [{\n      data: data,\n      borderColor: \"#3333ff\",\n      backgroundColor: \"pink\",\n      fill: true\n    }]\n  };\n\n  const barChart = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(ChartWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SelectWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        children: yearsSelect.map(year => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          on: true,\n          children: \"Envios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Recargas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), barChart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GuidesChart, \"sMghNY3sqoNM6g2aYn7R7vcEf4s=\");\n\n_c = GuidesChart;\nconst Select = styled.select`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  align-self: flex-end;\n  margin-right: 30px\n`;\n_c2 = Select;\nconst SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: flex-end;\n  justify-content: flex-end;\n`;\n_c3 = SelectWrapper;\nconst ChartWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 50px;\n`;\n_c4 = ChartWrapper;\nexport default GuidesChart;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GuidesChart\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"SelectWrapper\");\n$RefreshReg$(_c4, \"ChartWrapper\");","map":{"version":3,"names":["React","Bar","CategoryScale","Chart","styled","GuidesChart","dashboardData","yearsShipments","Object","keys","shipments","yearsRecargas","refils","data","setData","useState","yearsToSelect","setYearsToSelect","yearsSelect","register","barChartData","labels","datasets","borderColor","backgroundColor","fill","barChart","map","year","Select","select","SelectWrapper","div","ChartWrapper"],"sources":["/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js"],"sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { CategoryScale } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport styled from \"styled-components\";\n\nconst GuidesChart = (\n  {\n    dashboardData\n  }\n) => {\n\n  const yearsShipments = Object.keys(dashboardData.shipments)\n  const yearsRecargas = Object.keys(dashboardData.refils)\n\n  const [data, setData] = useState([\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\", \"0\",\"0\",\"0\",\"0\",\"0\"]);\n  const [yearsToSelect, setYearsToSelect] = useState([]);\n\n\n  const yearsSelect = [\n    \"2019\", \"2018\", \"2017\", \"2016\", \"2015\", \"2014\", \"2013\", \"2012\",\n  ]\n\n  Chart.register(CategoryScale);\n  const barChartData = {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Mar\",\"Abr\",\"May\",\"Jun\",\"Jul\",\n    \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"\n  ],\n    datasets: [\n      {\n        data: data,\n        borderColor: \"#3333ff\",\n        backgroundColor: \"pink\",\n        fill: true\n      },\n    ]\n  };\n\n  const barChart = (\n    <></>\n    \n  );\n\n  return (\n  <ChartWrapper>\n    <SelectWrapper>\n      <Select>\n          { yearsSelect.map((year) => {\n            return <option>{year}</option>\n          })}\n      </Select>\n      <Select>\n                    <option on>\n                      Envios\n                    </option>\n                    <option>\n                      Recargas\n                    </option>\n      </Select>\n    </SelectWrapper>\n    {barChart}\n  </ChartWrapper>\n  );\n};\n\nconst Select = styled.select`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  align-self: flex-end;\n  margin-right: 30px\n`\n\nconst SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: flex-end;\n  justify-content: flex-end;\n`\n\nconst ChartWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 50px;\n`\n\n\nexport default GuidesChart;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAEA,MAAMC,WAAW,GAAG,QAIf;EAAA;;EAAA,IAHH;IACEC;EADF,CAGG;EAEH,MAAMC,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYH,aAAa,CAACI,SAA1B,CAAvB;EACA,MAAMC,aAAa,GAAGH,MAAM,CAACC,IAAP,CAAYH,aAAa,CAACM,MAA1B,CAAtB;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,GAA1C,EAA8C,GAA9C,CAAD,CAAhC;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCF,QAAQ,CAAC,EAAD,CAAlD;EAGA,MAAMG,WAAW,GAAG,CAClB,MADkB,EACV,MADU,EACF,MADE,EACM,MADN,EACc,MADd,EACsB,MADtB,EAC8B,MAD9B,EACsC,MADtC,CAApB;EAIAf,KAAK,CAACgB,QAAN,CAAejB,aAAf;EACA,MAAMkB,YAAY,GAAG;IACnBC,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA4B,KAA5B,EAAkC,KAAlC,EAAwC,KAAxC,EAA8C,KAA9C,EACR,KADQ,EACD,KADC,EACM,KADN,EACa,KADb,EACoB,KADpB,CADW;IAInBC,QAAQ,EAAE,CACR;MACET,IAAI,EAAEA,IADR;MAEEU,WAAW,EAAE,SAFf;MAGEC,eAAe,EAAE,MAHnB;MAIEC,IAAI,EAAE;IAJR,CADQ;EAJS,CAArB;;EAcA,MAAMC,QAAQ,gBACZ,qCADF;;EAKA,oBACA,QAAC,YAAD;IAAA,wBACE,QAAC,aAAD;MAAA,wBACE,QAAC,MAAD;QAAA,UACMR,WAAW,CAACS,GAAZ,CAAiBC,IAAD,IAAU;UAC1B,oBAAO;YAAA,UAASA;UAAT;YAAA;YAAA;YAAA;UAAA,QAAP;QACD,CAFC;MADN;QAAA;QAAA;QAAA;MAAA,QADF,eAME,QAAC,MAAD;QAAA,wBACc;UAAQ,EAAE,MAAV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADd,eAIc;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJd;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAgBGF,QAhBH;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAoBD,CAzDD;;GAAMrB,W;;KAAAA,W;AA2DN,MAAMwB,MAAM,GAAGzB,MAAM,CAAC0B,MAAO;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,M;AAON,MAAME,aAAa,GAAG3B,MAAM,CAAC4B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,a;AAQN,MAAME,YAAY,GAAG7B,MAAM,CAAC4B,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMC,Y;AASN,eAAe5B,WAAf"},"metadata":{},"sourceType":"module"}