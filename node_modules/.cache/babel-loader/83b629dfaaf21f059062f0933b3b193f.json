{"ast":null,"code":"var _jsxFileName = \"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { CategoryScale } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GuidesChart = _ref => {\n  _s();\n\n  let {\n    dashboardData\n  } = _ref;\n  const yearsShipments = Object.keys(dashboardData.shipments);\n  const yearsRecargas = Object.keys(dashboardData.refils);\n  console.log(yearsRecargas);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([\"0\", \"0\", \"0\", \"300\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"]);\n  const [yearsToSelect, setYearsToSelect] = useState(yearsShipments);\n  Chart.register(CategoryScale);\n  const barChartData = {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Mar\", \"Abr\", \"May\", \"Jun\", \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"],\n    datasets: [{\n      data: data,\n      borderColor: \"#3333ff\",\n      backgroundColor: \"pink\",\n      fill: true\n    }]\n  };\n\n  const barChart = /*#__PURE__*/_jsxDEV(Bar, {\n    type: \"bar\",\n    width: 70,\n    height: 20,\n    options: {\n      title: {\n        display: false,\n        text: \"COVID-19 Cases of Last 3 Months\",\n        fontSize: 15\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    },\n    data: barChartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  function updateChart(e, action) {\n    if (action.type === \"year\") {\n      console.log(\"YEAR: \", e.target.value);\n      setLoading(true);\n      return;\n    }\n\n    if (action.type === \"graph\") {\n      console.log(\"GRAPH: \", e.target.value);\n      setYearsToSelect(yearsShipments);\n      setLoading(true);\n      return;\n    }\n  }\n\n  useEffect(() => {\n    setLoading(false);\n    console.log(\"runnig this\");\n  }, [loading]);\n  console.log(yearsToSelect);\n  return /*#__PURE__*/_jsxDEV(ChartWrapper, {\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SelectWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          onChange: e => updateChart(e, {\n            type: \"year\"\n          }),\n          children: yearsToSelect.map(year => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: e => updateChart(e, {\n            type: \"graph\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Envios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Recargas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), barChart]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GuidesChart, \"0KWMZlVaKUo+32CJsq+h+bnYzVc=\");\n\n_c = GuidesChart;\nconst Select = styled.select`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  align-self: flex-end;\n  margin-right: 30px\n`;\n_c2 = Select;\nconst SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: flex-end;\n  justify-content: flex-end;\n`;\n_c3 = SelectWrapper;\nconst ChartWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 50px;\n`;\n_c4 = ChartWrapper;\nexport default GuidesChart;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GuidesChart\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"SelectWrapper\");\n$RefreshReg$(_c4, \"ChartWrapper\");","map":{"version":3,"names":["React","useState","useEffect","Bar","CategoryScale","Chart","styled","GuidesChart","dashboardData","yearsShipments","Object","keys","shipments","yearsRecargas","refils","console","log","loading","setLoading","data","setData","yearsToSelect","setYearsToSelect","register","barChartData","labels","datasets","borderColor","backgroundColor","fill","barChart","title","display","text","fontSize","plugins","legend","updateChart","e","action","type","target","value","map","year","Select","select","SelectWrapper","div","ChartWrapper"],"sources":["/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { CategoryScale } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport styled from \"styled-components\";\n\nconst GuidesChart = (\n  {\n    dashboardData\n  }\n) => {\n\n  const yearsShipments = Object.keys(dashboardData.shipments)\n  const yearsRecargas = Object.keys(dashboardData.refils)\n\n\n  console.log(yearsRecargas)\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([\"0\",\"0\",\"0\",\"300\",\"0\",\"0\",\"0\", \"0\",\"0\",\"0\",\"0\",\"0\"]);\n  const [yearsToSelect, setYearsToSelect] = useState(yearsShipments);\n  \n  \n  Chart.register(CategoryScale);\n  const barChartData = {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Mar\",\"Abr\",\"May\",\"Jun\",\"Jul\",\n    \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"\n  ],\n    datasets: [\n      {\n        data: data,\n        borderColor: \"#3333ff\",\n        backgroundColor: \"pink\",\n        fill: true\n      },\n    ]\n  };\n\n  const barChart = (\n    <Bar\n      type=\"bar\"\n      width={70}\n      height={20}\n      options={{\n        title: {\n          display: false,\n          text: \"COVID-19 Cases of Last 3 Months\",\n          fontSize: 15\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n        \n      }}\n      data={barChartData}\n    />\n  );\n\n  function updateChart(e, action) {\n    if (action.type === \"year\") {\n      console.log(\"YEAR: \", e.target.value)\n      setLoading(true)\n      return\n    }\n    if (action.type === \"graph\") {\n      console.log(\"GRAPH: \", e.target.value)\n      setYearsToSelect(yearsShipments)\n      setLoading(true)\n      return\n    }\n  }\n\n  useEffect(() => {\n    setLoading(false)\n    console.log(\"runnig this\")\n  }, [loading]);\n\n  console.log(yearsToSelect)\n\n  return (\n  <ChartWrapper>\n    {\n        loading ? <></> :\n        <>\n        <SelectWrapper>\n          <Select onChange={(e) => updateChart(e, {type: \"year\"})}>\n              { yearsToSelect.map((year) => {\n                return <option >{year}</option>\n              })}\n          </Select>\n          <Select onChange={(e) => updateChart(e, { type: \"graph\"})}>\n                        <option>\n                          Envios\n                        </option>\n                        <option>\n                          Recargas\n                        </option>\n          </Select>\n        </SelectWrapper>\n        {barChart}\n        </>\n    }\n    \n  </ChartWrapper>\n  );\n};\n\nconst Select = styled.select`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  align-self: flex-end;\n  margin-right: 30px\n`\n\nconst SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: flex-end;\n  justify-content: flex-end;\n`\n\nconst ChartWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 50px;\n`\n\n\nexport default GuidesChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}