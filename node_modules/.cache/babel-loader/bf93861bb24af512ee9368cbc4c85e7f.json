{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/proyecto_sapo/client/src/Pages/ResetPasswordPagina.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ResetPasswordPagina.scss\";\nimport Navbar from '../components/Navbar/Navbar';\nimport Footer from '../components/Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordPagina = props => {\n  _s();\n\n  const match = useParams();\n  console.log(match.resetToken);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.put(`/api/auth/resetpassword/${match.resetToken}`, {\n        password\n      }, config);\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetpassword-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper-div\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"forgot-password-form\",\n        onSubmit: resetPasswordHandler,\n        className: \"resetpassword-screen__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"resetpassword-screen__title\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: [error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"success-message\",\n          children: [success, \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signin\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"password\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true,\n            id: \"password\",\n            placeholder: \"Enter new password\",\n            autoComplete: \"true\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"confirmpassword\",\n            children: \"Confirm New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"password\",\n            required: true,\n            id: \"confirmpassword\",\n            placeholder: \"Confirm new password\",\n            autoComplete: \"true\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-contact-form\",\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordPagina, \"3IbBghIvjM7oaNw2dr5eYKSW3f0=\", false, function () {\n  return [useParams];\n});\n\n_c = ResetPasswordPagina;\nexport default ResetPasswordPagina;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordPagina\");","map":{"version":3,"sources":["/home/julianallende/Desktop/proyecto_sapo/client/src/Pages/ResetPasswordPagina.js"],"names":["useState","Link","useHistory","useParams","axios","Navbar","Footer","ResetPasswordPagina","props","match","console","log","resetToken","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","config","header","data","put","target","value"],"mappings":"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","sourcesContent":["import { useState} from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ResetPasswordPagina.scss\";\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\n\nconst ResetPasswordPagina = (props) => {\n\n  const match = useParams()\n  console.log(match.resetToken)\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.put(\n        `/api/auth/resetpassword/${match.resetToken}`,\n        {\n          password,\n        },\n        config\n      );\n\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.data);\n    }\n  };\n\n  return (\n    <div className=\"resetpassword-screen\">\n      <Navbar/>\n      <div className=\"form-wrapper-div\">\n        <form className=\"forgot-password-form\"\n        onSubmit={resetPasswordHandler}\n        className=\"resetpassword-screen__form\"\n      >\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\n        {error && <span className=\"error-message\">{error} </span>}\n        {success && (\n          <span className=\"success-message\">\n            {success} <Link to=\"/signin\">Login</Link>\n          </span>\n        )}\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"password\">New Password:</label>\n          <input\n            type=\"password\"\n            required\n            id=\"password\"\n            placeholder=\"Enter new password\"\n            autoComplete=\"true\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"confirmpassword\">Confirm New Password:</label>\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            required\n            id=\"confirmpassword\"\n            placeholder=\"Confirm new password\"\n            autoComplete=\"true\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </div>\n        <button className=\"btn-contact-form\" type=\"submit\" className=\"btn btn-primary\">\n          Reset Password\n        </button>\n      </form>\n      </div>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default ResetPasswordPagina;"]},"metadata":{},"sourceType":"module"}