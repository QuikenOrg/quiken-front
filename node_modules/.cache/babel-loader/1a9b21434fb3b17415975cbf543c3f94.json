{"ast":null,"code":"var _jsxFileName = \"/home/julianallende/Desktop/proyecto_sapo/client/src/Pages/ResetPasswordPagina.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ResetPasswordPagina.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordPagina = ({\n  match\n}) => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.put(`/api/auth/passwordreset/${match.params.resetToken}`, {\n        password\n      }, config);\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetpassword-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPasswordHandler,\n      className: \"resetpassword-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"resetpassword-screen__title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: [success, \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          placeholder: \"Enter new password\",\n          autoComplete: \"true\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"confirmpassword\",\n          placeholder: \"Confirm new password\",\n          autoComplete: \"true\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordPagina, \"imNu7i+cu64rhW3fm3LuJad5BNU=\");\n\n_c = ResetPasswordPagina;\nexport default ResetPasswordPagina;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordPagina\");","map":{"version":3,"sources":["/home/julianallende/Desktop/proyecto_sapo/client/src/Pages/ResetPasswordPagina.js"],"names":["useState","Link","useHistory","axios","ResetPasswordPagina","match","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","config","header","data","put","params","resetToken","console","log","response","target","value"],"mappings":"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","sourcesContent":["import { useState} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./ResetPasswordPagina.css\";\n\nconst ResetPasswordPagina = ({ match }) => {\n  \n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.put(\n        `/api/auth/passwordreset/${match.params.resetToken}`,\n        {\n          password,\n        },\n        config\n      );\n\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n    }\n  };\n\n  return (\n    <div className=\"resetpassword-screen\">\n      <form\n        onSubmit={resetPasswordHandler}\n        className=\"resetpassword-screen__form\"\n      >\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\n        {error && <span className=\"error-message\">{error} </span>}\n        {success && (\n          <span className=\"success-message\">\n            {success} <Link to=\"/login\">Login</Link>\n          </span>\n        )}\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">New Password:</label>\n          <input\n            type=\"password\"\n            required\n            id=\"password\"\n            placeholder=\"Enter new password\"\n            autoComplete=\"true\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\n          <input\n            type=\"password\"\n            required\n            id=\"confirmpassword\"\n            placeholder=\"Confirm new password\"\n            autoComplete=\"true\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Reset Password\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPasswordPagina;"]},"metadata":{},"sourceType":"module"}