{"ast":null,"code":"(function () {\n  var sax;\n\n  if (typeof module !== 'undefined' && module.exports && !global.xmldocAssumeBrowser) {\n    // We're being used in a Node-like environment\n    sax = require('sax');\n  } else {\n    // assume it's attached to the Window object in a browser\n    sax = this.sax;\n    if (!sax) // no sax for you!\n      throw new Error(\"Expected sax to be defined. Make sure you're including sax.js before this file.\");\n  }\n  /*\n  XmlElement is our basic building block. Everything is an XmlElement; even XmlDocument\n  behaves like an XmlElement by inheriting its attributes and functions.\n  */\n\n\n  function XmlElement(tag) {\n    // Capture the parser object off of the XmlDocument delegate\n    var parser = delegates[delegates.length - 1].parser;\n    this.name = tag.name;\n    this.attr = tag.attributes;\n    this.val = \"\";\n    this.children = [];\n    this.firstChild = null;\n    this.lastChild = null; // Assign parse information\n\n    this.line = parser.line;\n    this.column = parser.column;\n    this.position = parser.position;\n    this.startTagPosition = parser.startTagPosition;\n  } // Private methods\n\n\n  XmlElement.prototype._addChild = function (child) {\n    // add to our children array\n    this.children.push(child); // update first/last pointers\n\n    if (!this.firstChild) this.firstChild = child;\n    this.lastChild = child;\n  }; // SaxParser handlers\n\n\n  XmlElement.prototype._opentag = function (tag) {\n    var child = new XmlElement(tag);\n\n    this._addChild(child);\n\n    delegates.unshift(child);\n  };\n\n  XmlElement.prototype._closetag = function () {\n    delegates.shift();\n  };\n\n  XmlElement.prototype._text = function (text) {\n    if (typeof this.children === 'undefined') return;\n    this.val += text;\n\n    this._addChild(new XmlTextNode(text));\n  };\n\n  XmlElement.prototype._cdata = function (cdata) {\n    this.val += cdata;\n\n    this._addChild(new XmlCDataNode(cdata));\n  };\n\n  XmlElement.prototype._comment = function (comment) {\n    if (typeof this.children === 'undefined') return;\n\n    this._addChild(new XmlCommentNode(comment));\n  };\n\n  XmlElement.prototype._error = function (err) {\n    throw err;\n  }; // Useful functions\n\n\n  XmlElement.prototype.eachChild = function (iterator, context) {\n    for (var i = 0, l = this.children.length; i < l; i++) if (this.children[i].type === \"element\") if (iterator.call(context, this.children[i], i, this.children) === false) return;\n  };\n\n  XmlElement.prototype.childNamed = function (name) {\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      if (child.name === name) return child;\n    }\n\n    return undefined;\n  };\n\n  XmlElement.prototype.childrenNamed = function (name) {\n    var matches = [];\n\n    for (var i = 0, l = this.children.length; i < l; i++) if (this.children[i].name === name) matches.push(this.children[i]);\n\n    return matches;\n  };\n\n  XmlElement.prototype.childWithAttribute = function (name, value) {\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      if (child.type === \"element\" && (value && child.attr[name] === value || !value && child.attr[name])) return child;\n    }\n\n    return undefined;\n  };\n\n  XmlElement.prototype.descendantWithPath = function (path) {\n    var descendant = this;\n    var components = path.split('.');\n\n    for (var i = 0, l = components.length; i < l; i++) if (descendant && descendant.type === \"element\") descendant = descendant.childNamed(components[i]);else return undefined;\n\n    return descendant;\n  };\n\n  XmlElement.prototype.valueWithPath = function (path) {\n    var components = path.split('@');\n    var descendant = this.descendantWithPath(components[0]);\n    if (descendant) return components.length > 1 ? descendant.attr[components[1]] : descendant.val;else return undefined;\n  }; // String formatting (for debugging)\n\n\n  XmlElement.prototype.toString = function (options) {\n    return this.toStringWithIndent(\"\", options);\n  };\n\n  XmlElement.prototype.toStringWithIndent = function (indent, options) {\n    var s = indent + \"<\" + this.name;\n    var linebreak = options && options.compressed ? \"\" : \"\\n\";\n    var preserveWhitespace = options && options.preserveWhitespace;\n\n    for (var name in this.attr) if (Object.prototype.hasOwnProperty.call(this.attr, name)) s += \" \" + name + '=\"' + escapeXML(this.attr[name]) + '\"';\n\n    if (this.children.length === 1 && this.children[0].type !== \"element\") {\n      s += \">\" + this.children[0].toString(options) + \"</\" + this.name + \">\";\n    } else if (this.children.length) {\n      s += \">\" + linebreak;\n      var childIndent = indent + (options && options.compressed ? \"\" : \"  \");\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        s += this.children[i].toStringWithIndent(childIndent, options) + linebreak;\n      }\n\n      s += indent + \"</\" + this.name + \">\";\n    } else if (options && options.html) {\n      var whiteList = [\"area\", \"base\", \"br\", \"col\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"menuitem\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"];\n      if (whiteList.indexOf(this.name) !== -1) s += \"/>\";else s += \"></\" + this.name + \">\";\n    } else {\n      s += \"/>\";\n    }\n\n    return s;\n  }; // Alternative XML nodes\n\n\n  function XmlTextNode(text) {\n    this.text = text;\n  }\n\n  XmlTextNode.prototype.toString = function (options) {\n    return formatText(escapeXML(this.text), options);\n  };\n\n  XmlTextNode.prototype.toStringWithIndent = function (indent, options) {\n    return indent + this.toString(options);\n  };\n\n  function XmlCDataNode(cdata) {\n    this.cdata = cdata;\n  }\n\n  XmlCDataNode.prototype.toString = function (options) {\n    return \"<![CDATA[\" + formatText(this.cdata, options) + \"]]>\";\n  };\n\n  XmlCDataNode.prototype.toStringWithIndent = function (indent, options) {\n    return indent + this.toString(options);\n  };\n\n  function XmlCommentNode(comment) {\n    this.comment = comment;\n  }\n\n  XmlCommentNode.prototype.toString = function (options) {\n    return \"<!--\" + formatText(escapeXML(this.comment), options) + \"-->\";\n  };\n\n  XmlCommentNode.prototype.toStringWithIndent = function (indent, options) {\n    return indent + this.toString(options);\n  }; // Node type tag\n\n\n  XmlElement.prototype.type = \"element\";\n  XmlTextNode.prototype.type = \"text\";\n  XmlCDataNode.prototype.type = \"cdata\";\n  XmlCommentNode.prototype.type = \"comment\";\n  /*\n  XmlDocument is the class we expose to the user; it uses the sax parser to create a hierarchy\n  of XmlElements.\n  */\n\n  function XmlDocument(xml) {\n    xml && (xml = xml.toString().trim());\n    if (!xml) throw new Error(\"No XML to parse!\"); // Stores doctype (if defined)\n\n    this.doctype = \"\"; // Expose the parser to the other delegates while the parser is running\n\n    this.parser = sax.parser(true); // strict\n\n    addParserEvents(this.parser); // We'll use the file-scoped \"delegates\" var to remember what elements we're currently\n    // parsing; they will push and pop off the stack as we get deeper into the XML hierarchy.\n    // It's safe to use a global because JS is single-threaded.\n\n    delegates = [this];\n    this.parser.write(xml); // Remove the parser as it is no longer needed and should not be exposed to clients\n\n    delete this.parser;\n  } // make XmlDocument inherit XmlElement's methods\n\n\n  extend(XmlDocument.prototype, XmlElement.prototype);\n\n  XmlDocument.prototype._opentag = function (tag) {\n    if (typeof this.children === 'undefined') // the first tag we encounter should be the root - we'll \"become\" the root XmlElement\n      XmlElement.call(this, tag);else // all other tags will be the root element's children\n      XmlElement.prototype._opentag.apply(this, arguments);\n  };\n\n  XmlDocument.prototype._doctype = function (doctype) {\n    this.doctype += doctype;\n  }; // file-scoped global stack of delegates\n\n\n  var delegates = null;\n  /*\n  Helper functions\n  */\n\n  function addParserEvents(parser) {\n    parser.onopentag = parser_opentag;\n    parser.onclosetag = parser_closetag;\n    parser.ontext = parser_text;\n    parser.oncdata = parser_cdata;\n    parser.oncomment = parser_comment;\n    parser.ondoctype = parser_doctype;\n    parser.onerror = parser_error;\n  } // create these closures and cache them by keeping them file-scoped\n\n\n  function parser_opentag() {\n    delegates[0] && delegates[0]._opentag.apply(delegates[0], arguments);\n  }\n\n  function parser_closetag() {\n    delegates[0] && delegates[0]._closetag.apply(delegates[0], arguments);\n  }\n\n  function parser_text() {\n    delegates[0] && delegates[0]._text.apply(delegates[0], arguments);\n  }\n\n  function parser_cdata() {\n    delegates[0] && delegates[0]._cdata.apply(delegates[0], arguments);\n  }\n\n  function parser_comment() {\n    delegates[0] && delegates[0]._comment.apply(delegates[0], arguments);\n  }\n\n  function parser_doctype() {\n    delegates[0] && delegates[0]._doctype.apply(delegates[0], arguments);\n  }\n\n  function parser_error() {\n    delegates[0] && delegates[0]._error.apply(delegates[0], arguments);\n  } // a relatively standard extend method\n\n\n  function extend(destination, source) {\n    for (var prop in source) if (source.hasOwnProperty(prop)) destination[prop] = source[prop];\n  } // escapes XML entities like \"<\", \"&\", etc.\n\n\n  function escapeXML(value) {\n    return value.toString().replace(/&/g, '&amp;').replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n  } // formats some text for debugging given a few options\n\n\n  function formatText(text, options) {\n    var finalText = text;\n    if (options && options.trimmed && text.length > 25) finalText = finalText.substring(0, 25).trim() + \"…\";\n    if (!(options && options.preserveWhitespace)) finalText = finalText.trim();\n    return finalText;\n  } // Are we being used in a Node-like environment?\n\n\n  if (typeof module !== 'undefined' && module.exports && !global.xmldocAssumeBrowser) module.exports.XmlDocument = XmlDocument;else this.XmlDocument = XmlDocument;\n})();","map":{"version":3,"sources":["/home/julianallende/Desktop/proyecto_sapo/client/node_modules/xmldoc/lib/xmldoc.js"],"names":["sax","module","exports","global","xmldocAssumeBrowser","require","Error","XmlElement","tag","parser","delegates","length","name","attr","attributes","val","children","firstChild","lastChild","line","column","position","startTagPosition","prototype","_addChild","child","push","_opentag","unshift","_closetag","shift","_text","text","XmlTextNode","_cdata","cdata","XmlCDataNode","_comment","comment","XmlCommentNode","_error","err","eachChild","iterator","context","i","l","type","call","childNamed","undefined","childrenNamed","matches","childWithAttribute","value","descendantWithPath","path","descendant","components","split","valueWithPath","toString","options","toStringWithIndent","indent","s","linebreak","compressed","preserveWhitespace","Object","hasOwnProperty","escapeXML","childIndent","html","whiteList","indexOf","formatText","XmlDocument","xml","trim","doctype","addParserEvents","write","extend","apply","arguments","_doctype","onopentag","parser_opentag","onclosetag","parser_closetag","ontext","parser_text","oncdata","parser_cdata","oncomment","parser_comment","ondoctype","parser_doctype","onerror","parser_error","destination","source","prop","replace","finalText","trimmed","substring"],"mappings":"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","sourcesContent":["(function () {\n\nvar sax;\n\nif (typeof module !== 'undefined' && module.exports && !global.xmldocAssumeBrowser) {\n  // We're being used in a Node-like environment\n  sax = require('sax');\n}\nelse {\n  // assume it's attached to the Window object in a browser\n  sax = this.sax;\n\n  if (!sax) // no sax for you!\n    throw new Error(\"Expected sax to be defined. Make sure you're including sax.js before this file.\");\n}\n\n/*\nXmlElement is our basic building block. Everything is an XmlElement; even XmlDocument\nbehaves like an XmlElement by inheriting its attributes and functions.\n*/\n\nfunction XmlElement(tag) {\n  // Capture the parser object off of the XmlDocument delegate\n  var parser = delegates[delegates.length - 1].parser;\n\n  this.name = tag.name;\n  this.attr = tag.attributes;\n  this.val = \"\";\n  this.children = [];\n  this.firstChild = null;\n  this.lastChild = null;\n\n  // Assign parse information\n  this.line = parser.line;\n  this.column = parser.column;\n  this.position = parser.position;\n  this.startTagPosition = parser.startTagPosition;\n}\n\n// Private methods\n\nXmlElement.prototype._addChild = function(child) {\n  // add to our children array\n  this.children.push(child);\n\n  // update first/last pointers\n  if (!this.firstChild) this.firstChild = child;\n  this.lastChild = child;\n};\n\n// SaxParser handlers\n\nXmlElement.prototype._opentag = function(tag) {\n\n  var child = new XmlElement(tag);\n\n  this._addChild(child);\n\n  delegates.unshift(child);\n};\n\nXmlElement.prototype._closetag = function() {\n  delegates.shift();\n};\n\nXmlElement.prototype._text = function(text) {\n  if (typeof this.children === 'undefined')\n    return\n\n  this.val += text;\n\n  this._addChild(new XmlTextNode(text));\n};\n\nXmlElement.prototype._cdata = function(cdata) {\n  this.val += cdata;\n\n  this._addChild(new XmlCDataNode(cdata));\n};\n\nXmlElement.prototype._comment = function(comment) {\n  if (typeof this.children === 'undefined')\n    return\n\n  this._addChild(new XmlCommentNode(comment));\n};\n\nXmlElement.prototype._error = function(err) {\n  throw err;\n};\n\n// Useful functions\n\nXmlElement.prototype.eachChild = function(iterator, context) {\n  for (var i=0, l=this.children.length; i<l; i++)\n    if (this.children[i].type === \"element\")\n      if (iterator.call(context, this.children[i], i, this.children) === false) return;\n};\n\nXmlElement.prototype.childNamed = function(name) {\n  for (var i=0, l=this.children.length; i<l; i++) {\n    var child = this.children[i];\n    if (child.name === name) return child;\n  }\n  return undefined;\n};\n\nXmlElement.prototype.childrenNamed = function(name) {\n  var matches = [];\n\n  for (var i=0, l=this.children.length; i<l; i++)\n    if (this.children[i].name === name)\n      matches.push(this.children[i]);\n\n  return matches;\n};\n\nXmlElement.prototype.childWithAttribute = function(name,value) {\n  for (var i=0, l=this.children.length; i<l; i++) {\n    var child = this.children[i];\n    if (child.type === \"element\" && ((value && child.attr[name] === value) || (!value && child.attr[name])))\n      return child;\n  }\n  return undefined;\n};\n\nXmlElement.prototype.descendantWithPath = function(path) {\n  var descendant = this;\n  var components = path.split('.');\n\n  for (var i=0, l=components.length; i<l; i++)\n    if (descendant && descendant.type === \"element\")\n      descendant = descendant.childNamed(components[i]);\n    else\n      return undefined;\n\n  return descendant;\n};\n\nXmlElement.prototype.valueWithPath = function(path) {\n  var components = path.split('@');\n  var descendant = this.descendantWithPath(components[0]);\n  if (descendant)\n    return components.length > 1 ? descendant.attr[components[1]] : descendant.val;\n  else\n    return undefined;\n};\n\n// String formatting (for debugging)\n\nXmlElement.prototype.toString = function(options) {\n  return this.toStringWithIndent(\"\", options);\n};\n\nXmlElement.prototype.toStringWithIndent = function(indent, options) {\n  var s = indent + \"<\" + this.name;\n  var linebreak = options && options.compressed ? \"\" : \"\\n\";\n  var preserveWhitespace = options && options.preserveWhitespace;\n\n  for (var name in this.attr)\n    if (Object.prototype.hasOwnProperty.call(this.attr, name))\n        s += \" \" + name + '=\"' + escapeXML(this.attr[name]) + '\"';\n\n  if (this.children.length === 1 && this.children[0].type !== \"element\") {\n    s += \">\" + this.children[0].toString(options) + \"</\" + this.name + \">\";\n  }\n  else if (this.children.length) {\n    s += \">\" + linebreak;\n\n    var childIndent = indent + (options && options.compressed ? \"\" : \"  \");\n\n    for (var i=0, l=this.children.length; i<l; i++) {\n      s += this.children[i].toStringWithIndent(childIndent, options) + linebreak;\n    }\n\n    s += indent + \"</\" + this.name + \">\";\n  }\n  else if (options && options.html) {\n    var whiteList = [\n      \"area\", \"base\", \"br\", \"col\", \"embed\", \"frame\", \"hr\", \"img\", \"input\",\n      \"keygen\", \"link\", \"menuitem\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"\n    ];\n    if (whiteList.indexOf(this.name) !== -1) s += \"/>\";\n    else s += \"></\" + this.name + \">\";\n  }\n  else {\n    s += \"/>\";\n  }\n\n  return s;\n};\n\n// Alternative XML nodes\n\nfunction XmlTextNode (text) {\n  this.text = text;\n}\n\nXmlTextNode.prototype.toString = function(options) {\n  return formatText(escapeXML(this.text), options);\n};\n\nXmlTextNode.prototype.toStringWithIndent = function(indent, options) {\n  return indent+this.toString(options);\n};\n\nfunction XmlCDataNode (cdata) {\n  this.cdata = cdata;\n}\n\nXmlCDataNode.prototype.toString = function(options) {\n  return \"<![CDATA[\"+formatText(this.cdata, options)+\"]]>\";\n};\n\nXmlCDataNode.prototype.toStringWithIndent = function(indent, options) {\n  return indent+this.toString(options);\n};\n\nfunction XmlCommentNode (comment) {\n  this.comment = comment;\n}\n\nXmlCommentNode.prototype.toString = function(options) {\n  return \"<!--\"+formatText(escapeXML(this.comment), options)+\"-->\";\n};\n\nXmlCommentNode.prototype.toStringWithIndent = function(indent, options) {\n  return indent+this.toString(options);\n};\n\n// Node type tag\n\nXmlElement.prototype.type = \"element\";\nXmlTextNode.prototype.type = \"text\";\nXmlCDataNode.prototype.type = \"cdata\";\nXmlCommentNode.prototype.type = \"comment\";\n\n/*\nXmlDocument is the class we expose to the user; it uses the sax parser to create a hierarchy\nof XmlElements.\n*/\n\nfunction XmlDocument(xml) {\n  xml && (xml = xml.toString().trim());\n\n  if (!xml)\n    throw new Error(\"No XML to parse!\");\n\n  // Stores doctype (if defined)\n  this.doctype = \"\";\n\n  // Expose the parser to the other delegates while the parser is running\n  this.parser = sax.parser(true); // strict\n  addParserEvents(this.parser);\n\n  // We'll use the file-scoped \"delegates\" var to remember what elements we're currently\n  // parsing; they will push and pop off the stack as we get deeper into the XML hierarchy.\n  // It's safe to use a global because JS is single-threaded.\n  delegates = [this];\n\n  this.parser.write(xml);\n\n  // Remove the parser as it is no longer needed and should not be exposed to clients\n  delete this.parser;\n}\n\n// make XmlDocument inherit XmlElement's methods\nextend(XmlDocument.prototype, XmlElement.prototype);\n\nXmlDocument.prototype._opentag = function(tag) {\n  if (typeof this.children === 'undefined')\n    // the first tag we encounter should be the root - we'll \"become\" the root XmlElement\n    XmlElement.call(this,tag);\n  else\n    // all other tags will be the root element's children\n    XmlElement.prototype._opentag.apply(this,arguments);\n};\n\nXmlDocument.prototype._doctype = function(doctype) {\n  this.doctype += doctype;\n}\n\n// file-scoped global stack of delegates\nvar delegates = null;\n\n/*\nHelper functions\n*/\n\nfunction addParserEvents(parser) {\n  parser.onopentag = parser_opentag;\n  parser.onclosetag = parser_closetag;\n  parser.ontext = parser_text;\n  parser.oncdata = parser_cdata;\n  parser.oncomment = parser_comment;\n  parser.ondoctype = parser_doctype;\n  parser.onerror = parser_error;\n}\n\n// create these closures and cache them by keeping them file-scoped\nfunction parser_opentag() { delegates[0] && delegates[0]._opentag.apply(delegates[0],arguments) }\nfunction parser_closetag() { delegates[0] && delegates[0]._closetag.apply(delegates[0],arguments) }\nfunction parser_text() { delegates[0] && delegates[0]._text.apply(delegates[0],arguments) }\nfunction parser_cdata() { delegates[0] && delegates[0]._cdata.apply(delegates[0],arguments) }\nfunction parser_comment() { delegates[0] && delegates[0]._comment.apply(delegates[0],arguments) }\nfunction parser_doctype() { delegates[0] && delegates[0]._doctype.apply(delegates[0],arguments) }\nfunction parser_error() { delegates[0] && delegates[0]._error.apply(delegates[0],arguments) }\n\n// a relatively standard extend method\nfunction extend(destination, source) {\n  for (var prop in source)\n    if (source.hasOwnProperty(prop))\n      destination[prop] = source[prop];\n}\n\n// escapes XML entities like \"<\", \"&\", etc.\nfunction escapeXML(value){\n  return value.toString().replace(/&/g, '&amp;').replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n}\n\n// formats some text for debugging given a few options\nfunction formatText(text, options) {\n  var finalText = text;\n\n  if (options && options.trimmed && text.length > 25)\n    finalText = finalText.substring(0,25).trim() + \"…\";\n  if (!(options && options.preserveWhitespace))\n    finalText = finalText.trim();\n\n  return finalText;\n}\n\n// Are we being used in a Node-like environment?\nif (typeof module !== 'undefined' && module.exports && !global.xmldocAssumeBrowser)\n    module.exports.XmlDocument = XmlDocument;\nelse\n    this.XmlDocument = XmlDocument;\n\n})();\n"]},"metadata":{},"sourceType":"script"}