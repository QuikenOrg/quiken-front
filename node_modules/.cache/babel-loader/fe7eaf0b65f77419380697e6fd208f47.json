{"ast":null,"code":"'use strict';\n\nvar Line = require('./line');\n\nvar isNumber = require('./helpers').isNumber;\n\nvar pack = require('./helpers').pack;\n\nvar offsetVector = require('./helpers').offsetVector;\n\nvar DocumentContext = require('./documentContext');\n/**\r\n * Creates an instance of ElementWriter - a line/vector writer, which adds\r\n * elements to current page and sets their positions based on the context\r\n */\n\n\nfunction ElementWriter(context, tracker) {\n  this.context = context;\n  this.contextStack = [];\n  this.tracker = tracker;\n}\n\nfunction addPageItem(page, item, index) {\n  if (index === null || index === undefined || index < 0 || index > page.items.length) {\n    page.items.push(item);\n  } else {\n    page.items.splice(index, 0, item);\n  }\n}\n\nElementWriter.prototype.addLine = function (line, dontUpdateContextPosition, index) {\n  var height = line.getHeight();\n  var context = this.context;\n  var page = context.getCurrentPage(),\n      position = this.getCurrentPositionOnPage();\n\n  if (context.availableHeight < height || !page) {\n    return false;\n  }\n\n  line.x = context.x + (line.x || 0);\n  line.y = context.y + (line.y || 0);\n  this.alignLine(line);\n  addPageItem(page, {\n    type: 'line',\n    item: line\n  }, index);\n  this.tracker.emit('lineAdded', line);\n\n  if (!dontUpdateContextPosition) {\n    context.moveDown(height);\n  }\n\n  return position;\n};\n\nElementWriter.prototype.alignLine = function (line) {\n  var width = this.context.availableWidth;\n  var lineWidth = line.getWidth();\n  var alignment = line.inlines && line.inlines.length > 0 && line.inlines[0].alignment;\n  var offset = 0;\n\n  switch (alignment) {\n    case 'right':\n      offset = width - lineWidth;\n      break;\n\n    case 'center':\n      offset = (width - lineWidth) / 2;\n      break;\n  }\n\n  if (offset) {\n    line.x = (line.x || 0) + offset;\n  }\n\n  if (alignment === 'justify' && !line.newLineForced && !line.lastLineInParagraph && line.inlines.length > 1) {\n    var additionalSpacing = (width - lineWidth) / (line.inlines.length - 1);\n\n    for (var i = 1, l = line.inlines.length; i < l; i++) {\n      offset = i * additionalSpacing;\n      line.inlines[i].x += offset;\n      line.inlines[i].justifyShift = additionalSpacing;\n    }\n  }\n};\n\nElementWriter.prototype.addImage = function (image, index, type) {\n  var context = this.context;\n  var page = context.getCurrentPage(),\n      position = this.getCurrentPositionOnPage();\n\n  if (!page || image.absolutePosition === undefined && context.availableHeight < image._height && page.items.length > 0) {\n    return false;\n  }\n\n  if (image._x === undefined) {\n    image._x = image.x || 0;\n  }\n\n  image.x = context.x + image._x;\n  image.y = context.y;\n  this.alignImage(image);\n  addPageItem(page, {\n    type: type || 'image',\n    item: image\n  }, index);\n  context.moveDown(image._height);\n  return position;\n};\n\nElementWriter.prototype.addSVG = function (image, index) {\n  return this.addImage(image, index, 'svg');\n};\n\nElementWriter.prototype.addQr = function (qr, index) {\n  var context = this.context;\n  var page = context.getCurrentPage(),\n      position = this.getCurrentPositionOnPage();\n\n  if (!page || qr.absolutePosition === undefined && context.availableHeight < qr._height) {\n    return false;\n  }\n\n  if (qr._x === undefined) {\n    qr._x = qr.x || 0;\n  }\n\n  qr.x = context.x + qr._x;\n  qr.y = context.y;\n  this.alignImage(qr);\n\n  for (var i = 0, l = qr._canvas.length; i < l; i++) {\n    var vector = qr._canvas[i];\n    vector.x += qr.x;\n    vector.y += qr.y;\n    this.addVector(vector, true, true, index);\n  }\n\n  context.moveDown(qr._height);\n  return position;\n};\n\nElementWriter.prototype.alignImage = function (image) {\n  var width = this.context.availableWidth;\n  var imageWidth = image._minWidth;\n  var offset = 0;\n\n  switch (image._alignment) {\n    case 'right':\n      offset = width - imageWidth;\n      break;\n\n    case 'center':\n      offset = (width - imageWidth) / 2;\n      break;\n  }\n\n  if (offset) {\n    image.x = (image.x || 0) + offset;\n  }\n};\n\nElementWriter.prototype.alignCanvas = function (node) {\n  var width = this.context.availableWidth;\n  var canvasWidth = node._minWidth;\n  var offset = 0;\n\n  switch (node._alignment) {\n    case 'right':\n      offset = width - canvasWidth;\n      break;\n\n    case 'center':\n      offset = (width - canvasWidth) / 2;\n      break;\n  }\n\n  if (offset) {\n    node.canvas.forEach(function (vector) {\n      offsetVector(vector, offset, 0);\n    });\n  }\n};\n\nElementWriter.prototype.addVector = function (vector, ignoreContextX, ignoreContextY, index) {\n  var context = this.context;\n  var page = context.getCurrentPage(),\n      position = this.getCurrentPositionOnPage();\n\n  if (page) {\n    offsetVector(vector, ignoreContextX ? 0 : context.x, ignoreContextY ? 0 : context.y);\n    addPageItem(page, {\n      type: 'vector',\n      item: vector\n    }, index);\n    return position;\n  }\n};\n\nElementWriter.prototype.beginClip = function (width, height) {\n  var ctx = this.context;\n  var page = ctx.getCurrentPage();\n  page.items.push({\n    type: 'beginClip',\n    item: {\n      x: ctx.x,\n      y: ctx.y,\n      width: width,\n      height: height\n    }\n  });\n  return true;\n};\n\nElementWriter.prototype.endClip = function () {\n  var ctx = this.context;\n  var page = ctx.getCurrentPage();\n  page.items.push({\n    type: 'endClip'\n  });\n  return true;\n};\n\nfunction cloneLine(line) {\n  var result = new Line(line.maxWidth);\n\n  for (var key in line) {\n    if (line.hasOwnProperty(key)) {\n      result[key] = line[key];\n    }\n  }\n\n  return result;\n}\n\nElementWriter.prototype.addFragment = function (block, useBlockXOffset, useBlockYOffset, dontUpdateContextPosition) {\n  var ctx = this.context;\n  var page = ctx.getCurrentPage();\n\n  if (!useBlockXOffset && block.height > ctx.availableHeight) {\n    return false;\n  }\n\n  block.items.forEach(function (item) {\n    switch (item.type) {\n      case 'line':\n        var l = cloneLine(item.item);\n\n        if (l._node) {\n          l._node.positions[0].pageNumber = ctx.page + 1;\n        }\n\n        l.x = (l.x || 0) + (useBlockXOffset ? block.xOffset || 0 : ctx.x);\n        l.y = (l.y || 0) + (useBlockYOffset ? block.yOffset || 0 : ctx.y);\n        page.items.push({\n          type: 'line',\n          item: l\n        });\n        break;\n\n      case 'vector':\n        var v = pack(item.item);\n        offsetVector(v, useBlockXOffset ? block.xOffset || 0 : ctx.x, useBlockYOffset ? block.yOffset || 0 : ctx.y);\n        page.items.push({\n          type: 'vector',\n          item: v\n        });\n        break;\n\n      case 'image':\n      case 'svg':\n        var img = pack(item.item);\n        img.x = (img.x || 0) + (useBlockXOffset ? block.xOffset || 0 : ctx.x);\n        img.y = (img.y || 0) + (useBlockYOffset ? block.yOffset || 0 : ctx.y);\n        page.items.push({\n          type: item.type,\n          item: img\n        });\n        break;\n    }\n  });\n\n  if (!dontUpdateContextPosition) {\n    ctx.moveDown(block.height);\n  }\n\n  return true;\n};\n/**\r\n * Pushes the provided context onto the stack or creates a new one\r\n *\r\n * pushContext(context) - pushes the provided context and makes it current\r\n * pushContext(width, height) - creates and pushes a new context with the specified width and height\r\n * pushContext() - creates a new context for unbreakable blocks (with current availableWidth and full-page-height)\r\n */\n\n\nElementWriter.prototype.pushContext = function (contextOrWidth, height) {\n  if (contextOrWidth === undefined) {\n    height = this.context.getCurrentPage().height - this.context.pageMargins.top - this.context.pageMargins.bottom;\n    contextOrWidth = this.context.availableWidth;\n  }\n\n  if (isNumber(contextOrWidth)) {\n    contextOrWidth = new DocumentContext({\n      width: contextOrWidth,\n      height: height\n    }, {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    });\n  }\n\n  this.contextStack.push(this.context);\n  this.context = contextOrWidth;\n};\n\nElementWriter.prototype.popContext = function () {\n  this.context = this.contextStack.pop();\n};\n\nElementWriter.prototype.getCurrentPositionOnPage = function () {\n  return (this.contextStack[0] || this.context).getCurrentPosition();\n};\n\nmodule.exports = ElementWriter;","map":{"version":3,"sources":["/home/julianallende/Desktop/proyecto_sapo/client/node_modules/pdfmake/src/elementWriter.js"],"names":["Line","require","isNumber","pack","offsetVector","DocumentContext","ElementWriter","context","tracker","contextStack","addPageItem","page","item","index","undefined","items","length","push","splice","prototype","addLine","line","dontUpdateContextPosition","height","getHeight","getCurrentPage","position","getCurrentPositionOnPage","availableHeight","x","y","alignLine","type","emit","moveDown","width","availableWidth","lineWidth","getWidth","alignment","inlines","offset","newLineForced","lastLineInParagraph","additionalSpacing","i","l","justifyShift","addImage","image","absolutePosition","_height","_x","alignImage","addSVG","addQr","qr","_canvas","vector","addVector","imageWidth","_minWidth","_alignment","alignCanvas","node","canvasWidth","canvas","forEach","ignoreContextX","ignoreContextY","beginClip","ctx","endClip","cloneLine","result","maxWidth","key","hasOwnProperty","addFragment","block","useBlockXOffset","useBlockYOffset","_node","positions","pageNumber","xOffset","yOffset","v","img","pushContext","contextOrWidth","pageMargins","top","bottom","left","right","popContext","pop","getCurrentPosition","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Line = require('./line');\r\nvar isNumber = require('./helpers').isNumber;\r\nvar pack = require('./helpers').pack;\r\nvar offsetVector = require('./helpers').offsetVector;\r\nvar DocumentContext = require('./documentContext');\r\n\r\n/**\r\n * Creates an instance of ElementWriter - a line/vector writer, which adds\r\n * elements to current page and sets their positions based on the context\r\n */\r\nfunction ElementWriter(context, tracker) {\r\n\tthis.context = context;\r\n\tthis.contextStack = [];\r\n\tthis.tracker = tracker;\r\n}\r\n\r\nfunction addPageItem(page, item, index) {\r\n\tif (index === null || index === undefined || index < 0 || index > page.items.length) {\r\n\t\tpage.items.push(item);\r\n\t} else {\r\n\t\tpage.items.splice(index, 0, item);\r\n\t}\r\n}\r\n\r\nElementWriter.prototype.addLine = function (line, dontUpdateContextPosition, index) {\r\n\tvar height = line.getHeight();\r\n\tvar context = this.context;\r\n\tvar page = context.getCurrentPage(),\r\n\t\tposition = this.getCurrentPositionOnPage();\r\n\r\n\tif (context.availableHeight < height || !page) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tline.x = context.x + (line.x || 0);\r\n\tline.y = context.y + (line.y || 0);\r\n\r\n\tthis.alignLine(line);\r\n\r\n\taddPageItem(page, {\r\n\t\ttype: 'line',\r\n\t\titem: line\r\n\t}, index);\r\n\tthis.tracker.emit('lineAdded', line);\r\n\r\n\tif (!dontUpdateContextPosition) {\r\n\t\tcontext.moveDown(height);\r\n\t}\r\n\r\n\treturn position;\r\n};\r\n\r\nElementWriter.prototype.alignLine = function (line) {\r\n\tvar width = this.context.availableWidth;\r\n\tvar lineWidth = line.getWidth();\r\n\r\n\tvar alignment = line.inlines && line.inlines.length > 0 && line.inlines[0].alignment;\r\n\r\n\tvar offset = 0;\r\n\tswitch (alignment) {\r\n\t\tcase 'right':\r\n\t\t\toffset = width - lineWidth;\r\n\t\t\tbreak;\r\n\t\tcase 'center':\r\n\t\t\toffset = (width - lineWidth) / 2;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (offset) {\r\n\t\tline.x = (line.x || 0) + offset;\r\n\t}\r\n\r\n\tif (alignment === 'justify' &&\r\n\t\t!line.newLineForced &&\r\n\t\t!line.lastLineInParagraph &&\r\n\t\tline.inlines.length > 1) {\r\n\t\tvar additionalSpacing = (width - lineWidth) / (line.inlines.length - 1);\r\n\r\n\t\tfor (var i = 1, l = line.inlines.length; i < l; i++) {\r\n\t\t\toffset = i * additionalSpacing;\r\n\r\n\t\t\tline.inlines[i].x += offset;\r\n\t\t\tline.inlines[i].justifyShift = additionalSpacing;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nElementWriter.prototype.addImage = function (image, index, type) {\r\n\tvar context = this.context;\r\n\tvar page = context.getCurrentPage(),\r\n\t\tposition = this.getCurrentPositionOnPage();\r\n\r\n\tif (!page || (image.absolutePosition === undefined && context.availableHeight < image._height && page.items.length > 0)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (image._x === undefined) {\r\n\t\timage._x = image.x || 0;\r\n\t}\r\n\r\n\timage.x = context.x + image._x;\r\n\timage.y = context.y;\r\n\r\n\tthis.alignImage(image);\r\n\r\n\taddPageItem(page, {\r\n\t\ttype: type || 'image',\r\n\t\titem: image\r\n\t}, index);\r\n\r\n\tcontext.moveDown(image._height);\r\n\r\n\treturn position;\r\n};\r\n\r\nElementWriter.prototype.addSVG = function (image, index) {\r\n\treturn this.addImage(image, index, 'svg')\r\n};\r\n\r\nElementWriter.prototype.addQr = function (qr, index) {\r\n\tvar context = this.context;\r\n\tvar page = context.getCurrentPage(),\r\n\t\tposition = this.getCurrentPositionOnPage();\r\n\r\n\tif (!page || (qr.absolutePosition === undefined && context.availableHeight < qr._height)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (qr._x === undefined) {\r\n\t\tqr._x = qr.x || 0;\r\n\t}\r\n\r\n\tqr.x = context.x + qr._x;\r\n\tqr.y = context.y;\r\n\r\n\tthis.alignImage(qr);\r\n\r\n\tfor (var i = 0, l = qr._canvas.length; i < l; i++) {\r\n\t\tvar vector = qr._canvas[i];\r\n\t\tvector.x += qr.x;\r\n\t\tvector.y += qr.y;\r\n\t\tthis.addVector(vector, true, true, index);\r\n\t}\r\n\r\n\tcontext.moveDown(qr._height);\r\n\r\n\treturn position;\r\n};\r\n\r\nElementWriter.prototype.alignImage = function (image) {\r\n\tvar width = this.context.availableWidth;\r\n\tvar imageWidth = image._minWidth;\r\n\tvar offset = 0;\r\n\tswitch (image._alignment) {\r\n\t\tcase 'right':\r\n\t\t\toffset = width - imageWidth;\r\n\t\t\tbreak;\r\n\t\tcase 'center':\r\n\t\t\toffset = (width - imageWidth) / 2;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (offset) {\r\n\t\timage.x = (image.x || 0) + offset;\r\n\t}\r\n};\r\n\r\nElementWriter.prototype.alignCanvas = function (node) {\r\n\tvar width = this.context.availableWidth;\r\n\tvar canvasWidth = node._minWidth;\r\n\tvar offset = 0;\r\n\tswitch (node._alignment) {\r\n\t\tcase 'right':\r\n\t\t\toffset = width - canvasWidth;\r\n\t\t\tbreak;\r\n\t\tcase 'center':\r\n\t\t\toffset = (width - canvasWidth) / 2;\r\n\t\t\tbreak;\r\n\t}\r\n\tif (offset) {\r\n\t\tnode.canvas.forEach(function (vector) {\r\n\t\t\toffsetVector(vector, offset, 0);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nElementWriter.prototype.addVector = function (vector, ignoreContextX, ignoreContextY, index) {\r\n\tvar context = this.context;\r\n\tvar page = context.getCurrentPage(),\r\n\t\tposition = this.getCurrentPositionOnPage();\r\n\r\n\tif (page) {\r\n\t\toffsetVector(vector, ignoreContextX ? 0 : context.x, ignoreContextY ? 0 : context.y);\r\n\t\taddPageItem(page, {\r\n\t\t\ttype: 'vector',\r\n\t\t\titem: vector\r\n\t\t}, index);\r\n\t\treturn position;\r\n\t}\r\n};\r\n\r\nElementWriter.prototype.beginClip = function (width, height) {\r\n\tvar ctx = this.context;\r\n\tvar page = ctx.getCurrentPage();\r\n\tpage.items.push({\r\n\t\ttype: 'beginClip',\r\n\t\titem: { x: ctx.x, y: ctx.y, width: width, height: height }\r\n\t});\r\n\treturn true;\r\n};\r\n\r\nElementWriter.prototype.endClip = function () {\r\n\tvar ctx = this.context;\r\n\tvar page = ctx.getCurrentPage();\r\n\tpage.items.push({\r\n\t\ttype: 'endClip'\r\n\t});\r\n\treturn true;\r\n};\r\n\r\nfunction cloneLine(line) {\r\n\tvar result = new Line(line.maxWidth);\r\n\r\n\tfor (var key in line) {\r\n\t\tif (line.hasOwnProperty(key)) {\r\n\t\t\tresult[key] = line[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nElementWriter.prototype.addFragment = function (block, useBlockXOffset, useBlockYOffset, dontUpdateContextPosition) {\r\n\tvar ctx = this.context;\r\n\tvar page = ctx.getCurrentPage();\r\n\r\n\tif (!useBlockXOffset && block.height > ctx.availableHeight) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tblock.items.forEach(function (item) {\r\n\t\tswitch (item.type) {\r\n\t\t\tcase 'line':\r\n\t\t\t\tvar l = cloneLine(item.item);\r\n\r\n\t\t\t\tif (l._node) {\r\n\t\t\t\t\tl._node.positions[0].pageNumber = ctx.page + 1;\r\n\t\t\t\t}\r\n\t\t\t\tl.x = (l.x || 0) + (useBlockXOffset ? (block.xOffset || 0) : ctx.x);\r\n\t\t\t\tl.y = (l.y || 0) + (useBlockYOffset ? (block.yOffset || 0) : ctx.y);\r\n\r\n\t\t\t\tpage.items.push({\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\titem: l\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'vector':\r\n\t\t\t\tvar v = pack(item.item);\r\n\r\n\t\t\t\toffsetVector(v, useBlockXOffset ? (block.xOffset || 0) : ctx.x, useBlockYOffset ? (block.yOffset || 0) : ctx.y);\r\n\t\t\t\tpage.items.push({\r\n\t\t\t\t\ttype: 'vector',\r\n\t\t\t\t\titem: v\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'image':\r\n\t\t\tcase 'svg':\r\n\t\t\t\tvar img = pack(item.item);\r\n\r\n\t\t\t\timg.x = (img.x || 0) + (useBlockXOffset ? (block.xOffset || 0) : ctx.x);\r\n\t\t\t\timg.y = (img.y || 0) + (useBlockYOffset ? (block.yOffset || 0) : ctx.y);\r\n\r\n\t\t\t\tpage.items.push({\r\n\t\t\t\t\ttype: item.type,\r\n\t\t\t\t\titem: img\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif (!dontUpdateContextPosition) {\r\n\t\tctx.moveDown(block.height);\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n/**\r\n * Pushes the provided context onto the stack or creates a new one\r\n *\r\n * pushContext(context) - pushes the provided context and makes it current\r\n * pushContext(width, height) - creates and pushes a new context with the specified width and height\r\n * pushContext() - creates a new context for unbreakable blocks (with current availableWidth and full-page-height)\r\n */\r\nElementWriter.prototype.pushContext = function (contextOrWidth, height) {\r\n\tif (contextOrWidth === undefined) {\r\n\t\theight = this.context.getCurrentPage().height - this.context.pageMargins.top - this.context.pageMargins.bottom;\r\n\t\tcontextOrWidth = this.context.availableWidth;\r\n\t}\r\n\r\n\tif (isNumber(contextOrWidth)) {\r\n\t\tcontextOrWidth = new DocumentContext({ width: contextOrWidth, height: height }, { left: 0, right: 0, top: 0, bottom: 0 });\r\n\t}\r\n\r\n\tthis.contextStack.push(this.context);\r\n\tthis.context = contextOrWidth;\r\n};\r\n\r\nElementWriter.prototype.popContext = function () {\r\n\tthis.context = this.contextStack.pop();\r\n};\r\n\r\nElementWriter.prototype.getCurrentPositionOnPage = function () {\r\n\treturn (this.contextStack[0] || this.context).getCurrentPosition();\r\n};\r\n\r\n\r\nmodule.exports = ElementWriter;\r\n"]},"metadata":{},"sourceType":"script"}