{"ast":null,"code":"var _jsxFileName = \"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { CategoryScale } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GuidesChart = _ref => {\n  _s();\n\n  let {\n    dashboardData\n  } = _ref;\n  const yearTag = useRef(null);\n  const typeTag = useRef(null);\n  const yearsShipments = Object.keys(dashboardData.shipments);\n  const yearsRecargas = Object.keys(dashboardData.refils);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([\"0\", \"0\", \"0\", \"300\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"]);\n  const [yearsToSelect, setYearsToSelect] = useState(yearsShipments);\n  Chart.register(CategoryScale);\n  const barChartData = {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Mar\", \"Abr\", \"May\", \"Jun\", \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"],\n    datasets: [{\n      data: data,\n      borderColor: \"#3333ff\",\n      backgroundColor: \"pink\",\n      fill: true\n    }]\n  };\n\n  function updateChart(e, action) {\n    const year = yearTag.current.value;\n    const type = typeTag.current.value;\n    console.log(`updating to ${year} ${type}`);\n    let data = Array(12).fill(0);\n\n    if (type == \"Envios\") {\n      dashboardData.shipments[year].forEach(entry => {\n        console.log(entry.Mes);\n        April;\n        August;\n        December;\n        July;\n        June;\n        March;\n        May;\n        November;\n        October;\n        September;\n\n        switch (entry.Mes) {\n          case \"January\":\n            console.log(\"we got december\");\n            data[0] = entry.total;\n\n          case \"February\":\n            console.log(\"we got december\");\n            data[1] = entry.total;\n\n          case \"March\":\n            console.log(\"we got december\");\n            data[2] = entry.total;\n\n          case \"April\":\n            console.log(\"we got december\");\n            data[3] = entry.total;\n\n          case \"May\":\n            console.log(\"we got december\");\n            data[4] = entry.total;\n\n          case \"June\":\n            console.log(\"we got december\");\n            data[5] = entry.total;\n\n          case \"July\":\n            console.log(\"we got december\");\n            data[6] = entry.total;\n\n          case \"August\":\n            console.log(\"we got december\");\n            data[7] = entry.total;\n\n          case \"September\":\n            console.log(\"we got december\");\n            data[8] = entry.total;\n\n          case \"October\":\n            console.log(\"we got december\");\n            data[9] = entry.total;\n\n          case \"November\":\n            console.log(\"we got december\");\n            data[10] = entry.total;\n\n          case \"December\":\n            console.log(\"we got december\");\n            data[11] = entry.total;\n        }\n      });\n    }\n\n    if (type == \"Recargas\") {\n      console.log(\"Luk\");\n    }\n\n    console.log(data);\n    setData();\n  }\n\n  const barChart = /*#__PURE__*/_jsxDEV(Bar, {\n    type: \"bar\",\n    width: 70,\n    height: 20,\n    options: {\n      title: {\n        display: false,\n        text: \"COVID-19 Cases of Last 3 Months\",\n        fontSize: 15\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    },\n    data: barChartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n\n  useEffect(() => {\n    setLoading(false);\n    console.log(\"runnig this\");\n  }, [loading]);\n  console.log(yearsToSelect);\n  return /*#__PURE__*/_jsxDEV(ChartWrapper, {\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SelectWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          ref: yearTag,\n          onChange: e => updateChart(e, {\n            type: \"year\"\n          }),\n          children: yearsToSelect.map(year => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          ref: typeTag,\n          onChange: e => updateChart(e, {\n            type: \"graph\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Envios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Recargas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), barChart]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GuidesChart, \"K2HxQF8pp0ylgjiVKfLMou9V3Dw=\");\n\n_c = GuidesChart;\nconst Select = styled.select`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  align-self: flex-end;\n  margin-right: 30px\n`;\n_c2 = Select;\nconst SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: flex-end;\n  justify-content: flex-end;\n`;\n_c3 = SelectWrapper;\nconst ChartWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 50px;\n`;\n_c4 = ChartWrapper;\nexport default GuidesChart;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GuidesChart\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"SelectWrapper\");\n$RefreshReg$(_c4, \"ChartWrapper\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Bar","CategoryScale","Chart","styled","GuidesChart","dashboardData","yearTag","typeTag","yearsShipments","Object","keys","shipments","yearsRecargas","refils","loading","setLoading","data","setData","yearsToSelect","setYearsToSelect","register","barChartData","labels","datasets","borderColor","backgroundColor","fill","updateChart","e","action","year","current","value","type","console","log","Array","forEach","entry","Mes","April","August","December","July","June","March","May","November","October","September","total","barChart","title","display","text","fontSize","plugins","legend","map","Select","select","SelectWrapper","div","ChartWrapper"],"sources":["/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { CategoryScale } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport styled from \"styled-components\";\n\nconst GuidesChart = (\n  {\n    dashboardData\n  }\n) => {\n\n  const yearTag = useRef(null);\n  const typeTag = useRef(null);\n\n  const yearsShipments = Object.keys(dashboardData.shipments)\n  const yearsRecargas = Object.keys(dashboardData.refils)\n\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([\"0\",\"0\",\"0\",\"300\",\"0\",\"0\",\"0\", \"0\",\"0\",\"0\",\"0\",\"0\"]);\n  const [yearsToSelect, setYearsToSelect] = useState(yearsShipments);\n  \n  \n  Chart.register(CategoryScale);\n  const barChartData = {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Mar\",\"Abr\",\"May\",\"Jun\",\"Jul\",\n    \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"\n  ],\n    datasets: [\n      {\n        data: data,\n        borderColor: \"#3333ff\",\n        backgroundColor: \"pink\",\n        fill: true\n      },\n    ]\n  };\n\n  function updateChart(e, action) {\n    const year = yearTag.current.value\n    const type = typeTag.current.value\n    console.log(`updating to ${year} ${type}`)\n    let data = Array(12).fill(0)\n    if (type == \"Envios\") {\n      dashboardData.shipments[year].forEach((entry) => {\n        console.log(entry.Mes)\n        April\n August\n December\n\n July\n June\n March\n May\n November\n October\n September\n\n\n    switch (entry.Mes) {\n      case \"January\":\n        console.log(\"we got december\")\n        data[0] = entry.total\n      case \"February\":\n        console.log(\"we got december\")\n        data[1] = entry.total\n      case \"March\":\n        console.log(\"we got december\")\n        data[2] = entry.total\n      case \"April\":\n        console.log(\"we got december\")\n        data[3] = entry.total\n      case \"May\":\n        console.log(\"we got december\")\n        data[4] = entry.total\n      case \"June\":\n        console.log(\"we got december\")\n        data[5] = entry.total\n      case \"July\":\n        console.log(\"we got december\")\n        data[6] = entry.total\n      case \"August\":\n        console.log(\"we got december\")\n        data[7] = entry.total\n      case \"September\":\n        console.log(\"we got december\")\n        data[8] = entry.total\n      case \"October\":\n        console.log(\"we got december\")\n        data[9] = entry.total\n      case \"November\":\n      console.log(\"we got december\")\n      data[10] = entry.total\n      case \"December\":\n        console.log(\"we got december\")\n        data[11] = entry.total \n      }\n      })  \n    }\n\n    if (type == \"Recargas\") {\n        console.log(\"Luk\")\n    }\n    console.log(data)\n    setData()\n  }\n\n  const barChart = (\n    <Bar\n      type=\"bar\"\n      width={70}\n      height={20}\n      options={{\n        title: {\n          display: false,\n          text: \"COVID-19 Cases of Last 3 Months\",\n          fontSize: 15\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n        \n      }}\n      data={barChartData}\n    />\n  );\n\n  useEffect(() => {\n    setLoading(false)\n    console.log(\"runnig this\")\n  }, [loading]);\n\n  console.log(yearsToSelect)\n\n  return (\n  <ChartWrapper>\n    {\n        loading ? <></> :\n        <>\n        <SelectWrapper>\n          <Select ref={yearTag} onChange={(e) => updateChart(e, {type: \"year\"})}>\n              { yearsToSelect.map((year) => {\n                return <option >{year}</option>\n              })}\n          </Select>\n          <Select ref={typeTag} onChange={(e) => updateChart(e, { type: \"graph\"})}>\n                        <option>\n                          Envios\n                        </option>\n                        <option>\n                          Recargas\n                        </option>\n          </Select>\n        </SelectWrapper>\n        {barChart}\n        </>\n    }\n    \n  </ChartWrapper>\n  );\n};\n\nconst Select = styled.select`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  align-self: flex-end;\n  margin-right: 30px\n`\n\nconst SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: flex-end;\n  justify-content: flex-end;\n`\n\nconst ChartWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 50px;\n`\n\n\nexport default GuidesChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}