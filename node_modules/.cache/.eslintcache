[{"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/index.js":"1","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/App.js":"2","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/FulfillmentPagina.js":"3","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ContactoPagina.js":"4","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/SignUpPagina.js":"5","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/InicioPagina.js":"6","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ServiciosPagina.js":"7","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/RecargarSaldoPagina.js":"8","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/CreateGuidePagina.js":"9","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ForgotPasswordPagina.js":"10","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/UserDashboard.js":"11","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ResetPasswordPagina.js":"12","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewCotizar.js":"13","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewCreateGuide.js":"14","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewDashboard.js":"15","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/RastreoPagina.js":"16","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewRecargar.js":"17","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/SignInPagina.js":"18","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewGuias.js":"19","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/routing/PrivateRoute.js":"20","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/WhatsappBtn.js":"21","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/SubNavbar.js":"22","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/Navbar.js":"23","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/RastreaPedido.js":"24","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/ContactUs.js":"25","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/BtnMail.js":"26","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MilesDeGuias.js":"27","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Footer/Footer.js":"28","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/NuestrosVehiculos.js":"29","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/ContactForm.js":"30","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MasBeneficios.js":"31","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MapInicio.js":"32","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/AyudamosNegocios.js":"33","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Tracking/ShippingInformation.js":"34","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/styled_components/page_wrapper.js":"35","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Sidebar/Sidebar.js":"36","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/styled_components/mid_screen_wrapper.js":"37","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesTable.js":"38","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/AccountInfo.js":"39","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/DashboardMonitor.js":"40","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/Cotizador.js":"41","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuideCreator.js":"42","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/UserDashboard/GuideTable.js":"43","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Cart/Checkout.js":"44","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/BtnRegistro.js":"45","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Cart/Checkout2.js":"46","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/UserDashboard/CancelButton.js":"47","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js":"48"},{"size":154,"mtime":1652034517974,"results":"49","hashOfConfig":"50"},{"size":3507,"mtime":1652721159848,"results":"51","hashOfConfig":"50"},{"size":8051,"mtime":1652034517557,"results":"52","hashOfConfig":"50"},{"size":1244,"mtime":1652034517557,"results":"53","hashOfConfig":"50"},{"size":5230,"mtime":1652678668126,"results":"54","hashOfConfig":"50"},{"size":5541,"mtime":1652034517558,"results":"55","hashOfConfig":"50"},{"size":12879,"mtime":1652034517558,"results":"56","hashOfConfig":"50"},{"size":8264,"mtime":1652773271343,"results":"57","hashOfConfig":"50"},{"size":42002,"mtime":1652034517557,"results":"58","hashOfConfig":"50"},{"size":2405,"mtime":1652676142948,"results":"59","hashOfConfig":"50"},{"size":14372,"mtime":1652399503497,"results":"60","hashOfConfig":"50"},{"size":2811,"mtime":1652034517558,"results":"61","hashOfConfig":"50"},{"size":1095,"mtime":1652775007904,"results":"62","hashOfConfig":"50"},{"size":1855,"mtime":1652466820446,"results":"63","hashOfConfig":"50"},{"size":2528,"mtime":1652768884301,"results":"64","hashOfConfig":"50"},{"size":8751,"mtime":1652721164437,"results":"65","hashOfConfig":"50"},{"size":5713,"mtime":1652774248655,"results":"66","hashOfConfig":"50"},{"size":3815,"mtime":1652651554964,"results":"67","hashOfConfig":"50"},{"size":1202,"mtime":1652739432815,"results":"68","hashOfConfig":"50"},{"size":374,"mtime":1652472080656,"results":"69","hashOfConfig":"50"},{"size":671,"mtime":1652034517973,"results":"70","hashOfConfig":"50"},{"size":614,"mtime":1652034517973,"results":"71","hashOfConfig":"50"},{"size":4757,"mtime":1652721161256,"results":"72","hashOfConfig":"50"},{"size":2400,"mtime":1652200650306,"results":"73","hashOfConfig":"50"},{"size":1109,"mtime":1652034517973,"results":"74","hashOfConfig":"50"},{"size":239,"mtime":1652034517973,"results":"75","hashOfConfig":"50"},{"size":658,"mtime":1652200519960,"results":"76","hashOfConfig":"50"},{"size":2961,"mtime":1652200767367,"results":"77","hashOfConfig":"50"},{"size":2000,"mtime":1652200567258,"results":"78","hashOfConfig":"50"},{"size":7664,"mtime":1652034517972,"results":"79","hashOfConfig":"50"},{"size":3442,"mtime":1652200502771,"results":"80","hashOfConfig":"50"},{"size":3897,"mtime":1652200373992,"results":"81","hashOfConfig":"50"},{"size":1466,"mtime":1652472082263,"results":"82","hashOfConfig":"50"},{"size":1504,"mtime":1652034517974,"results":"83","hashOfConfig":"50"},{"size":137,"mtime":1652425184794,"results":"84","hashOfConfig":"50"},{"size":1573,"mtime":1652774788885,"results":"85","hashOfConfig":"50"},{"size":178,"mtime":1652775066407,"results":"86","hashOfConfig":"50"},{"size":6579,"mtime":1652776364374,"results":"87","hashOfConfig":"50"},{"size":447,"mtime":1652034517973,"results":"88","hashOfConfig":"50"},{"size":4028,"mtime":1652772028223,"results":"89","hashOfConfig":"50"},{"size":6140,"mtime":1652429307384,"results":"90","hashOfConfig":"50"},{"size":34722,"mtime":1652434525923,"results":"91","hashOfConfig":"50"},{"size":1228,"mtime":1652653006075,"results":"92","hashOfConfig":"50"},{"size":3260,"mtime":1652034517971,"results":"93","hashOfConfig":"50"},{"size":225,"mtime":1652034517972,"results":"94","hashOfConfig":"50"},{"size":3262,"mtime":1652034517971,"results":"95","hashOfConfig":"50"},{"size":799,"mtime":1652034517974,"results":"96","hashOfConfig":"50"},{"size":2003,"mtime":1652771159563,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1ck9g56",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/index.js",[],["209","210"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/App.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/FulfillmentPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ContactoPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/SignUpPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/InicioPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ServiciosPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/RecargarSaldoPagina.js",["211","212","213","214","215","216"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/CreateGuidePagina.js",["217","218","219"],"import React, { useState, useEffect} from 'react';\nimport Navbar from '../components/Navbar/Navbar';\nimport axios from 'axios'\nimport './CreateGuidePagina.scss'\nimport Footer from '../components/Footer/Footer'\nimport { Link } from 'react-router-dom';\nimport CheckoutStripe from '../components/Cart/Checkout'\n\nconst CreateGuidePagina = () => {\n\n  //Username for fetching points\n  let username = localStorage.getItem('email')\n\n  //Create Guide Sucess\n  const [success, setSuccess] = useState(false)\n  \n  //Guide Data\n  const [apiGuide, setApiGuide] = useState()\n  const [hrefFile, setHrefFile] = useState(\"\")\n\n  //Payment and Selected Guide\n  // const [selectedGuide, setSelectedGuide] = useState(false)\n  const [selectedService, setSelectedService] = useState()\n  const [paymentMethod, setPaymentMethod] = useState(null)\n\n  //currentUser (HARDCODED)\n  // const [currentUser, setcurrentUser] = useState('')\n  const [guideCost, setguideCost] = useState(0)\n\n  //Types of Services\n  const [services, setServices] = useState()\n  const [loadingQuoteData, setLoadingQuoteData] = useState(true)\n\n  //User Points State\n  const [points, setPoints] = useState(100);\n  const [isPointsEnough, setIsPointsEnough] = useState(false)\n  const [needsReset, setNeedsReset] = useState(false)\n\n    //Origin STATES\n  const [fullNameSender, setFullNameSender] = useState('');\n  const [emailSender, setEmailSender] = useState('');\n  const [phoneNumberSender, setPhoneNumberSender] = useState('');\n  const [streetAndNumberSender, setStreetandNumberSender] = useState('');  \n  const [referenciasSender, setReferenciasSender] = useState('');\n  const [colonySender, setColonySender] = useState('');\n  const [postalCodeSender, setPostalCodeSender] = useState('');\n  const [citySender, setCitySender] = useState('');\n  const [mexicoStateSender, setMexicoStateSender] = useState('');\n    \n  // Origin Error\n  const [fullNameSenderError, setFullNameSenderError] = useState('');\n  const [emailSenderError, setEmailSenderError] = useState('');\n  const [phoneNumberSenderError, setPhoneNumberSenderError] = useState('');\n  const [streetAndNumberSenderError, setStreetandNumberSenderError] = useState('');\n  const [colonySenderError, setColonySenderError] = useState('');\n  const [postalCodeSenderError, setPostalCodeSenderError] = useState('');\n  const [citySenderError, setCitySenderError] = useState('');\n  const [errorQuote, setErrorQuote] = useState(\"\")\n\n    // \"\" STATES\n  const [fullNameReceiver, setFullNameReceiver] = useState('');\n  const [emailReceiver, setEmailReceiver] = useState('');\n  const [phoneNumberReceiver, setPhoneNumberReceiver] = useState('');\n  const [streetAndNumberReceiver, setStreetandNumberReceiver] = useState('');  \n  const [referenciasReceiver, setReferenciasReceiver] = useState('');\n  const [colonyReceiver, setColonyReceiver] = useState('');\n  const [postalCodeReceiver, setPostalCodeReceiver] = useState('');\n  const [cityReceiver, setCityReceiver] = useState('');\n  const [mexicoStateReceiver, setMexicoStateReceiver] = useState('');\n  \n  // To Errors\n  const [fullNameReceiverError, setFullNameReceiverError] = useState('');\n  const [emailReceiverError, setEmailReceiverError] = useState('');\n  const [phoneNumberReceiverError, setPhoneNumberReceiverError] = useState('');\n  const [streetAndNumberReceiverError, setStreetandNumberReceiverError] = useState('');\n  const [colonyReceiverError, setColonyReceiverError] = useState('');\n  const [postalCodeReceiverError, setPostalCodeReceiverError] = useState('');\n  const [cityReceiverError, setCityReceiverError] = useState('');\n  \n  //PACKAGE VALUES\n  const [packageLenght, setPackageLenght] = useState('');\n  const [packageWidth, setPackageWidth] = useState('');\n  const [packageHeight, setPackageHeight  ] = useState('');\n  const [packageWeight, setPackageWeight] = useState('');  \n  const [packageDescription, setPackageDescription] = useState('');\n    //PACKAGE ERRORS\n  const [packageLenghtError, setPackageLenghtError] = useState('');\n  const [packageWidthError, setPackageWidthError] = useState('');\n  const [packageHeightError, setPackageHeightError  ] = useState('');\n  const [packageWeightError, setPackageWeightError] = useState('');  \n  const [packageDescriptionError, setPackageDescriptionError] = useState('');\n\n//Get User Points\nconst requestGetPoints = async (username) => {\n  const url = 'api/user/getPoints/'\n  \n  const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n          'Content-Type': 'application/json',\n        },\n      body: JSON.stringify ({\n          'username': username\n      })\n  });\n  \n  const data = await response.json()\n  if (response.status === 200) {  \n    setPoints(data.data[0].points)\n  }\n}\n\n//Create Guide Function\nconst createGuide = async () => {\n  await createGuideApi() \n}\n//Step One Guide Creation\nconst createGuideApi = async () => {\n  console.log(mexicoStateReceiver, 'Receiver')\n  console.log(mexicoStateSender, 'GUACMOLE')\n  const urlApiCreate = 'https://test.quiken.mx/generate';\n  const responseApi = await fetch(urlApiCreate, {\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json',\n    },\n    body: JSON.stringify({\n      \"clientDetail\": {\n        \"accountName\": \"tester2@test.com\",\n        \"apiKey\": \"8oNVxt6MTfmv8aYUfhZyxwcWqQ7ELx2y\"\n      },\n      \"origin\": {\n        \"name\": fullNameSender,\n        \"company\": fullNameSender,\n        \"email\": emailSender,\n        \"phone\": phoneNumberSender,\n        \"street\": streetAndNumberSender,\n        \"ext_number\": \"col\",\n        \"int_number\": \"\",\n        \"district\": \"\",\n        \"city\": citySender,\n        \"state\": mexicoStateSender,\n        \"country\": \"MX\",\n        \"postalCode\": postalCodeSender,\n        \"reference\": referenciasSender\n      },\n      \"destination\": {\n        \"name\": fullNameSender,\n        \"company\": fullNameReceiver,\n        \"email\": emailReceiver,\n        \"phone\": phoneNumberReceiver,\n        \"street\": streetAndNumberReceiver,\n        \"ext_number\": \"col\",\n        \"int_number\": \"\",\n        \"district\": \"\",\n        \"city\": cityReceiver,\n        \"state\": mexicoStateReceiver,\n        \"country\": \"MX\",\n        \"postalCode\": postalCodeReceiver,\n        \"reference\": referenciasReceiver\n      },\n      \"package\": {\n        \"content\": \"ropa\",\n        \"type\": 1,\n        \"dimensions\": {\n          \"length\": 10,\n          \"width\": 10,\n          \"height\": 25\n        },\n        \"weight\": 1\n      },\n      \"shipment\": {\n        \"service\": selectedService\n      },\n      \"settings\": {\n        \"labelFormat\": \"pdf\"\n      }\n    })\n  });\n  console.log(responseApi)\n  const data = await responseApi.json()\n  console.log('DATA API REQUEST', data)\n  setApiGuide(data)\n  createGuideQuiken(data)\n}\n\n//Step Two Guide Creation\nconst createGuideQuiken = async (apiGuide) => {\n    let guideStatus = \"Activa\"\n    console.log(apiGuide)\n    let trackingNumber = apiGuide.data.trackingNumber\n    console.log(trackingNumber, 'THIS IS TRACKIGN NUMBER')\n    let fileUrl = apiGuide.data.fileUrl\n    setHrefFile(fileUrl)\n    \n    //Creating Guide in Database:\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      let currentUser = localStorage.getItem('email')\n      console.log(currentUser)\n      const { data } = await axios.post(\n        \"/api/user/createguide\",\n        {\n          currentUser,\n          guideCost,\n          trackingNumber,\n          fileUrl,\n          guideStatus,      \n          fullNameSender,\n          emailSender,\n          phoneNumberSender,\n          streetAndNumberSender,  \n          referenciasSender,\n          colonySender,\n          postalCodeSender,\n          citySender,\n          mexicoStateSender,\n          fullNameReceiver,\n          emailReceiver,\n          phoneNumberReceiver,\n          streetAndNumberReceiver,  \n          referenciasReceiver,\n          colonyReceiver,\n          postalCodeReceiver,\n          cityReceiver,\n          mexicoStateReceiver,\n          packageLenght,\n          packageWidth,\n          packageHeight,\n          packageWeight,\n          packageDescription\n        },\n        config\n      );\n      console.log(data, 'THIS IS DATA')\n      setSuccess(true)\n      alert('Tu guida fue creada exitosamente.')\n      // history.push(\"/userdashboard\");\n    } catch (error) {\n      console.log(error)\n    }\n    \n}\n\n// Guide Cost Function\nconst calculateNewGuidePrice = async () => {\n  const url = 'https://api.quiken.mx/rate';\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n        \"clientDetail\": {\n           \"accountName\": \"rastreo@quiken.mx\",\n           \"apiKey\": \"QNy1tpJFfmYIOlqF1oiwBy7iE46LXuwb\"\n         },\n         \"origin\": {\n           \"name\": fullNameSender,\n           \"company\": \"Default Value\",\n           \"email\": emailSender,\n           \"phone\": phoneNumberSender,\n           \"country\": \"MX\",\n           \"postalCode\": postalCodeSender\n         },\n         \"destination\": {\n           \"name\": fullNameReceiver,\n           \"company\": \"Default Value\",\n           \"email\": emailReceiver,\n           \"phone\": phoneNumberReceiver,\n           \"country\": \"MX\",\n           \"postalCode\": postalCodeReceiver\n         },\n         \"package\": {\n           \"content\": \"ropa\",\n           \"type\": 1,\n           \"dimensions\": {\n             \"length\": parseInt(packageLenght),\n             \"width\": parseInt(packageWidth),\n             \"height\": parseInt(packageHeight)\n           },\n           \"weight\": parseInt(packageWeight)\n         }\n    })\n  });\n  const data = await response.json();\n  console.log(data)\n  if (data.status === \"SUCCESS\") {\n    console.log(data.data.services, 'DATA DATA SERVICES');\n    setServices(data.data.services)\n    setLoadingQuoteData(false)\n    \n  } else if (data.status === \"ERROR\") {\n    setErrorQuote(data.description)\n    setLoadingQuoteData(false)\n  }\n  \n}\n\nconst handleSelectGuide = (servicio) => {\n  setSelectedService(servicio.code)\n  console.log(servicio.code)\n  setguideCost(servicio.totalPrice)\n}\n\n\n//   Validation Functions\n  function hasLetters (phone) {\n    return /^\\d+$/.test(phone)\n  }\n\n  function emailIsValid (email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n  }\n\n  const formValidation = () => {\n    const fullNameSenderError = {};\n    const emailSenderError = {};\n    const phoneNumberSenderError = {};\n    const streetAndNumberSenderError = {};\n    const colonySenderError = {};\n    const postalCodeSenderError = {};\n    const citySenderError = {};\n    const fullNameReceiverError = {};\n    const emailReceiverError = {};\n    const phoneNumberReceiverError = {};\n    const streetAndNumberReceiverError = {};\n    const colonyReceiverError = {};\n    const postalCodeReceiverError = {};\n    const cityReceiverError = {};\n    const packageLenghtError = {};\n    const packageWidthError = {};\n    const packageHeightError = {};\n    const packageWeightError = {};\n    const packageDescriptionError = {};\n    \n\n    let isValid = true;\n    \n    //Name Validation Origin\n    if (fullNameSender.trim().length < 5) {\n      fullNameSenderError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n      isValid = false;\n      console.log(\"name too short\")\n    }\n\n    if (fullNameSender.trim().match(/[0-9]/)) {\n      fullNameSenderError.FullNameLong = \"Favor de ingresar solamente letras\";\n      isValid = false;\n    }\n\n    setFullNameSenderError(fullNameSenderError)\n\n    //REGEX Email Validation \n    \n    if (emailIsValid(emailSender) === false) {\n      emailSenderError.EmailError = \"El email no es valido\"\n      isValid = false;\n      console.log(\"The email is not valid\")\n    }\n\n    setEmailSenderError(emailSenderError)\n    \n    if (phoneNumberSender.trim().length < 10) {\n      phoneNumberSenderError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n      console.log(\"el telefono es muy corto\")\n      isValid = false;\n    }\n    \n\n    if (hasLetters(phoneNumberSender) === false) {\n      phoneNumberSenderError.PhoneTooShort = \"Favor de introducir solo numeros\"\n      isValid = false;\n    }\n\n    setPhoneNumberSenderError(phoneNumberSenderError)\n\n    if (streetAndNumberSender.trim().length < 5) {\n      streetAndNumberSenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setStreetandNumberSenderError(streetAndNumberSenderError)\n\n    if (colonySender.trim().length < 5) {\n      colonySenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setColonySenderError(colonySenderError)\n\n    if (postalCodeSender.trim().length < 4) {\n      postalCodeSenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    if (postalCodeSender.trim().length > 11) {\n      postalCodeSenderError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n      isValid = false;\n    }\n    \n    setPostalCodeSenderError(postalCodeSenderError)\n\n    if (citySender.trim().length < 5) {\n      citySenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    setCitySenderError(citySenderError)\n\n    // To Section Validation\n\n    if (fullNameReceiver.trim().length < 5) {\n        fullNameReceiverError.FullNameReceiverShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n        isValid = false;\n        console.log(\"name too short\")\n      }\n  \n    if (fullNameReceiver.trim().match(/[0-9]/)) {\n        fullNameReceiverError.FullNameLong = \"Favor de ingresar solamente letras\";\n        isValid = false;\n      }\n  \n    setFullNameReceiverError(fullNameReceiverError)\n    \n    if (emailIsValid(emailReceiver) === false) {\n        emailReceiverError.EmailError = \"El email no es valido\"\n        isValid = false;\n        console.log(\"The email is not valid\")\n      }\n  \n      setEmailReceiverError(emailReceiverError)\n      \n    if (phoneNumberReceiver.trim().length < 10) {\n        phoneNumberReceiverError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n        console.log(\"el telefono es muy corto\")\n        isValid = false;\n      }\n\n      if (hasLetters(phoneNumberReceiver) === false) {\n        phoneNumberReceiverError.PhoneTooShort = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPhoneNumberReceiverError(phoneNumberReceiverError)\n  \n      if (streetAndNumberReceiver.trim().length < 5) {\n        streetAndNumberReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setStreetandNumberReceiverError(streetAndNumberReceiverError)\n  \n      if (colonyReceiver.trim().length < 5) {\n        colonyReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setColonyReceiverError(colonyReceiverError)\n  \n      if (postalCodeReceiver.trim().length < 4) {\n        postalCodeReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n        isValid = false;\n      }\n  \n      if (postalCodeReceiver.trim().length > 11) {\n        postalCodeReceiverError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n        isValid = false;\n      }\n      \n      setPostalCodeReceiverError(postalCodeReceiverError)\n  \n      if (cityReceiver.trim().length < 5) {\n        cityReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n        isValid = false;\n      }\n  \n      setCityReceiverError(cityReceiverError)\n      \n      if (packageLenght.length === 0) {\n        packageLenghtError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageLenght) === false) {\n        console.log(\"solo numeros\")\n        packageLenghtError.PackageLenghtLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageLenghtError(packageLenghtError)\n  \n      if (packageWidth.length === 0) {\n        packageWidthError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageWidth) === false) {\n        console.log(\"solo numeros\")\n        packageWidthError.PackageWidthLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageWidthError(packageWidthError)\n      \n      if (packageHeight.length === 0) {\n        packageHeightError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageHeight) === false) {\n        console.log(\"solo numeros\")\n        packageHeightError.PackageHeightLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageHeightError(packageHeightError)\n  \n      if (packageWeight.length === 0) {\n        packageWeightError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageWeight) === false) {\n        console.log(\"solo numeros\")\n        packageWeightError.PackageWeightLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageWeightError(packageWeightError)\n      \n      if (packageDescription.length === 0) {\n        packageDescriptionError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      setPackageDescriptionError(packageDescriptionError)\n\n    return isValid\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = formValidation();\n    if (isValid) {\n      await calculateNewGuidePrice()\n  }  \n\n  else {\n    setLoadingQuoteData(true)\n    setServices()\n    setguideCost(0)\n  }\n}\n\n\nconst payWithPoints = async (username, guideCost) => {\n  const url = 'api/user/payWithPoints'\n  console.log(username, 'RUNNING THIS')\n  console.log('GUIDE COST', guideCost)\n  \n  const response = await fetch(url, {\n      method: \"PUT\",\n      headers: {\n          'Content-Type': 'application/json',\n        },\n      body: JSON.stringify ({\n          'username': username,\n          'guideCost': guideCost \n      })\n  });\n  \n  const data = await response.json()\n  console.log(data)\n  console.log(response.status, 'STATUS')\n  if (response.status === 200) {\n      alert('Tu pago con puntos fue exitoso. Agradecemos tu compra')\n      setNeedsReset(true)\n      createGuide()\n  }   \n}\n\n//Use Effect for Payment With Points\nuseEffect(() => {\n  setNeedsReset(false)\n  requestGetPoints(username)\n  setIsPointsEnough(false)\n  const difference = points - guideCost\n  if (difference >= 0) {\n    setIsPointsEnough(true)\n  }\n}, [paymentMethod, points, needsReset])\n\n    return (\n      <>\n        <Navbar/>\n        <div className=\"main-wrapper-page\">                    \n            \n            {/* FIRST TWO SECTIONS */}\n            <div className=\"row-first-two-sections\">              \n              {/* ORIGIN SECTION */}\n              <div className=\"seccion-desde-donde-envias\">\n              <h1 className=\"subheading-form-create-guide\"> 1. ORIGEN:</h1>\n                  <div>\n                  <div>\n                  {/* <label className=\"form-label\" style={{display:'block'}}>Nombre Completo <span style={{color: \"red\"}}>*</span></label> */}\n                    <label className=\"label-create-guide-form\">Nombre Completo</label>\n                    <input className=\"input-create-guide-form\" value={fullNameSender}\n                        onChange= {event => setFullNameSender(event.target.value)}\n                        type=\"text\" placeholder=\"Nombre Completo\" />\n                    {Object.keys(fullNameSenderError).map((key) => {return <div>{fullNameSenderError[key] }</div>})}\n                  </div>\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Correo Electrónico</label>\n                      <input className=\"input-create-guide-form\" value={emailSender} onChange={(event) => setEmailSender(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                      </div>                \n                      {Object.keys(emailSenderError).map((key) => { return <div>{emailSenderError[key]}</div> })}  \n                      \n                  <div>\n                  <label className=\"label-create-guide-form\">Teléfono</label>\n                      <input className=\"input-create-guide-form\" value={phoneNumberSender} onChange={(event) => setPhoneNumberSender(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                      {Object.keys(phoneNumberSenderError).map((key) => {return <div>{phoneNumberSenderError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Calle y Número</label>\n                      <input className=\"input-create-guide-form\" value={streetAndNumberSender} onChange={(event) => setStreetandNumberSender(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                      </div>\n                      {Object.keys(streetAndNumberSenderError).map((key) => {return <div>{streetAndNumberSenderError[key] }</div>})}\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Referencia</label>\n                      <input className=\"input-create-guide-form\" value={referenciasSender} onChange={(event) => setReferenciasSender(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n                      </div>\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Colonia</label>\n                      <input className=\"input-create-guide-form\" value={colonySender} onChange={(event) => setColonySender(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                      </div>\n                  {Object.keys(colonySenderError).map((key) => {return <div>{colonySenderError[key] }</div>})}\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Código Postal</label>\n                      <input className=\"input-create-guide-form\" value={postalCodeSender} onChange={(event) => setPostalCodeSender(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                      </div>\n                  {Object.keys(postalCodeSenderError).map((key) => {return <div>{postalCodeSenderError[key] }</div>})}\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Ciudad</label>\n                      <input className=\"input-create-guide-form\" value={citySender} onChange={(event) => setCitySender(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                      </div>\n                  {Object.keys(citySenderError).map((key) => {return <div>{citySenderError[key] }</div>})}\n\n                  <div className=\"field-holder\">\n                      <label className=\"label-create-guide-form\">Estado</label>\n                      <select className=\"input-create-guide-form\" name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateSender(event.target.value)}>\n                        <option value=\"no\">Seleccione Estado.</option>\n                        {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                        <option value=\"Baja California\">Baja California</option>\n                        <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                        {/* <option value=\"Campeche\">Campeche</option>\n                        <option value=\"Chiapas\">Chiapas</option> */}\n                        <option value=\"CH\">Chihuahua</option>\n                        <option value=\"CX\">Ciudad de México</option>\n                        <option value=\"CO\">Coahuila</option>\n                        {/* <option value=\"Colima\">Colima</option> */}\n                        <option value=\"DG\">Durango</option>\n                        {/* <option value=\"Estado de México\">Estado de México</option> */}\n                        <option value=\"GT\">Guanajuato</option>\n                        {/* <option value=\"Guerrero\">Guerrero</option> */}\n                        <option value=\"HG\">Hidalgo</option>\n                        <option value=\"JL\">Jalisco</option>\n                        {/* <option value=\"Michoacán\">Michoacán</option>\n                        <option value=\"Morelos\">Morelos</option>\n                        <option value=\"Nayarit\">Nayarit</option> */}\n                        <option value=\"NL\">Nuevo León</option>\n                        {/* <option value=\"Oaxaca\">Oaxaca</option>\n                        <option value=\"Puebla\">Puebla</option> */}\n                        <option value=\"QT\">Querétaro</option>\n                        {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                        <option value=\"SL\">San Luis Potosí</option>\n                        {/* <option value=\"Sinaloa\">Sinaloa</option>\n                        <option value=\"Sonora\">Sonora</option>\n                        <option value=\"Tabasco\">Tabasco</option> */}\n                        <option value=\"TM\">Tamaulipas</option>\n                        {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                        <option value=\"VE\">Veracruz</option>\n                        {/* <option value=\"Yucatán\">Yucatán</option>\n                        <option value=\"Zacatecas\">Zacatecas</option> */}\n                    </select>\n                  </div>\n              \n              </div>\n              </div>\n\n              {/* TO SECTION */}\n              <div className=\"seccion-desde-donde-envias\">\n              <h1 className=\"subheading-form-create-guide\">2. DESTINO:</h1>\n                  <div>\n                  <div>\n                      <label className=\"label-create-guide-form\">Nombre Completo</label>\n                      <input className=\"input-create-guide-form\"\n                      value={fullNameReceiver}\n                      onChange= {event => setFullNameReceiver(event.target.value)}\n                      type=\"text\" placeholder=\"Nombre Completo\" />\n                      </div>\n                      {Object.keys(fullNameReceiverError).map((key) => {return <div>{fullNameReceiverError[key] }</div>})}\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Correo Electrónico</label>\n                      <input className=\"input-create-guide-form\" value={emailReceiver} onChange={(event) => setEmailReceiver(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                      {Object.keys(emailReceiverError).map((key) => { return <div>{emailReceiverError[key]}</div> })}  \n                  </div>                \n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Teléfono</label>\n                      <input className=\"input-create-guide-form\" value={phoneNumberReceiver} onChange={(event) => setPhoneNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                      {Object.keys(phoneNumberReceiverError).map((key) => {return <div>{phoneNumberReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Calle y Número</label>\n                      <input  className=\"input-create-guide-form\" value={streetAndNumberReceiver} onChange={(event) => setStreetandNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                      {Object.keys(streetAndNumberReceiverError).map((key) => {return <div>{streetAndNumberReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Referencias</label>\n                      <input  className=\"input-create-guide-form\" value={referenciasReceiver} onChange={(event) => setReferenciasReceiver(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n                  </div>\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Colonia</label>\n                      <input className=\"input-create-guide-form\" value={colonyReceiver} onChange={(event) => setColonyReceiver(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                      {Object.keys(colonyReceiverError).map((key) => {return <div>{colonyReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                    <label className=\"label-create-guide-form\">Código Postal</label>\n                      <input className=\"input-create-guide-form\" value={postalCodeReceiver} onChange={(event) => setPostalCodeReceiver(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                      {Object.keys(postalCodeReceiverError).map((key) => {return <div>{postalCodeReceiverError[key] }</div>})}\n                  </div>\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Ciudad</label>\n                      <input className=\"input-create-guide-form\" value={cityReceiver} onChange={(event) => setCityReceiver(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                      {Object.keys(cityReceiverError).map((key) => {return <div>{cityReceiverError[key] }</div>})}\n                  </div>\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Estado</label>\n                      <select className=\"input-create-guide-form\" name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateReceiver(event.target.value)}>\n                      <option value=\"no\">Seleccione Estado.</option>\n                      {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                      <option value=\"Baja California\">Baja California</option>\n                      <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                      {/* <option value=\"Campeche\">Campeche</option>\n                      <option value=\"Chiapas\">Chiapas</option> */}\n                      <option value=\"CH\">Chihuahua</option>\n                      <option value=\"CX\">Ciudad de México</option>\n                      <option value=\"CO\">Coahuila</option>\n                      {/* <option value=\"Colima\">Colima</option> */}\n                      <option value=\"DG\">Durango</option>\n                      {/* <option value=\"Estado de México\">Estado de México</option> */}\n                      <option value=\"GT\">Guanajuato</option>\n                      {/* <option value=\"Guerrero\">Guerrero</option> */}\n                      <option value=\"HG\">Hidalgo</option>\n                      <option value=\"JL\">Jalisco</option>\n                      {/* <option value=\"Michoacán\">Michoacán</option>\n                      <option value=\"Morelos\">Morelos</option>\n                      <option value=\"Nayarit\">Nayarit</option> */}\n                      <option value=\"NL\">Nuevo León</option>\n                      {/* <option value=\"Oaxaca\">Oaxaca</option>\n                      <option value=\"Puebla\">Puebla</option> */}\n                      <option value=\"QT\">Querétaro</option>\n                      {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                      <option value=\"SL\">San Luis Potosí</option>\n                      {/* <option value=\"Sinaloa\">Sinaloa</option>\n                      <option value=\"Sonora\">Sonora</option>\n                      <option value=\"Tabasco\">Tabasco</option> */}\n                      <option value=\"TM\">Tamaulipas</option>\n                      {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                      <option value=\"VE\">Veracruz</option>\n                      {/* <option value=\"Yucatán\">Yucatán</option>\n                      <option value=\"Zacatecas\">Zacatecas</option> */}\n                      </select>\n                  </div>\n                  \n                  </div>\n              </div>\n              \n            </div>\n\n            \n            {/* THIRD AND FOURTH SECTION */}\n            <div className=\"third-forth-sections\">  \n              {/* PACKAGE SECTION */}\n              <div className=\"seccion-informacion-paquete\">\n              <h2 className=\"subheading-form-create-guide\">3. INFORMACIÓN DEL PAQUETE</h2>\n                  <div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Largo (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageLenght} \n                      onChange={(event) => {\n                        setPackageLenght(event.target.value)\n                      }} \n                      type=\"text\" placeholder=\"Largo (cm)\" />\n                      {Object.keys(packageLenghtError).map((key) => {return <div>{packageLenghtError[key]}</div>})}\n                  </div>\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Ancho (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageWidth} \n                      onChange={(event) => {\n                        setPackageWidth(event.target.value)\n                      }} \n                      type=\"email\" placeholder=\"Ancho (cm)\" />\n                      {Object.keys(packageWidthError).map((key) => {return <div>{packageWidthError[key]}</div>})}\n                  </div>                \n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Alto (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageHeight} \n                      onChange={(event) => {\n                        setPackageHeight(event.target.value)\n                      }} \n                      type=\"text\" placeholder=\"Alto (cm)\" />\n                      {Object.keys(packageHeightError).map((key) => {return <div>{packageHeightError[key]}</div>})}\n                  </div>\n                  \n                      {/* <h4>Peso del paquete que envías</h4> */}\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Peso del paquete (kg)</label>\n                      <input className=\"input-create-guide-form\" value={packageWeight} \n                      onChange={(event) => {\n                        setPackageWeight(event.target.value)\n                      }}\n                      type=\"text\" placeholder=\"Peso del paquete en (kg)\" />\n                      {Object.keys(packageWeightError).map((key) => {return <div>{packageWeightError[key]}</div>})}\n                  </div>\n                  \n                      {/* <h4>¿Que envías?</h4> */}\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Contenido del paquete (Descripción corta)</label>\n                      <input className=\"input-create-guide-form\" value={packageDescription} \n                      onChange={(event) => {\n                        setPackageDescription(event.target.value)}\n                        } \n                        type=\"text\" placeholder=\"Contenido del paquete (Descripción corta)\" />\n                        {Object.keys(packageDescriptionError).map((key) => {return <div>{packageDescriptionError[key]}</div>})}\n                  </div>\n                \n                <div className=\"buttons-wrapper-row\">\n                  <Link to=\"/userdashboard\">\n                    <button id=\"blue\" className=\"btn-create-guide-form\" >Regresar</button>\n                  </Link>\n                      <button className=\"btn-create-guide-form\" onClick={(event) => {handleSubmit(event)}}>Cotizar</button>\n                </div>\n                  \n              </div>\n              </div>\n              \n              <div className=\"payment-main-wrapper\">\n                <div className=\"payment-section\">\n                <h1 className=\"subheading-form-create-guide\"> 4. SELECCIONA TU TIPO DE ENVIO:</h1>\n                <div className=\"table-holder\">{ loadingQuoteData ? <div className=\"cotizar-paragraph\">Llena todo los campos y da click en Cotizar!</div>:\n                  <table>\n                    <tr className=\"table-row-heading\">\n                      <th></th>\n                      <th>Servicio</th>\n                      <th>Tiempo Entrega</th>\n                      <th>Precio</th>\n                    </tr>\n                    {\n                      services.map((servicio, i) => {\n                        return (\n                        <tr className=\"table-data-row\" onClick={() => handleSelectGuide(servicio)}>\n                          <td>{i+1}</td>\n                          <td>{servicio.type.toUpperCase()}</td>\n                          <td>{servicio.estimateDelivery}</td>\n                          <td>${servicio.totalPrice}.99</td>\n                        </tr>)\n                      })}\n                  \n                  </table>  \n                  }  \n                \n                </div>\n                <div className=\"wrapper-guide-cost\">\n                      <div>\n                        \n                      </div>\n\n                      <label className=\"heading-guide-cost\">Costo de tu Guia</label>\n                      <br></br>\n                      <label className=\"price-guide-cost\" >{guideCost}.00</label>\n                </div>\n                <h1 className=\"subheading-form-create-guide\"> 5. METODO DE PAGO:</h1>\n                  <MetodoDePagoSelectorDiv guideCost={guideCost} setPaymentMethod={setPaymentMethod} />\n                  {/* <div className=\"payment-method-section-wrapper\">\n                    <label className=\"payment-method-subheading\">Selecciona tu forma de pago</label>\n                    <select className=\"payment-method-selector\" onChange ={(event) => {\n                      setPaymentMethod(event.target.value)\n                      console.log(event.target.value);\n                      }}>\n                      <option value={null}>Escoje Uno</option>\n                      <option value=\"tarjeta\">Tarjeta de Credito</option>\n                      <option value=\"puntos\">Pagar con Puntos</option>\n                    </select>\n                  </div> */}\n                  \n                  <PaymentDiv\n                  username={username} \n                  isPointsEnough={isPointsEnough} \n                  points={points}\n                  payWithPoints={payWithPoints} \n                  paymentMethod={paymentMethod} \n                  guideCost={guideCost} \n                  createGuide={createGuide}/>\n                  {/* <CheckoutStripe guideCost={guideCost} createGuide={createGuide}/> */}\n                  {success ? \n                  <div>\n                    <h1>Tu guía fue creada exitosamente.</h1>\n                    \n                    <a href={hrefFile} target=\"_blank\" rel=\"noreferrer\" >\n                      <button className=\"btn-create-guide-form\">Imprimir</button>\n                    </a>\n\n                  </div> : <div></div>}\n                </div>\n              </div>\n            </div>\n            \n            {/* <div className=\"buttons-wrapper\">\n              <button className=\"btn-contact-form\" onClick={(event) => {handleSubmit(event)}}>Siguiente</button>\n            </div> */}\n            \n        </div>\n        <Footer/>\n      </>\n    )\n}\n\nconst PaymentDiv = (props) => {\n  const { paymentMethod,\n    username, \n    guideCost, \n    createGuide, \n    points, \n    isPointsEnough, \n    payWithPoints } = props;\n\n  if (paymentMethod === \"\") {\n    return <div>Nothing</div>\n  } \n  else if (paymentMethod === \"tarjeta\") {\n    return (\n    <div>\n      <h4 className=\"ingresa-tarjeta-datos-subheading\">Ingresa tu tarjeta de credito y da click.</h4>\n      <p className=\"ingresa-tarjeta-descripcion\">(Numéro de tarjeta, fecha de expiración, codigo, codigo postal)</p>\n      <CheckoutStripe guideCost={guideCost} createGuide={createGuide}/>\n    </div>\n  )\n\n  } \n  else if (paymentMethod === \"puntos\") {\n    return (\n    <div className=\"main-wrapper-puntos\">\n          \n          <div className=\"div-saldos-holder\">\n\n            <div>\n              <h1>Saldo Actual:</h1>\n              <h1> $ {points}.00</h1>\n            </div>\n            <div>\n              <h1>Costo de Guida:</h1>\n              <h1>$ {guideCost}.00</h1>\n            </div>\n            <div>\n              <h1>Saldo Nuevo:</h1>\n              <h1>$ {points - guideCost}.00</h1>\n            </div>\n          \n          </div>\n\n          <div className=\"buttons-holder\">\n            \n            \n            {isPointsEnough ? \n            <div>\n              <Link to=\"/recargarsaldo\">\n                <button>Recargar Saldo</button>\n              </Link>\n              <button onClick={() => payWithPoints(username,guideCost)}>Pagar</button>\n            </div>\n            \n             : \n             <div>\n              <div>No cuentas con suficientes puntos. Favor de seleccionar otro metodo de pago o recargar puntos.</div>\n              <Link to=\"/recargarsaldo\">\n                <button>Recargar Saldo</button>\n              </Link>\n            </div>\n              }\n            \n          </div>\n          \n    </div>\n    )\n  } \n  else return <></>\n}\n\nconst MetodoDePagoSelectorDiv = (props) => {\n  \n  const { guideCost, setPaymentMethod } = props\n  \n  if (guideCost > 0) {\n    return (\n      <div className=\"payment-method-section-wrapper\">\n      <label className=\"payment-method-subheading\">Selecciona tu forma de pago</label>\n      <select className=\"payment-method-selector\" onChange ={(event) => {\n        setPaymentMethod(event.target.value)\n        console.log(event.target.value);\n        }}>\n        <option value={null}>Escoje Uno</option>\n        <option value=\"tarjeta\">Tarjeta de Credito</option>\n        <option value=\"puntos\">Pagar con Puntos</option>\n      </select>\n    </div>\n    ) }\n    else {\n      return <div>Favor de cotizar una guida para continuar</div>\n    }\n}\n\n\nexport default CreateGuidePagina;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ForgotPasswordPagina.js",["220"],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ForgotPasswordPagina.scss\";\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst ForgotPasswordScreen = () => {\n  \n  const history = useHistory()\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n\n  const forgotPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n\n    let formData = new FormData();\n    formData.append('email', email); \n\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API_URL}/user/password/recovery`,\n        formData,\n        config\n      );\n\n      setSuccess(data.data);\n      console.log(data)\n      if (data.status == \"SUCCESS\") {\n        alert(\"Un email de recuperacion ha sido envidado a tu correo.\")\n        history.push(\"/\")\n      }\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail(\"\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar/>\n      <div className=\"forgotpassword-screen\">\n        <form\n          onSubmit={forgotPasswordHandler}\n          className=\"forgotpassword-screen__form\"\n        >\n          <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\n          {error && <span className=\"error-message\">{error}</span>}\n          {success && <span className=\"success-message\">{success}</span>}\n          <div className=\"form-group\">\n            <p className=\"forgotpassword-screen__subtext\">\n              Please enter the email address you register your account with.<br/> We\n              will send you reset password confirmation to this email\n            </p>\n            <label className=\"form-label\" htmlFor=\"email\">Email:</label>\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              required\n              id=\"email\"\n              placeholder=\"Email address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button id=\"btn\" type=\"submit\" className=\"btn-contact-form\">\n            Send\n          </button>\n        </form>\n      </div>\n      <Footer/>\n    </>\n  );\n};\n\nexport default ForgotPasswordScreen;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/UserDashboard.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import { useState, useEffect } from \"react\";\nimport { useHistory, Link } from 'react-router-dom'\nimport axios from \"axios\";\nimport \"./UserDashboard.scss\"\nimport Navbar from '../components/Navbar/Navbar'\nimport GuideTable from '../components/UserDashboard/GuideTable'\nimport Footer from '../components/Footer/Footer'\nimport SubNavbar from '../components/Navbar/SubNavbar'\nimport AccountInfo from '../components/Others/AccountInfo'\n\nconst UserDashboard = () => {   \n  //Dashboard Moving\n  const [selectedScreen, setSelectedScreen] = useState(\"dashboard\")\n\n\n  const [companyName, setCompanyName] = useState('')\n  const [loggedInUser, setLoggedInUser] = useState('')\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState('')\n  const [userGuides, setUserGuides] = useState([])\n  const [error, setError] = useState(\"\");\n  const [privateData, setPrivateData] = useState(\"\");\n  const history = useHistory();\n  const [userPoints, setUserPoints] = useState(0)\n\n  //States Dashboard\n  const [userSaldo, setUserSaldo] = useState()\n  const [totalRecargas, setTotalRecargas] = useState()\n  const [pesoPromedioGuias, setPesoPromedioGuias] = useState()\n  const [averageCostGuides, setAverageCostGuides] = useState()\n  const [averageCost, setAverageCost] = useState()\n\n  //States for quoate\n  const [testPackageLength, setTestPackageLength] = useState()\n  const [testPackageWidth, setTestPackageWidth] = useState()\n  const [testPackageHeight, setTestPackageHeight] = useState()\n  const [testPackageWeight, setTestPackageWeight] = useState()\n  const [testReceiverPostalCode, setTestReceiverPostalCode] = useState()\n  const [testSenderPostalCode, setTestSenderPostalCode] = useState()\n\n  //Services available\n  const [testServices, setTestServices] = useState()\n  const [testQuoteError, setTestQuoteError] = useState()\n  const [hasQuoteError, setHasQuoteError] = useState(false)\n  const [loadingServicios, setLoadingServicios] = useState(true)\n\n  //Quoate API Call Function\n  const calculateGuide = async () => {\n    const url = `${process.env.REACT_APP_API_URL}/rate`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'},\n      body: JSON.stringify({\n          \"clientDetail\": {\n             \"accountName\": localStorage.getItem('email'),\n             \"apiKey\": localStorage.getItem('api_key')\n           },\n           \"origin\": {\n             \"name\": \"testSender\",\n             \"company\": \"Default Value\",\n             \"email\": \"test@gmail.com\",\n             \"phone\": \"55555555\",\n             \"country\": \"MX\",\n             \"postalCode\": testSenderPostalCode\n           },\n           \"destination\": {\n             \"name\": \"testReceiber\",\n             \"company\": \"Default Value\",\n             \"email\": \"test2@gmail.com\",\n             \"phone\": \"88888888\",\n             \"country\": \"MX\",\n             \"postalCode\": testReceiverPostalCode\n           },\n           \"package\": {\n             \"content\": \"ropa\",\n             \"type\": 1,\n             \"dimensions\": {\n               \"length\": parseInt(testPackageLength),\n               \"width\": parseInt(testPackageWidth),\n               \"height\": parseInt(testPackageHeight)\n             },\n             \"weight\": parseInt(testPackageWeight)\n           }\n      })\n    });\n    const data = await response.json();\n    console.log(data)\n    if (data.status === \"SUCCESS\") {\n      setTestServices(data.data.services)\n      setLoadingServicios(false)\n      setHasQuoteError(false)\n      \n    } else if (data.status === \"ERROR\") {\n      console.log(data.description)\n      setTestQuoteError(data.description)\n      setHasQuoteError(true)\n      setLoadingServicios(false)\n    }\n    \n  }\n\n  const handleSelectedComponent = (event) => {\n    console.log(event.target)\n  }\n\n\n  //Handle click on quote button\n  const handleQuote = async (event) => {\n    event.preventDefault()\n    await calculateGuide()\n    console.log(testServices)\n  }\n\n  const getAverageCost = async (userGuides) => {\n    let totalGuideCostSum = 0;\n    console.log(userGuides.length)\n    let counterGuides = await userGuides.length\n    console.log(counterGuides)\n    userGuides.forEach((guide) => {\n      console.log(avgCost)\n      avgCost = totalGuideCostSum + parseInt(guide.guideCost)\n    })\n    let avgCost = totalGuideCostSum / userGuides.length\n    console.log(avgCost)\n  }\n\n\n\n  //Get Fetch Guides Function\n  const loadUserGuides = async (currentUser) => {\n    console.log('currentUser', currentUser)\n    await fetch(`${process.env.REACT_APP_API_URL}/user/guides`, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(response => response.json())\n    .then(json =>  {\n      console.log('Success:', json);\n      console.log(json.data)\n      setUserGuides(json.data.reverse())\n    })\n    .then(() => getAverageCost(userGuides))\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  };\n\n  //Fetch Private Data\n  const fetchPrivateData = async () => {\n    console.log(\"GUACAMOLE\")\n    console.log(localStorage.getItem(\"access_token\"))\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    };\n\n    try {\n      \n      //AQUI VAN LAS RUTAS DE LAS GUIAS\n      const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/user/info`, {} ,config);\n      console.log(data)\n\n    } catch (error) {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"username\");\n      setError(\"You are not authorized please login\");\n    }\n\n  };\n\n  useEffect(() => {\n    fetchPrivateData();\n    let currentUser = \"jaimito\"\n    let currentUserEmail = localStorage.getItem('email')\n    //requestGetPoints(currentUserEmail)\n    setLoggedInUser(currentUser)\n    setLoggedInUserEmail(currentUserEmail)\n    //loadUserGuides(currentUserEmail);\n  }, []);\n\n  const logoutHandler = () => {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('email');\n      localStorage.removeItem('username');\n      \n      history.push('/signin')\n  }\n\n  return error ? (\n    <>\n      <Navbar/>\n      <div className=\"wrapper-unauthorized-route\">\n        <h1 className=\"unautohorized-heading\">Esta es una ruta privada. Favor de iniciar sesión.</h1>\n        <Link className=\"link-sign-route\" to=\"/signin\">Da click aqui!</Link>\n      </div>\n      {/* <span className=\"error-message\">{error}</span> */}\n      <Footer/>\n    </>\n  ) : (\n    <>  \n        <Navbar/>\n            {/* <div className=\"sub-navbar\">\n              <Link className=\"link-subnavbar\">Inicio</Link>\n              <Link className=\"link-subnavbar\">Cotizar</Link>\n              <Link className=\"link-subnavbar\">Guias</Link>\n              <Link className=\"link-subnavbar\" to=\"/recargarsaldo\">Recarga Saldo</Link>\n              <Link onClick={logoutHandler} className=\"link-subnavbar\">Logout</Link>\n            </div>\n\n            <SubNavbar handleSelectedComponent={handleSelectedComponent} logoutHandler={logoutHandler}/> */}\n\n            <div className=\"main-wrapper-userdashboard\">\n                <AccountInfo handleSelectedComponent={handleSelectedComponent} companyName={companyName} loggedInUser={loggedInUser} loggedInUserEmail={loggedInUserEmail} />\n                \n                {/* <div className=\"account-info-wrapper\">\n                  <h2 className=\"heading-userdashboards\">Dashboard de Enviós</h2>\n                  <div className=\"account-name\">Cuenta: {loggedInUser}</div>\n                  <div className=\"account-name\">Email: {loggedInUserEmail}</div>\n                </div> */}\n\n              \n              <div className=\"main-cotizador-servicios div\">\n                {/* Cotizador */}\n                <div className=\"column-cotizador\">\n                <h1 className=\"cotizador-rapido-main-header\">Cotizador</h1>\n                      <h1 className=\"información-paquete-subheading\">Información Paquete</h1>\n                      \n                      <div className=\"div-main-cotizador-rapido\">  \n                        <div className=\"column-cotizador-rapido\">\n                          <label className=\"label-paquete-info\">Largo del paquete (cm)</label>\n                          <input placeholder=\"Largo (cm)\"\n                          onChange={(event) => setTestPackageLength(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Ancho del paquete (cm)</label>\n                          <input placeholder=\"Ancho (cm)\"\n                          onChange={(event) => setTestPackageWidth(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Alto del paquete (cm)</label>\n                          <input placeholder=\"Alto (cm)\"\n                          onChange={(event) => setTestPackageHeight(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Peso del paquete (kg)</label>\n                          <input placeholder=\"Peso (cm)\"\n                          onChange={(event) => setTestPackageWeight(event.target.value)}\n                          />\n\n                        </div>\n                        \n                        <div className=\"column-cotizador-rapido\">\n                        <label className=\"label-paquete-info\">¿Desde dónde envias?</label>\n                          <input placeholder=\"Codigo Postal\"\n                          onChange={(event) => setTestSenderPostalCode(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">¿Hacia dónde envias?</label>\n                          <input placeholder=\"Codigo Postal\"\n                          onChange={(event) => setTestReceiverPostalCode(event.target.value)}\n                          />\n                        </div>\n                        \n                    </div>\n                      <div className=\"cotizador-row-button\">\n                        <button class=\"button-cotizar-servicios\"onClick={(event) => handleQuote(event)}>Cotizar</button>\n                      </div>\n                </div>\n\n\n                {/* Empieza aqui */}\n                <div className=\"column-cotizador\">\n                      <h1 className=\"servicios-subheading-cotizador\">Servicios ofrecidos:</h1>\n                      {loadingServicios ? <h1 className=\"servicios-paragraph-cotizador\">Utiliza nuestro cotizador rapido para ver los servicios de entrega que manejamos.</h1> : \n                        hasQuoteError ? <div>{testQuoteError}</div> : \n                      \n      \n                      testServices.map((servicio) => {\n                        return (\n                          <div className=\"row-servicio-quota\">\n                            <table>\n                              <tr>\n                                <th>Codigo de Servico:</th>\n                                <th>Tipo de Servicio:</th>\n                                <th>Tiempo de Entrega:</th>\n                                <th>Precio:</th>\n                              </tr>\n                              <tr>\n                                <td>{servicio.name}</td>\n                                <td>{servicio.type}</td>\n                                <td>{servicio.estimateDelivery}</td>\n                                <td>${servicio.totalPrice}.99</td>\n                              </tr>\n                            </table>\n                          </div>\n                        )\n                      })}\n                      \n                </div>\n                {/* Termina Aqui */}\n\n              </div>\n\n              <div className=\"menu-opciones-saldo\">\n                \n                <div className=\"card-row-wrapper\">\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Saldo disponible</label>\n                    <h1 className=\"featured-number\">$ {userPoints}.00</h1>\n                    <Link className=\"recargar-saldo-link\" to=\"/recargarsaldo\">\n                      Recagar Saldo {\">\"}\n                    </Link>\n                  </div>\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Costo Promedio</label>\n                    <h1 className=\"featured-number\">$ 0.00</h1>\n                    <Link className=\"recargar-saldo-link-trans\" >Recagar Saldo {\">\"}</Link>\n                  </div>\n                </div>\n\n                <div className=\"card-row-wrapper\">\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Total Recargas</label>\n                    <h1 className=\"featured-number\">$ {totalRecargas}.00</h1>\n                    <Link className=\"recargar-saldo-link\" to=\"/recargarsaldo\">Recagar Saldo {\">\"}</Link>\n                  </div>\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Peso Promedio</label>\n                    <h1 className=\"featured-number\">0.00 Kg</h1>\n                    <Link className=\"recargar-saldo-link-trans\" >Recagar Saldo {\">\"}</Link>\n                  </div>\n                </div>\n\n                <div className=\"card-row-wrapper\">\n                  <Link to=\"/recargarsaldo\">\n                    <button className=\"btn-contact-form \">Recargar Saldo</button>        \n                  </Link>\n                  <Link to=\"/createguide\">\n                    <button id=\"blue\" className=\"btn-contact-form \">Crear Guia</button>\n                  </Link>\n                  \n                    <button onClick={logoutHandler} className=\"btn-contact-form \">Logout</button>\n                  \n                </div>\n\n              </div>\n\n              <h1 className=\"tabla-de-guias-heading\">Tabla de Guias</h1>  \n              <GuideTable userGuides={userGuides}/>\n              \n              <div className=\"div-row-wrapper\">\n                <Link to=\"/createguide\">\n                  <button id=\"blue\" className=\"btn-contact-form\">Crear Guida</button>\n                </Link>\n                <button className=\"btn-contact-form \" onClick={logoutHandler}>Logout</button>\n              </div>\n            </div>\n          <Footer/>\n        \n    </>\n  );\n};\n\nexport default UserDashboard;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ResetPasswordPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewCotizar.js",["238"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewCreateGuide.js",["239","240","241","242"],"import React, { useState, useEffect } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport MidScreenWrapper from '../styled_components/mid_screen_wrapper'\nimport axios from 'axios'\nimport GuideCreator from './GuideCreator'\nimport styled from 'styled-components'\n\nconst NewCreateGuide = () => {\n    \n    useEffect(() => {\n        getUserInfo()\n    }, []);\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(true);\n    const [user, setUser] = useState(true);\n\n    const getUserInfo = async () => {\n        console.log(\"NewGuias, fetching private data\")\n        const config = {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n          },\n        };\n    \n        try {\n          //AQUI VAN LAS RUTAS DE LAS GUIAS\n          const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/user/info`, {} ,config);\n          \n          setUser(data.user)\n\n        } catch (error) {\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"email\");\n          localStorage.removeItem(\"username\");\n          setError(true)\n        }\n      };\n\n    return (\n    <PageWrapper>\n        <Navbar/>\n        <CreateGuideScreenWrapper>\n          { loading == false ?\n            <>\n            <Sidebar setError={setError}/>\n            <GuideCreator user={user}/>\n            </> : <></> \n          }\n        </CreateGuideScreenWrapper>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\nconst CreateGuideScreenWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height: 1300px;\n`\n\nexport default NewCreateGuide;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewDashboard.js",["243","244"],"import React from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport MidScreenWrapper from '../styled_components/mid_screen_wrapper'\nimport { useState, useEffect } from 'react'\nimport DashboardMonitor from './DashboardMonitor'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport GuidesChart from './GuidesChart'\n\nconst NewDashboard = () => {\n    \n    const history = useHistory()\n    const [error, setError] = useState(true);\n    const [userPoints, setUserPoints] = useState()\n    const [totalRecargas, setTotalRecargas] = useState()\n\n    const [loading, setLoading] = useState(true)\n    const [user, setUser] = useState()\n\n\n  useEffect(() => {\n    fetchPrivateData()\n    console.log(user)\n    return () => {\n      \n    };\n  }, []);\n\n  const fetchPrivateData = async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    };\n\n    try {\n      //AQUI VAN LAS RUTAS DE LAS GUIAS\n      const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/user/info`, {} ,config);\n      setUser(data.user)\n      setUserPoints(data.user.balance)\n      setLoading(true)\n      setError(false)\n    } catch (error) {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"username\");\n      setError(true)\n      history.push(\"/signin\")\n    }\n  };\n\n    \n    return (\n    <PageWrapper>\n        <Navbar/>\n        <MidScreenWrapper>\n            <Sidebar setLoading={setLoading} setError={setError}/>\n            {\n                error && loading ? \n                <h1>Error</h1> \n                :\n                <DashboardWrapper>\n                <DashboardMonitor\n                    user={user} \n                    userPoints={userPoints}\n                    totalRecargas={totalRecargas}\n                />\n                <GuidesChart/>\n                </DashboardWrapper>\n            }\n            \n        </MidScreenWrapper>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\nexport default NewDashboard;\n\nconst DashboardWrapper = styled.div`\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 100%;\n    width: 90%;\n`","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/RastreoPagina.js",["245","246"]," import React,  { useState, useEffect} from 'react'\nimport { useParams ,useHistory} from 'react-router'\nimport Navbar from '../components/Navbar/Navbar'\nimport './RastreoPagina.scss';\nimport styled from 'styled-components'\nimport IconoRastreo from '../assets/Inicio/Icono_rastreo-43.svg'\nimport Footer from '../components/Footer/Footer'\nimport ShippingInformation from '../components/Tracking/ShippingInformation';\nimport FloatingWhatsApp from '../components/Others/WhatsappBtn';\nimport { Helmet } from 'react-helmet'\n\nconst RasteroPagina = () => {\n  \n  const history = useHistory()\n\n  const [needsRerender, setNeedsRerender] = useState(true)\n  const [loading, setLoading] = useState(true)\n  const [guideInformation, setGuideInformation] = useState()\n  const [hasError, setHasError] = useState(false)\n  const [shipmentHistory, setShipmentHistory] = useState()\n  const [newTrackedGuide, setNewTrackedGuide] = useState({inputValue: \"\"})\n  const [error, setError] = useState()\n  const params = useParams()\n  const guideNumber = params.guide\n  console.log(guideNumber, 'guacamole')\n  \n  const handleChange = (event) => {\n    let value = event.target.value.replace(/\\D/g, '');\n    setNewTrackedGuide({inputValue: value})\n  }\n\n  const handleClick = () => {\n    if (newTrackedGuide.inputValue.length > 0) {\n      history.push(`/rastreo/${newTrackedGuide.inputValue}`)\n      setNeedsRerender(!needsRerender)\n    } else {\n      setError(\"Favor de ingresar un numéro de guia\")\n    }\n  }\n \n  const getGuideInfo = async () => {\n    const body = {\n      \"clientDetail\": {\n        \"accountName\": localStorage.getItem(\"email\"),\n        \"apiKey\": localStorage.getItem(\"api_key\")\n      },\n      \"trackingNumbers\": [\n        guideNumber\n      ]\n    }\n\n    const url = `${process.env.REACT_APP_API_URL}/track`\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(body)\n    })\n    \n    const data = await response.json()\n    console.log(data);\n    try {\n      setGuideInformation(data)\n      setShipmentHistory(data.data.shipments[0].shipmentHistory)\n    }\n    catch {      \n      console.log(data.description === \"No shipments found\")\n      \n      if (!guideNumber === true) {\n        setError('Por favor ingresa tu codigo de rastreo.')\n        setHasError(true)\n        \n      } \n      \n      else if (data.description === \"No shipments found\") {\n        console.log('this applies 1');\n        setError('Tu numéro de rastreo no fue encontrado. Favor de ingresarlo nuevamente.')\n        setHasError(true)\n      } \n      \n      else {\n        console.log('this applies 2');\n        // setError('Tu numéro de rastreo no fue encontrado. Favor de ingresarlo nuevamente.')\n        setHasError(true)\n      }\n      \n    }\n    setLoading(false)\n  }\n\n\n  useEffect(() => {\n    setLoading(true)\n    setHasError(false)\n    setError('')\n    getGuideInfo()  \n  }, [needsRerender])\n\n  \n  return (\n    <>\n      <Helmet>\n        <title>Quiken Rastreo</title>\n        <meta \n          name=\"description\"\n          content=\"Servicios de paqueteria y fulfilment en México, rastreo de guias\"\n        />\n        <meta\n          name=\"keywords\" content=\"Envios, Paqueteria, ecommerce, delivery\"\n        />\n      </Helmet>\n      <Navbar/>\n      <FloatingWhatsApp/>\n      <div className=\"request-body-wrapper\">\n\n        {loading ? \n        <div>...Loading</div> :\n        <div>\n          <div className=\"div-wrapper-rastero\">\n            <h1 className=\"request-header\">Rastreo y Seguimiento</h1>\n            <div>\n              <div className=\"div-tracking\">\n                <p className=\"rastreo-blue-letters\">Ingresa tu número de rastreo:</p>\n                <div className=\"rastreo-input-div\">\n                  <input id='input-rastreo' \n                  required\n                  className=\"tracking-number-input\"\n                  value={newTrackedGuide.inputValue} \n                  onChange={handleChange} \n                  placeholder=\"Código de rastreo\"></input>\n                  {/* <Link to={`/rastreo/${newTrackedGuide}`}> */}\n                    <PlaceHolderLookUp onClick={handleClick}>\n                      <img className=\"icono-rastreo\" src={IconoRastreo} alt=\"icono-rastreo\" ></img>\n                    </PlaceHolderLookUp>\n                  {/* </Link>   */}\n                \n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div>\n            {hasError ? \n            \n            <div className=\"main-wrapper-table-title\">\n              <a href='#input-rastreo'>\n                {\n                hasError === false ? \n                \n                <h1 className=\"estado-de-envio-heading-ingresa-guia\">\n                  Favor de ingresar un código de rastreo\n                </h1> : \n                \n                <h1 className=\"estado-de-envio-heading-ingresa-guia\">\n                  {error}\n                </h1>\n                }\n              </a>\n              \n              <div className=\"wrapper-table-titulo\">\n                <div>\n                  \n                  <h1 className=\"historial-pedido-heading\">Historial de Pedido</h1>\n                  \n                  <table className=\"tracking-table\">\n                    <thead>\n                      <tr>\n                        <th className=\"table-header-tracking\">Estatus</th>\n                        <th className=\"table-header-tracking\">Descripción</th>\n                        <th className=\"table-header-tracking\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"tbody-tracking-table\">\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                      \n                    </tbody>\n                  </table> \n                \n                </div>\n            </div>\n            \n            </div> : \n            \n            <div>\n              <ShippingInformation guideNumber={guideNumber} shipmentHistory={shipmentHistory}/>\n            </div> }\n              \n          </div>\n          \n          \n          {/* <>\n          <div>\n            <h1 className=\"estado-de-envio-heading\">Estado de envío</h1>\n            <h1 className=\"estado-de-pedido\">Status: <span>{guideNumber}</span> </h1>\n            <h1 className=\"estado-de-pedido\">Código de rastreo:  <span>{guideNumber}</span></h1>\n          </div>  \n\n          <div>\n            <h1 className=\"historial-pedido-heading\">Historial de Pedido</h1>\n            \n            <table className=\"tracking-table\">\n              <thead>\n                <tr>\n                  <th className=\"table-header-tracking\">Estatus</th>\n                  <th className=\"table-header-tracking\">Descripción</th>\n                  <th className=\"table-header-tracking\">Fecha</th>\n                </tr>\n              </thead>\n              <tbody className=\"tbody-tracking-table\">\n                {shipmentHistory.map((step) => {\n                  return (\n                    <tr>\n                    <td className=\"table-data-tracking\">{step.status}</td>\n                    <td className=\"table-data-tracking\">{step.description}</td>\n                    <td className=\"table-data-tracking\">{step.date}</td>\n                  </tr>)\n                })}\n              </tbody>\n            </table> \n          </div>\n          </> */}\n\n        </div>\n        \n      }\n      <Footer/>\n\n      </div>\n\n    </>  \n  )\n}\n\nconst PlaceHolderLookUp = styled.div`\nheight: 32px;\nwidth: 30px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center ;\nbackground-color: red;\nbackground-image: url(\"./\");\nborder-radius: 0px 5px 5px 0px;\n/* border: solid 1px black; */\n@media (max-width: 768px) {\n    height: 30px;\n    width: 50px;\n    align-self: center;\n    justify-self: center;\n    \n  } \n`\n\nexport default RasteroPagina;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewRecargar.js",["247","248","249","250"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/SignInPagina.js",["251","252"],"import React, { useState, useEffect} from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport './SignInPagina.scss'\nimport { Link, useHistory } from 'react-router-dom'\nimport axios from 'axios'\n\nconst LoginPagina= (props) => {\n  let history = useHistory();\n  \n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [ goToDashboard, setGoToDashboard] = useState(false)\n\n  useEffect(() => {\n    userSignedIn()\n    if (goToDashboard) history.push(\"/newdashboard\") \n  },[]);\n\n  const userSignedIn = async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    };\n\n    try {\n      //AQUI VAN LAS RUTAS DE LAS GUIAS\n      const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/user/info`, {} ,config);\n      setError(false)\n      setGoToDashboard(true)\n    } catch (error) {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"username\");\n      setError(true)\n    }\n  }\n\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    \n    let formData = new FormData();\n    formData.append('email', email);   //append the values with key, value pair\n    formData.append('password', password);\n\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API_URL}/user/login`,\n        formData,\n        config\n      );\n      \n      localStorage.setItem(\"access_token\", data.data.access_token);\n      console.log(data.data.access_token)\n      localStorage.setItem(\"api_key\", data.data.user.api_key);\n      localStorage.setItem(\"email\", data.data.user.email);\n      localStorage.setItem(\"username\", data.data.user.username);\n      console.log(data.data.user.api_key)\n\n      history.push(\"/newdashboard\");\n    } catch (error) {\n      console.log(error)\n\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"page-content-wrapper\">\n        <div className=\"signup-main-wrapper\">\n          <form className=\"the-form\" onSubmit={loginHandler}>\n            <h3 className=\"main-heading-signup\">Accesa a tu cuenta</h3>\n            <h2 className=\"main-subheading-signup\">Y disfruta de los mejores precios envíos</h2>\n            <Link className=\"forgot-passwordlink\" to=\"/forgotpassword\">¿Olvidaste tu contraseña?</Link>\n            {error && <span className=\"login-screen-title\" >{error}</span>}\n            \n            <label className=\"form-label\">Email</label>\n            <input className=\"form-input\" \n                  required \n                  id=\"name\" \n                  value={email} \n                  onChange={(e) => setEmail(e.target.value)} \n                  type=\"text\" \n                  placeholder=\"Ingresa tu email\"/>\n\n            <label className=\"form-label\">Contraseña</label>\n            <input className=\"form-input\" \n                  required \n                  id=\"password\" \n                  value={password} \n                  onChange={(e) => setPassword(e.target.value)} \n                  type=\"password\" \n                  placeholder=\"Ingresa tu contaseña\"/>\n            \n            <button type=\"submit\" className=\"btn-register\">Enviar</button>\n          \n          <div className=\"wrapper-sign-in-link\">\n            <p className=\"ya-tienes-cuenta\">Ya tienes una cuenta?</p>\n            <Link className=\"da-click-aqui\" to=\"/signin\">¡Da click aqui!</Link>\n          </div>\n          </form>\n                  \n        </div>\n      </div>\n    <Footer/>\n\n    </>\n  )\n}\n\nexport default LoginPagina;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewGuias.js",["253","254","255"],"import React, { useState } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport MidScreenWrapper from '../styled_components/mid_screen_wrapper'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport GuidesTable from './GuidesTable'\n\nconst NewGuias = () => {\n  \n    const [error, setError] = useState(true);\n    const [loading, setLoading] = useState(true);\n\n    return (\n    <PageWrapper>\n        <Navbar/>\n        <MidScreenWrapper>\n            <Sidebar setLoading={setLoading} setError={setError}/>\n            <WrapperTableGuias>\n                <h1 className=\"cotizador-rapido-main-header\">Guias Generadas</h1>\n                <GuidesTable/>\n            </WrapperTableGuias>\n        </MidScreenWrapper>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\n\nconst WrapperTableGuias = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding-top: 50px;\n    box-sizing: border-box;\n    justify-content: flex-start;\n`\n\nexport default NewGuias;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/routing/PrivateRoute.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/WhatsappBtn.js",["256"],"import React from 'react'\nimport  FloatingWhatsApp from 'react-floating-whatsapp'\nimport 'react-floating-whatsapp/dist/index.css' \nimport './WhatsappBtn.scss'\n\nconst WhatsAppBtn = () => {\n    return (\n        <div>\n            <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"></link>\n            <a\n                href=\"https://wa.me/528116618597\"\n                className=\"whatsapp_float\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <i className=\"fa fa-whatsapp whatsapp-icon\"></i>\n            </a>\n        </div>\n    )\n}\n\nexport default WhatsAppBtn;\n","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/SubNavbar.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/Navbar.js",["257","258","259","260"],"import React, { useEffect } from 'react';\nimport BtnRegistro from './BtnRegistro';\nimport { Link } from 'react-router-dom';\nimport \"./Navbar.scss\";\nimport styled from 'styled-components'\n\nimport QuikenLogo from '../../assets/Inicio/Quiken_Logo_color-03.svg'\n\nconst Navbar = () => {\n  const [open, setOpen] = React.useState(false);\n  const node = React.useRef();\n\n  useEffect(() => {\n      var Tawk_API = Tawk_API||{},\n      Tawk_LoadStart = new Date();\n      (function(){\n      var s1=document.createElement(\"script\"),s0=document.getElementsByTagName(\"script\")[0];\n      s1.async=true;\n      s1.src='https://embed.tawk.to/5c631c1c6cb1ff3c14cc3564/default';\n      s1.charset='UTF-8';\n      s1.setAttribute('crossorigin', '*');\n      s0.parentNode.insertBefore(s1,s0);\n      })();\n      Tawk_API.onLoad = function () {\n        console.log(\"chat loaded\");\n        Tawk_API.setAttributes(\n          {\n            name: \"Test Name\",\n            email: \"email@email.com\",\n            hash: \"hash value\",\n          },\n          function (error) {}\n        );\n      };\n  }, []);\n\n  return (\n    <>\n      {/* <!--Start of Tawk.to Script--> */}\n      {/* <!--End of Tawk.to Script--> */}\n      <div className=\"navbar-main\">\n        <div className=\"navbar-logo-placeholder\">\n          <Link className=\"logo-link\" to=\"/\">\n            <img src={QuikenLogo} className=\"quiken-logo\" />\n          </Link>\n        </div>\n        \n        {/* //Desktop Menu */}\n        <div className=\"navbar-links-wrapper\">\n          <Link className=\"navbar-link\" to=\"/\">INICIO</Link>\n          <Link className=\"navbar-link\" to=\"/servicios\">SERVICIOS</Link>\n          <Link className=\"navbar-link\" to=\"/fulfillment\">FULFILLMENT</Link>\n          <Link className=\"navbar-link\" to=\"/rastreo\">RASTREO</Link>\n          <Link className=\"navbar-link\" to=\"/contacto\">CONTACTO</Link>\n          <Link className=\"navbar-link\" to=\"/signin\">\n            SIGN IN\n          </Link>\n          <Link to=\"/signup\">\n            <BtnRegistro/>\n          </Link>\n        </div>\n        {/* Mobile Menu */}\n        <Burger open={open} setOpen={setOpen}/>\n        <Menu open={open} setOpen={setOpen}/>\n        \n        \n\n      </div>\n    </>\n  );\n};\n\nconst Menu = ({ open }) => {\n  return (\n    <StyledMenu open={open}>\n          <Link className=\"navbar-link\"to=\"/\">INICIO</Link>\n          <Link className=\"navbar-link\" to=\"/servicios\">SERVICIOS</Link>\n          <Link className=\"navbar-link\" to=\"/fulfillment\">FULFILLMENT</Link>\n          <Link className=\"navbar-link\" to=\"/rastreo\">RASTREO</Link>\n          <Link className=\"navbar-link\" to=\"/contacto\">CONTACTO</Link>\n          <Link className=\"navbar-link\" to=\"/signin\">\n            SIGN IN\n          </Link>\n          <Link to=\"/signup\">\n            <BtnRegistro/>\n          </Link>\n    </StyledMenu>\n  )\n}\n\nconst StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #245188;\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(-100%)'};\n  height: 100vh;\n  text-align: left;\n  /* padding: 2rem; */\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  z-index: 30;\n\n  @media (max-width: 576px) {\n      width: 100%;\n    }\n\n  a {\n    font-size: 18px;\n    text-transform: uppercase;\n    padding: 1rem 0;\n    font-weight: bold;\n    letter-spacing: 0.5rem;\n    color: white;\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 1rem;\n      text-align: center;\n    }\n\n    &:hover {\n      color: red;\n    }\n  }\n`\n\nconst StyledBurger = styled.button`\n  /* position: absolute;\n  top: 5%;\n  left: 2rem; */\n  margin-right: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 30px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 31;\n\n  @media (min-width: 800px) {\n      display: none;\n    }\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.20rem;\n    background: ${({ open }) => open ? 'white' : '#245188'};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`\n\nconst Burger = ({ open, setOpen }) => {\n  return (\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\nexport default Navbar","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/RastreaPedido.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/ContactUs.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/BtnMail.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MilesDeGuias.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Footer/Footer.js",["261"],"import React from 'react'\nimport './Footer.scss'\nimport QuikenLogoFooter from '../../assets/Inicio/Quiken_Logo_Bco-44.svg'\nimport Facebook from '../../assets/Inicio/Iconos de redes sociales/Facebook-45.svg'\nimport Instagram from '../../assets/Inicio/Iconos de redes sociales/Instagram-47.svg'\nimport Twitter from '../../assets/Inicio/Iconos de redes sociales/Twitter-46.svg'\nimport locationIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_ubicacion-48.svg'\nimport phoneIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_Telefono-49.svg'\nimport mailIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_Correo-50.svg'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-main-wrapper\">\n            <div className=\"logo-links-wrapper\">\n                <div className=\"logo-quienes-somos-wrapper\">\n                    <img className=\"img-logo-footer\" alt=\"quiken-logo\" src={QuikenLogoFooter}></img>\n                    <h3 className=\"quienes-somos\">¿QUIENES SOMOS?</h3>\n                </div>\n                <div className=\"copy-icons-wrapper\">\n                    <p className=\"copy-quiken\">© 2021 Quiken Mx, Todos los derechos reservados.</p>\n                    <a target=\"_blank\" href=\"https://www.facebook.com/quikenmx\" rel=\"noreferrer\">\n                        <img src={Facebook} className=\"icon\" alt=\"facebook-icon\"/>\n                    </a>\n                    \n                    <a target=\"_blank\" href=\"https://www.facebook.com/quikenmx\" rel=\"noreferrer\">\n                    <img src={Twitter} className=\"icon\" alt=\"twitter-icon\"/>\n                    </a>\n                    \n                    \n                    <a target=\"_blank\" href=\"https://www.instagram.com/quikenmx/?hl=en\" rel=\"noreferrer\">\n                        <img src={Instagram} className=\"icon\" alt=\"instagram-icon\" />                    \n                    </a>\n                    \n                    \n                </div>\n            </div>\n            <div className=\"info-wrapper\">\n                <h2 className=\"contactanos-heading\">CONTÁCTANOS</h2>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={locationIcon} className=\"contact-icon\" />\n                    <p className=\"paragraph-contact\">Monte Alto No. 157, Fraccionamiento\n                    Parque 200, C.P 66368 Santa Catarina,\n                    Nuevo León, México.</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={phoneIcon} className=\"contact-icon\" alt=\"phone-icon\" />\n                    <p className=\"paragraph-contact\">(81) 1661 8597</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={mailIcon} className=\"contact-icon\" alt=\"mail-icon\" />\n                    <p className=\"paragraph-contact\">hola@quiken.mx</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/NuestrosVehiculos.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/ContactForm.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MasBeneficios.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MapInicio.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/AyudamosNegocios.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Tracking/ShippingInformation.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/styled_components/page_wrapper.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Sidebar/Sidebar.js",["262"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/styled_components/mid_screen_wrapper.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesTable.js",["263","264","265","266","267","268","269","270","271","272"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/AccountInfo.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/DashboardMonitor.js",["273","274"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/Cotizador.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuideCreator.js",["275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\n\nconst GuideCreator = ({\n  user\n  }\n) => {\n  console.log(user)\n  \n    //Username for fetching points\n  let username = localStorage.getItem('email')\n\n  //Create Guide Sucess\n  const [success, setSuccess] = useState(false)\n  \n  //Guide Data\n  const [apiGuide, setApiGuide] = useState()\n  const [hrefFile, setHrefFile] = useState(\"\")\n\n  //Payment and Selected Guide\n  // const [selectedGuide, setSelectedGuide] = useState(false)\n  const [selectedService, setSelectedService] = useState()\n  const [paymentMethod, setPaymentMethod] = useState(null)\n\n  //currentUser (HARDCODED)\n  // const [currentUser, setcurrentUser] = useState('')\n  const [guideCost, setguideCost] = useState(0)\n\n  //Types of Services\n  const [services, setServices] = useState()\n  const [loadingQuoteData, setLoadingQuoteData] = useState(true)\n\n  //User Points State\n  const [points, setPoints] = useState(100);\n  const [isPointsEnough, setIsPointsEnough] = useState(false)\n  const [needsReset, setNeedsReset] = useState(false)\n\n    //Origin STATES\n  const [fullNameSender, setFullNameSender] = useState('');\n  const [emailSender, setEmailSender] = useState('');\n  const [phoneNumberSender, setPhoneNumberSender] = useState('');\n  const [streetAndNumberSender, setStreetandNumberSender] = useState('');  \n  const [referenciasSender, setReferenciasSender] = useState('');\n  const [colonySender, setColonySender] = useState('');\n  const [postalCodeSender, setPostalCodeSender] = useState('');\n  const [citySender, setCitySender] = useState('');\n  const [mexicoStateSender, setMexicoStateSender] = useState('');\n    \n  // Origin Error\n  const [fullNameSenderError, setFullNameSenderError] = useState('');\n  const [emailSenderError, setEmailSenderError] = useState('');\n  const [phoneNumberSenderError, setPhoneNumberSenderError] = useState('');\n  const [streetAndNumberSenderError, setStreetandNumberSenderError] = useState('');\n  const [colonySenderError, setColonySenderError] = useState('');\n  const [postalCodeSenderError, setPostalCodeSenderError] = useState('');\n  const [citySenderError, setCitySenderError] = useState('');\n  const [errorQuote, setErrorQuote] = useState(\"\")\n\n    // \"\" STATES\n  const [fullNameReceiver, setFullNameReceiver] = useState('');\n  const [emailReceiver, setEmailReceiver] = useState('');\n  const [phoneNumberReceiver, setPhoneNumberReceiver] = useState('');\n  const [streetAndNumberReceiver, setStreetandNumberReceiver] = useState('');  \n  const [referenciasReceiver, setReferenciasReceiver] = useState('');\n  const [colonyReceiver, setColonyReceiver] = useState('');\n  const [postalCodeReceiver, setPostalCodeReceiver] = useState('');\n  const [cityReceiver, setCityReceiver] = useState('');\n  const [mexicoStateReceiver, setMexicoStateReceiver] = useState('');\n  \n  // To Errors\n  const [fullNameReceiverError, setFullNameReceiverError] = useState('');\n  const [emailReceiverError, setEmailReceiverError] = useState('');\n  const [phoneNumberReceiverError, setPhoneNumberReceiverError] = useState('');\n  const [streetAndNumberReceiverError, setStreetandNumberReceiverError] = useState('');\n  const [colonyReceiverError, setColonyReceiverError] = useState('');\n  const [postalCodeReceiverError, setPostalCodeReceiverError] = useState('');\n  const [cityReceiverError, setCityReceiverError] = useState('');\n  \n  //PACKAGE VALUES\n  const [packageLenght, setPackageLenght] = useState('');\n  const [packageWidth, setPackageWidth] = useState('');\n  const [packageHeight, setPackageHeight  ] = useState('');\n  const [packageWeight, setPackageWeight] = useState('');  \n  const [packageDescription, setPackageDescription] = useState('');\n    //PACKAGE ERRORS\n  const [packageLenghtError, setPackageLenghtError] = useState('');\n  const [packageWidthError, setPackageWidthError] = useState('');\n  const [packageHeightError, setPackageHeightError  ] = useState('');\n  const [packageWeightError, setPackageWeightError] = useState('');  \n  const [packageDescriptionError, setPackageDescriptionError] = useState('');\n  \n  const createGuide = async () => {\n    await createGuideApi() \n  }\n\n  //Step One Guide Creation\nconst createGuideApi = async () => {\n    console.log(\"GUACAOLE\")\n    const urlApiCreate = 'https://test.quiken.mx/generate';\n    const responseApi = await fetch(urlApiCreate, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n      },\n      body: JSON.stringify({\n        \"clientDetail\": {\n          \"accountName\": \"tester2@test.com\",\n          \"apiKey\": \"8oNVxt6MTfmv8aYUfhZyxwcWqQ7ELx2y\"\n        },\n        \"origin\": {\n          \"name\": fullNameSender,\n          \"company\": fullNameSender,\n          \"email\": emailSender,\n          \"phone\": phoneNumberSender,\n          \"street\": streetAndNumberSender,\n          \"ext_number\": \"col\",\n          \"int_number\": \"\",\n          \"district\": \"\",\n          \"city\": citySender,\n          \"state\": mexicoStateSender,\n          \"country\": \"MX\",\n          \"postalCode\": postalCodeSender,\n          \"reference\": referenciasSender\n        },\n        \"destination\": {\n          \"name\": fullNameSender,\n          \"company\": fullNameReceiver,\n          \"email\": emailReceiver,\n          \"phone\": phoneNumberReceiver,\n          \"street\": streetAndNumberReceiver,\n          \"ext_number\": \"col\",\n          \"int_number\": \"\",\n          \"district\": \"\",\n          \"city\": cityReceiver,\n          \"state\": mexicoStateReceiver,\n          \"country\": \"MX\",\n          \"postalCode\": postalCodeReceiver,\n          \"reference\": referenciasReceiver\n        },\n        \"package\": {\n          \"content\": packageDescription,\n          \"type\": 1,\n          \"dimensions\": {\n            \"length\": 10,\n            \"width\": 10,\n            \"height\": 25\n          },\n          \"weight\": 1\n        },\n        \"shipment\": {\n          \"service\": selectedService\n        },\n        \"settings\": {\n          \"labelFormat\": \"pdf\"\n        }\n      })\n    });\n    console.log(responseApi)\n    const data = await responseApi.json()\n    console.log('DATA API REQUEST', data)\n    setApiGuide(data)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = formValidation();\n    if (isValid) {\n      await calculateNewGuidePrice()\n    }\n    }\n    \n    const formValidation = () => {\n        const fullNameSenderError = {};\n        const emailSenderError = {};\n        const phoneNumberSenderError = {};\n        const streetAndNumberSenderError = {};\n        const colonySenderError = {};\n        const postalCodeSenderError = {};\n        const citySenderError = {};\n        const fullNameReceiverError = {};\n        const emailReceiverError = {};\n        const phoneNumberReceiverError = {};\n        const streetAndNumberReceiverError = {};\n        const colonyReceiverError = {};\n        const postalCodeReceiverError = {};\n        const cityReceiverError = {};\n        const packageLenghtError = {};\n        const packageWidthError = {};\n        const packageHeightError = {};\n        const packageWeightError = {};\n        const packageDescriptionError = {};\n        \n    \n        let isValid = true;\n        \n        //Name Validation Origin\n        if (fullNameSender.trim().length < 5) {\n          fullNameSenderError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n          isValid = false;\n          console.log(\"name too short\")\n        }\n    \n        if (fullNameSender.trim().match(/[0-9]/)) {\n          fullNameSenderError.FullNameLong = \"Favor de ingresar solamente letras\";\n          isValid = false;\n        }\n    \n        setFullNameSenderError(fullNameSenderError)\n    \n        //REGEX Email Validation \n        \n        if (emailIsValid(emailSender) === false) {\n          emailSenderError.EmailError = \"El email no es valido\"\n          isValid = false;\n          console.log(\"The email is not valid\")\n        }\n    \n        setEmailSenderError(emailSenderError)\n        \n        if (phoneNumberSender.trim().length < 10) {\n          phoneNumberSenderError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n          console.log(\"el telefono es muy corto\")\n          isValid = false;\n        }\n        \n    \n        if (hasLetters(phoneNumberSender) === false) {\n          phoneNumberSenderError.PhoneTooShort = \"Favor de introducir solo numeros\"\n          isValid = false;\n        }\n    \n        setPhoneNumberSenderError(phoneNumberSenderError)\n    \n        if (streetAndNumberSender.trim().length < 5) {\n          streetAndNumberSenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n          isValid = false;\n        }\n    \n        setStreetandNumberSenderError(streetAndNumberSenderError)\n    \n        if (colonySender.trim().length < 5) {\n          colonySenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n          isValid = false;\n        }\n    \n        setColonySenderError(colonySenderError)\n    \n        if (postalCodeSender.trim().length < 4) {\n          postalCodeSenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n          isValid = false;\n        }\n    \n        if (postalCodeSender.trim().length > 11) {\n          postalCodeSenderError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n          isValid = false;\n        }\n        \n        setPostalCodeSenderError(postalCodeSenderError)\n    \n        if (citySender.trim().length < 5) {\n          citySenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n          isValid = false;\n        }\n    \n        setCitySenderError(citySenderError)\n    \n        // To Section Validation\n    \n        if (fullNameReceiver.trim().length < 5) {\n            fullNameReceiverError.FullNameReceiverShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n            isValid = false;\n            console.log(\"name too short\")\n          }\n      \n        if (fullNameReceiver.trim().match(/[0-9]/)) {\n            fullNameReceiverError.FullNameLong = \"Favor de ingresar solamente letras\";\n            isValid = false;\n          }\n      \n        setFullNameReceiverError(fullNameReceiverError)\n        \n        if (emailIsValid(emailReceiver) === false) {\n            emailReceiverError.EmailError = \"El email no es valido\"\n            isValid = false;\n            console.log(\"The email is not valid\")\n          }\n      \n          setEmailReceiverError(emailReceiverError)\n          \n        if (phoneNumberReceiver.trim().length < 10) {\n            phoneNumberReceiverError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n            console.log(\"el telefono es muy corto\")\n            isValid = false;\n          }\n    \n          if (hasLetters(phoneNumberReceiver) === false) {\n            phoneNumberReceiverError.PhoneTooShort = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPhoneNumberReceiverError(phoneNumberReceiverError)\n      \n          if (streetAndNumberReceiver.trim().length < 5) {\n            streetAndNumberReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n            isValid = false;\n          }\n      \n          setStreetandNumberReceiverError(streetAndNumberReceiverError)\n      \n          if (colonyReceiver.trim().length < 5) {\n            colonyReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n            isValid = false;\n          }\n      \n          setColonyReceiverError(colonyReceiverError)\n      \n          if (postalCodeReceiver.trim().length < 4) {\n            postalCodeReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n            isValid = false;\n          }\n      \n          if (postalCodeReceiver.trim().length > 11) {\n            postalCodeReceiverError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n            isValid = false;\n          }\n          \n          setPostalCodeReceiverError(postalCodeReceiverError)\n      \n          if (cityReceiver.trim().length < 5) {\n            cityReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n            isValid = false;\n          }\n      \n          setCityReceiverError(cityReceiverError)\n          \n          if (packageLenght.length === 0) {\n            packageLenghtError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          if (hasLetters(packageLenght) === false) {\n            console.log(\"solo numeros\")\n            packageLenghtError.PackageLenghtLetters = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPackageLenghtError(packageLenghtError)\n      \n          if (packageWidth.length === 0) {\n            packageWidthError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          if (hasLetters(packageWidth) === false) {\n            console.log(\"solo numeros\")\n            packageWidthError.PackageWidthLetters = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPackageWidthError(packageWidthError)\n          \n          if (packageHeight.length === 0) {\n            packageHeightError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          if (hasLetters(packageHeight) === false) {\n            console.log(\"solo numeros\")\n            packageHeightError.PackageHeightLetters = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPackageHeightError(packageHeightError)\n      \n          if (packageWeight.length === 0) {\n            packageWeightError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          if (hasLetters(packageWeight) === false) {\n            console.log(\"solo numeros\")\n            packageWeightError.PackageWeightLetters = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPackageWeightError(packageWeightError)\n          \n          if (packageDescription.length === 0) {\n            packageDescriptionError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          setPackageDescriptionError(packageDescriptionError)\n    \n        return isValid\n    }\n\n    // Guide Cost Function\nconst calculateNewGuidePrice = async () => {\n    const url = `${process.env.REACT_APP_API_URL}/rate`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n      body: JSON.stringify({\n          \"clientDetail\": {\n             \"accountName\": localStorage.getItem(\"email\"),\n             \"apiKey\": localStorage.getItem(\"api_key\")\n           },\n           \"origin\": {\n             \"name\": fullNameSender,\n             \"company\": \"Default Value\",\n             \"email\": emailSender,\n             \"phone\": phoneNumberSender,\n             \"country\": \"MX\",\n             \"postalCode\": postalCodeSender\n           },\n           \"destination\": {\n             \"name\": fullNameReceiver,\n             \"company\": \"Default Value\",\n             \"email\": emailReceiver,\n             \"phone\": phoneNumberReceiver,\n             \"country\": \"MX\",\n             \"postalCode\": postalCodeReceiver\n           },\n           \"package\": {\n             \"content\": packageDescription,\n             \"type\": 1,\n             \"dimensions\": {\n               \"length\": parseInt(packageLenght),\n               \"width\": parseInt(packageWidth),\n               \"height\": parseInt(packageHeight)\n             },\n             \"weight\": parseInt(packageWeight)\n           }\n      })\n    });\n    console.log(response)\n    const data = await response.json();\n    console.log(data)\n    if (data.status === \"SUCCESS\") {\n      console.log(data.data.services, 'DATA DATA SERVICES');\n      setServices(data.data.services)\n      setLoadingQuoteData(false)\n      \n    } else if (data.status === \"ERROR\") {\n      setErrorQuote(data.description)\n      setLoadingQuoteData(false)\n    }\n    \n  }\n\n  function hasLetters (phone) {\n    return /^\\d+$/.test(phone)\n  }\n\n  function emailIsValid (email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n  }\n\n  const handleSelectGuide = (servicio) => {\n    setSelectedService(servicio.code)\n    console.log(servicio.code)\n    setguideCost(servicio.totalPrice)\n  }\n\n\n    return (\n        <div className=\"main-wrapper-page\">                    \n            \n        {/* FIRST TWO SECTIONS */}\n        <div className=\"row-first-two-sections\">              \n          {/* ORIGIN SECTION */}\n          <div className=\"seccion-desde-donde-envias\">\n          <h1 className=\"subheading-form-create-guide\"> 1. ORIGEN:</h1>\n              <div>\n              <div>\n              {/* <label className=\"form-label\" style={{display:'block'}}>Nombre Completo <span style={{color: \"red\"}}>*</span></label> */}\n                <label className=\"label-create-guide-form\">Nombre Completo</label>\n                <input className=\"input-create-guide-form\" value={fullNameSender}\n                    onChange= {event => setFullNameSender(event.target.value)}\n                    type=\"text\" placeholder=\"Nombre Completo\" />\n                {Object.keys(fullNameSenderError).map((key) => {return <div>{fullNameSenderError[key] }</div>})}\n              </div>\n                                  \n              <div>\n                  <label className=\"label-create-guide-form\">Correo Electrónico</label>\n                  <input className=\"input-create-guide-form\" value={emailSender} onChange={(event) => setEmailSender(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                  </div>                \n                  {Object.keys(emailSenderError).map((key) => { return <div>{emailSenderError[key]}</div> })}  \n                  \n              <div>\n              <label className=\"label-create-guide-form\">Teléfono</label>\n                  <input className=\"input-create-guide-form\" value={phoneNumberSender} onChange={(event) => setPhoneNumberSender(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                  {Object.keys(phoneNumberSenderError).map((key) => {return <div>{phoneNumberSenderError[key] }</div>})}\n              </div>\n              \n              <div>\n                  <label className=\"label-create-guide-form\">Calle y Número</label>\n                  <input className=\"input-create-guide-form\" value={streetAndNumberSender} onChange={(event) => setStreetandNumberSender(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                  </div>\n                  {Object.keys(streetAndNumberSenderError).map((key) => {return <div>{streetAndNumberSenderError[key] }</div>})}\n              \n              <div>\n                  <label className=\"label-create-guide-form\">Referencia</label>\n                  <input className=\"input-create-guide-form\" value={referenciasSender} onChange={(event) => setReferenciasSender(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n                  </div>\n                  \n              <div>\n                  <label className=\"label-create-guide-form\">Colonia</label>\n                  <input className=\"input-create-guide-form\" value={colonySender} onChange={(event) => setColonySender(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                  </div>\n              {Object.keys(colonySenderError).map((key) => {return <div>{colonySenderError[key] }</div>})}\n              \n              <div>\n                  <label className=\"label-create-guide-form\">Código Postal</label>\n                  <input className=\"input-create-guide-form\" value={postalCodeSender} onChange={(event) => setPostalCodeSender(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                  </div>\n              {Object.keys(postalCodeSenderError).map((key) => {return <div>{postalCodeSenderError[key] }</div>})}\n\n              <div>\n                  <label className=\"label-create-guide-form\">Ciudad</label>\n                  <input className=\"input-create-guide-form\" value={citySender} onChange={(event) => setCitySender(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                  </div>\n              {Object.keys(citySenderError).map((key) => {return <div>{citySenderError[key] }</div>})}\n\n              <div className=\"field-holder\">\n                  <label className=\"label-create-guide-form\">Estado</label>\n                  <select className=\"input-create-guide-form\" name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateSender(event.target.value)}>\n                    <option value=\"no\">Seleccione Estado.</option>\n                    {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                    <option value=\"Baja California\">Baja California</option>\n                    <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                    {/* <option value=\"Campeche\">Campeche</option>\n                    <option value=\"Chiapas\">Chiapas</option> */}\n                    <option value=\"CH\">Chihuahua</option>\n                    <option value=\"CX\">Ciudad de México</option>\n                    <option value=\"CO\">Coahuila</option>\n                    {/* <option value=\"Colima\">Colima</option> */}\n                    <option value=\"DG\">Durango</option>\n                    {/* <option value=\"Estado de México\">Estado de México</option> */}\n                    <option value=\"GT\">Guanajuato</option>\n                    {/* <option value=\"Guerrero\">Guerrero</option> */}\n                    <option value=\"HG\">Hidalgo</option>\n                    <option value=\"JL\">Jalisco</option>\n                    {/* <option value=\"Michoacán\">Michoacán</option>\n                    <option value=\"Morelos\">Morelos</option>\n                    <option value=\"Nayarit\">Nayarit</option> */}\n                    <option value=\"NL\">Nuevo León</option>\n                    {/* <option value=\"Oaxaca\">Oaxaca</option>\n                    <option value=\"Puebla\">Puebla</option> */}\n                    <option value=\"QT\">Querétaro</option>\n                    {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                    <option value=\"SL\">San Luis Potosí</option>\n                    {/* <option value=\"Sinaloa\">Sinaloa</option>\n                    <option value=\"Sonora\">Sonora</option>\n                    <option value=\"Tabasco\">Tabasco</option> */}\n                    <option value=\"TM\">Tamaulipas</option>\n                    {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                    <option value=\"VE\">Veracruz</option>\n                    {/* <option value=\"Yucatán\">Yucatán</option>\n                    <option value=\"Zacatecas\">Zacatecas</option> */}\n                </select>\n              </div>\n          \n          </div>\n          </div>\n\n          {/* TO SECTION */}\n          <div className=\"seccion-desde-donde-envias\">\n          <h1 className=\"subheading-form-create-guide\">2. DESTINO:</h1>\n              <div>\n              <div>\n                  <label className=\"label-create-guide-form\">Nombre Completo</label>\n                  <input className=\"input-create-guide-form\"\n                  value={fullNameReceiver}\n                  onChange= {event => setFullNameReceiver(event.target.value)}\n                  type=\"text\" placeholder=\"Nombre Completo\" />\n                  </div>\n                  {Object.keys(fullNameReceiverError).map((key) => {return <div>{fullNameReceiverError[key] }</div>})}\n                                  \n              <div>\n                  <label className=\"label-create-guide-form\">Correo Electrónico</label>\n                  <input className=\"input-create-guide-form\" value={emailReceiver} onChange={(event) => setEmailReceiver(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                  {Object.keys(emailReceiverError).map((key) => { return <div>{emailReceiverError[key]}</div> })}  \n              </div>                \n                  \n              <div>\n                  <label className=\"label-create-guide-form\">Teléfono</label>\n                  <input className=\"input-create-guide-form\" value={phoneNumberReceiver} onChange={(event) => setPhoneNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                  {Object.keys(phoneNumberReceiverError).map((key) => {return <div>{phoneNumberReceiverError[key] }</div>})}\n              </div>\n              \n              <div>\n                  <label className=\"label-create-guide-form\">Calle y Número</label>\n                  <input  className=\"input-create-guide-form\" value={streetAndNumberReceiver} onChange={(event) => setStreetandNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                  {Object.keys(streetAndNumberReceiverError).map((key) => {return <div>{streetAndNumberReceiverError[key] }</div>})}\n              </div>\n              \n              <div>\n                  <label className=\"label-create-guide-form\">Referencias</label>\n                  <input  className=\"input-create-guide-form\" value={referenciasReceiver} onChange={(event) => setReferenciasReceiver(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n              </div>\n                  \n              <div>\n                  <label className=\"label-create-guide-form\">Colonia</label>\n                  <input className=\"input-create-guide-form\" value={colonyReceiver} onChange={(event) => setColonyReceiver(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                  {Object.keys(colonyReceiverError).map((key) => {return <div>{colonyReceiverError[key] }</div>})}\n              </div>\n              \n              <div>\n                <label className=\"label-create-guide-form\">Código Postal</label>\n                  <input className=\"input-create-guide-form\" value={postalCodeReceiver} onChange={(event) => setPostalCodeReceiver(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                  {Object.keys(postalCodeReceiverError).map((key) => {return <div>{postalCodeReceiverError[key] }</div>})}\n              </div>\n\n              <div>\n                  <label className=\"label-create-guide-form\">Ciudad</label>\n                  <input className=\"input-create-guide-form\" value={cityReceiver} onChange={(event) => setCityReceiver(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                  {Object.keys(cityReceiverError).map((key) => {return <div>{cityReceiverError[key] }</div>})}\n              </div>\n\n              <div>\n                  <label className=\"label-create-guide-form\">Estado</label>\n                  <select className=\"input-create-guide-form\" name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateReceiver(event.target.value)}>\n                  <option value=\"no\">Seleccione Estado.</option>\n                  {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                  <option value=\"Baja California\">Baja California</option>\n                  <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                  {/* <option value=\"Campeche\">Campeche</option>\n                  <option value=\"Chiapas\">Chiapas</option> */}\n                  <option value=\"CH\">Chihuahua</option>\n                  <option value=\"CX\">Ciudad de México</option>\n                  <option value=\"CO\">Coahuila</option>\n                  {/* <option value=\"Colima\">Colima</option> */}\n                  <option value=\"DG\">Durango</option>\n                  {/* <option value=\"Estado de México\">Estado de México</option> */}\n                  <option value=\"GT\">Guanajuato</option>\n                  {/* <option value=\"Guerrero\">Guerrero</option> */}\n                  <option value=\"HG\">Hidalgo</option>\n                  <option value=\"JL\">Jalisco</option>\n                  {/* <option value=\"Michoacán\">Michoacán</option>\n                  <option value=\"Morelos\">Morelos</option>\n                  <option value=\"Nayarit\">Nayarit</option> */}\n                  <option value=\"NL\">Nuevo León</option>\n                  {/* <option value=\"Oaxaca\">Oaxaca</option>\n                  <option value=\"Puebla\">Puebla</option> */}\n                  <option value=\"QT\">Querétaro</option>\n                  {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                  <option value=\"SL\">San Luis Potosí</option>\n                  {/* <option value=\"Sinaloa\">Sinaloa</option>\n                  <option value=\"Sonora\">Sonora</option>\n                  <option value=\"Tabasco\">Tabasco</option> */}\n                  <option value=\"TM\">Tamaulipas</option>\n                  {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                  <option value=\"VE\">Veracruz</option>\n                  {/* <option value=\"Yucatán\">Yucatán</option>\n                  <option value=\"Zacatecas\">Zacatecas</option> */}\n                  </select>\n              </div>\n              \n              </div>\n          </div>\n          \n        </div>\n\n        \n        {/* THIRD AND FOURTH SECTION */}\n        <div className=\"third-forth-sections\">  \n          {/* PACKAGE SECTION */}\n          <div className=\"seccion-informacion-paquete\">\n          <h2 className=\"subheading-form-create-guide\">3. INFORMACIÓN DEL PAQUETE</h2>\n              <div>\n              \n              <div>\n                  <label className=\"label-create-guide-form\">Largo (cm)</label>\n                  <input className=\"input-create-guide-form\" value={packageLenght} \n                  onChange={(event) => {\n                    setPackageLenght(event.target.value)\n                  }} \n                  type=\"text\" placeholder=\"Largo (cm)\" />\n                  {Object.keys(packageLenghtError).map((key) => {return <div>{packageLenghtError[key]}</div>})}\n              </div>\n                                  \n              <div>\n                  <label className=\"label-create-guide-form\">Ancho (cm)</label>\n                  <input className=\"input-create-guide-form\" value={packageWidth} \n                  onChange={(event) => {\n                    setPackageWidth(event.target.value)\n                  }} \n                  type=\"email\" placeholder=\"Ancho (cm)\" />\n                  {Object.keys(packageWidthError).map((key) => {return <div>{packageWidthError[key]}</div>})}\n              </div>                \n                  \n              <div>\n                  <label className=\"label-create-guide-form\">Alto (cm)</label>\n                  <input className=\"input-create-guide-form\" value={packageHeight} \n                  onChange={(event) => {\n                    setPackageHeight(event.target.value)\n                  }} \n                  type=\"text\" placeholder=\"Alto (cm)\" />\n                  {Object.keys(packageHeightError).map((key) => {return <div>{packageHeightError[key]}</div>})}\n              </div>\n              \n                  {/* <h4>Peso del paquete que envías</h4> */}\n                  \n              <div>\n                  <label className=\"label-create-guide-form\">Peso del paquete (kg)</label>\n                  <input className=\"input-create-guide-form\" value={packageWeight} \n                  onChange={(event) => {\n                    setPackageWeight(event.target.value)\n                  }}\n                  type=\"text\" placeholder=\"Peso del paquete en (kg)\" />\n                  {Object.keys(packageWeightError).map((key) => {return <div>{packageWeightError[key]}</div>})}\n              </div>\n              \n                  {/* <h4>¿Que envías?</h4> */}\n                  \n              <div>\n                  <label className=\"label-create-guide-form\">Contenido del paquete (Descripción corta)</label>\n                  <input className=\"input-create-guide-form\" value={packageDescription} \n                  onChange={(event) => {\n                    setPackageDescription(event.target.value)}\n                    } \n                    type=\"text\" placeholder=\"Contenido del paquete (Descripción corta)\" />\n                    {Object.keys(packageDescriptionError).map((key) => {return <div>{packageDescriptionError[key]}</div>})}\n              </div>\n            \n            <div className=\"buttons-wrapper-row\">\n              <Link to=\"/userdashboard\">\n                <button id=\"blue\" className=\"btn-create-guide-form\" >Regresar</button>\n              </Link>\n                  <button className=\"btn-create-guide-form\" onClick={(event) => {handleSubmit(event)}}>Cotizar</button>\n            </div>\n              \n          </div>\n          </div>\n          \n          <div className=\"payment-main-wrapper\">\n            <div className=\"payment-section\">\n            <h1 className=\"subheading-form-create-guide\"> 4. SELECCIONA TU TIPO DE ENVIO:</h1>\n            <div className=\"table-holder\">{ loadingQuoteData ? <div className=\"cotizar-paragraph\">Llena todo los campos y da click en Cotizar!</div>:\n              <table>\n                <tr className=\"table-row-heading\">\n                  <th></th>\n                  <th>Servicio</th>\n                  <th>Tiempo Entrega</th>\n                  <th>Precio</th>\n                </tr>\n                {\n                  services.map((servicio, i) => {\n                    return (\n                    <tr className=\"table-data-row\" onClick={() => handleSelectGuide(servicio)}>\n                      <td>{i+1}</td>\n                      <td>{servicio.type.toUpperCase()}</td>\n                      <td>{servicio.estimateDelivery}</td>\n                      <td>${servicio.totalPrice}.99</td>\n                    </tr>)\n                  })}\n              \n              </table>  \n              }  \n            \n            </div>\n\n            <div className=\"wrapper-guide-cost\">\n                  <div>\n                    \n                  </div>\n\n                  <label className=\"heading-guide-cost\">Costo de tu Guia</label>\n                  <br></br>\n                  <label className=\"price-guide-cost\" >{guideCost}.00</label>\n            </div>\n\n            <div className=\"wrapper-guide-cost\">\n                  <div>\n                  </div>\n                  <label className=\"heading-guide-cost\">Saldo Disponible</label>\n                  <br></br>\n                  <label className=\"price-guide-cost\" >{user.balance}</label>\n            </div>\n            \n            <h1 className=\"subheading-form-create-guide\"> 5. METODO DE PAGO:</h1>\n              \n            </div>\n          </div>\n        </div>\n        \n        {/* <div className=\"buttons-wrapper\">\n          <button className=\"btn-contact-form\" onClick={(event) => {handleSubmit(event)}}>Siguiente</button>\n        </div> */}\n        \n      </div>\n    )\n}\n\nexport default GuideCreator;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/UserDashboard/GuideTable.js",["291","292","293","294","295"],"\nimport React, { Component, useMemo } from 'react'\nimport CancelButton from './CancelButton'\nimport './GuideTable.scss'\nimport { Link } from 'react-router-dom'\n\nconst GuideTable = (props) => {\n  \n  const data = props.userGuides\n  \n  const columns = [ \n    'Tracking Num.',\n    'User',\n    'Precio',\n    'Status'\n  ] \n\n  const renderRow = (guide, index) => {\n\n    return (\n      <tr className=\"tr-element\" key={index}>\n        <td>{guide.trackingNumber}</td>\n        <td>{guide.currentUser}</td>\n        <td>{guide.guideCost}</td>\n        {/* <td>{guide.guideStatus}</td> */}\n        {/* <td>\n          <CancelButton userGuide={guide}>Descargar</CancelButton>\n        </td> */}\n        <td>\n          <a href={`${guide.fileUrl}`} target=\"_blank\">\n            <button id=\"red\" className=\"btn-cancel-guide\">Imprimir</button>\n          </a>\n        </td>\n      </tr>\n    )\n  }; \n \n  return (\n    <div>\n      <table className=\"table-element\">\n        <thead className=\" thead-element\">\n          {columns.map((colName) => {\n            return (<th>{colName}</th>)\n          })}\n        </thead>\n        <tbody className=\"\">\n          {data.map(renderRow)}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default GuideTable;\n","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Cart/Checkout.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/BtnRegistro.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Cart/Checkout2.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/UserDashboard/CancelButton.js",["296"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst CancelButton = (props) => {\n\n    const { _id } = props.userGuide\n\n    console.log(_id)\n\n    \n    const cancelGuide = () => {\n        console.log('cancel guide');\n        console.log(_id)\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ _id })\n        };\n        fetch('api/user/cancelguide', requestOptions)\n            .then(response => {\n                console.log(response)\n                response.json()\n            })\n            .then(data => console.log(data));\n    }\n\n    return (\n        <button className=\"btn-cancel-guide\" onClick={cancelGuide}>Cancelar</button>\n    )\n}\n\nexport default CancelButton\n","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js",[],{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","severity":1,"message":"302","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":17},{"ruleId":"301","severity":1,"message":"305","line":7,"column":10,"nodeType":"303","messageId":"304","endLine":7,"endColumn":40},{"ruleId":"301","severity":1,"message":"306","line":12,"column":12,"nodeType":"303","messageId":"304","endLine":12,"endColumn":25},{"ruleId":"301","severity":1,"message":"307","line":16,"column":12,"nodeType":"303","messageId":"304","endLine":16,"endColumn":27},{"ruleId":"301","severity":1,"message":"308","line":17,"column":12,"nodeType":"303","messageId":"304","endLine":17,"endColumn":24},{"ruleId":"309","severity":1,"message":"310","line":108,"column":8,"nodeType":"311","endLine":108,"endColumn":35,"suggestions":"312"},{"ruleId":"301","severity":1,"message":"313","line":18,"column":10,"nodeType":"303","messageId":"304","endLine":18,"endColumn":18},{"ruleId":"301","severity":1,"message":"314","line":58,"column":10,"nodeType":"303","messageId":"304","endLine":58,"endColumn":20},{"ruleId":"309","severity":1,"message":"315","line":590,"column":4,"nodeType":"311","endLine":590,"endColumn":39,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":38,"column":23,"nodeType":"319","messageId":"320","endLine":38,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":8,"column":8,"nodeType":"303","messageId":"304","endLine":8,"endColumn":17},{"ruleId":"301","severity":1,"message":"321","line":13,"column":10,"nodeType":"303","messageId":"304","endLine":13,"endColumn":24},{"ruleId":"301","severity":1,"message":"322","line":13,"column":26,"nodeType":"303","messageId":"304","endLine":13,"endColumn":43},{"ruleId":"301","severity":1,"message":"323","line":16,"column":23,"nodeType":"303","messageId":"304","endLine":16,"endColumn":37},{"ruleId":"301","severity":1,"message":"324","line":21,"column":10,"nodeType":"303","messageId":"304","endLine":21,"endColumn":21},{"ruleId":"301","severity":1,"message":"325","line":21,"column":23,"nodeType":"303","messageId":"304","endLine":21,"endColumn":37},{"ruleId":"301","severity":1,"message":"326","line":23,"column":22,"nodeType":"303","messageId":"304","endLine":23,"endColumn":35},{"ruleId":"301","severity":1,"message":"327","line":26,"column":10,"nodeType":"303","messageId":"304","endLine":26,"endColumn":19},{"ruleId":"301","severity":1,"message":"328","line":26,"column":21,"nodeType":"303","messageId":"304","endLine":26,"endColumn":33},{"ruleId":"301","severity":1,"message":"329","line":27,"column":25,"nodeType":"303","messageId":"304","endLine":27,"endColumn":41},{"ruleId":"301","severity":1,"message":"330","line":28,"column":10,"nodeType":"303","messageId":"304","endLine":28,"endColumn":27},{"ruleId":"301","severity":1,"message":"331","line":28,"column":29,"nodeType":"303","messageId":"304","endLine":28,"endColumn":49},{"ruleId":"301","severity":1,"message":"332","line":29,"column":10,"nodeType":"303","messageId":"304","endLine":29,"endColumn":27},{"ruleId":"301","severity":1,"message":"333","line":29,"column":29,"nodeType":"303","messageId":"304","endLine":29,"endColumn":49},{"ruleId":"301","severity":1,"message":"334","line":30,"column":10,"nodeType":"303","messageId":"304","endLine":30,"endColumn":21},{"ruleId":"301","severity":1,"message":"335","line":30,"column":23,"nodeType":"303","messageId":"304","endLine":30,"endColumn":37},{"ruleId":"301","severity":1,"message":"336","line":130,"column":9,"nodeType":"303","messageId":"304","endLine":130,"endColumn":23},{"ruleId":"301","severity":1,"message":"337","line":10,"column":12,"nodeType":"303","messageId":"304","endLine":10,"endColumn":17},{"ruleId":"301","severity":1,"message":"338","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":24},{"ruleId":"301","severity":1,"message":"339","line":17,"column":21,"nodeType":"303","messageId":"304","endLine":17,"endColumn":31},{"ruleId":"301","severity":1,"message":"337","line":18,"column":12,"nodeType":"303","messageId":"304","endLine":18,"endColumn":17},{"ruleId":"317","severity":1,"message":"318","line":48,"column":21,"nodeType":"319","messageId":"320","endLine":48,"endColumn":23},{"ruleId":"301","severity":1,"message":"329","line":19,"column":27,"nodeType":"303","messageId":"304","endLine":19,"endColumn":43},{"ruleId":"309","severity":1,"message":"340","line":31,"column":6,"nodeType":"311","endLine":31,"endColumn":8,"suggestions":"341"},{"ruleId":"301","severity":1,"message":"342","line":18,"column":10,"nodeType":"303","messageId":"304","endLine":18,"endColumn":26},{"ruleId":"309","severity":1,"message":"343","line":100,"column":6,"nodeType":"311","endLine":100,"endColumn":21,"suggestions":"344"},{"ruleId":"301","severity":1,"message":"337","line":17,"column":12,"nodeType":"303","messageId":"304","endLine":17,"endColumn":17},{"ruleId":"301","severity":1,"message":"345","line":19,"column":13,"nodeType":"303","messageId":"304","endLine":19,"endColumn":18},{"ruleId":"301","severity":1,"message":"346","line":19,"column":20,"nodeType":"303","messageId":"304","endLine":19,"endColumn":28},{"ruleId":"301","severity":1,"message":"347","line":167,"column":7,"nodeType":"303","messageId":"304","endLine":167,"endColumn":20},{"ruleId":"309","severity":1,"message":"348","line":19,"column":5,"nodeType":"311","endLine":19,"endColumn":7,"suggestions":"349"},{"ruleId":"301","severity":1,"message":"350","line":31,"column":15,"nodeType":"303","messageId":"304","endLine":31,"endColumn":19},{"ruleId":"301","severity":1,"message":"351","line":7,"column":8,"nodeType":"303","messageId":"304","endLine":7,"endColumn":13},{"ruleId":"301","severity":1,"message":"337","line":13,"column":12,"nodeType":"303","messageId":"304","endLine":13,"endColumn":17},{"ruleId":"301","severity":1,"message":"352","line":14,"column":12,"nodeType":"303","messageId":"304","endLine":14,"endColumn":19},{"ruleId":"301","severity":1,"message":"353","line":2,"column":9,"nodeType":"303","messageId":"304","endLine":2,"endColumn":25},{"ruleId":"301","severity":1,"message":"354","line":11,"column":9,"nodeType":"303","messageId":"304","endLine":11,"endColumn":13},{"ruleId":"355","severity":1,"message":"356","line":14,"column":22,"nodeType":"303","messageId":"357","endLine":14,"endColumn":30},{"ruleId":"301","severity":1,"message":"358","line":15,"column":7,"nodeType":"303","messageId":"304","endLine":15,"endColumn":21},{"ruleId":"359","severity":1,"message":"360","line":44,"column":13,"nodeType":"361","endLine":44,"endColumn":61},{"ruleId":"359","severity":1,"message":"360","line":40,"column":21,"nodeType":"361","endLine":40,"endColumn":72},{"ruleId":"301","severity":1,"message":"362","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":26},{"ruleId":"301","severity":1,"message":"363","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":14},{"ruleId":"301","severity":1,"message":"364","line":3,"column":16,"nodeType":"303","messageId":"304","endLine":3,"endColumn":23},{"ruleId":"301","severity":1,"message":"365","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":17},{"ruleId":"301","severity":1,"message":"352","line":11,"column":10,"nodeType":"303","messageId":"304","endLine":11,"endColumn":17},{"ruleId":"301","severity":1,"message":"339","line":11,"column":19,"nodeType":"303","messageId":"304","endLine":11,"endColumn":29},{"ruleId":"309","severity":1,"message":"366","line":17,"column":6,"nodeType":"311","endLine":17,"endColumn":8,"suggestions":"367"},{"ruleId":"309","severity":1,"message":"368","line":43,"column":19,"nodeType":"369","endLine":43,"endColumn":32},{"ruleId":"301","severity":1,"message":"370","line":217,"column":7,"nodeType":"303","messageId":"304","endLine":217,"endColumn":9},{"ruleId":"301","severity":1,"message":"371","line":222,"column":7,"nodeType":"303","messageId":"304","endLine":222,"endColumn":21},{"ruleId":"301","severity":1,"message":"372","line":323,"column":7,"nodeType":"303","messageId":"304","endLine":323,"endColumn":21},{"ruleId":"301","severity":1,"message":"373","line":17,"column":11,"nodeType":"303","messageId":"304","endLine":17,"endColumn":24},{"ruleId":"374","severity":1,"message":"375","line":25,"column":19,"nodeType":"376","messageId":"377","endLine":25,"endColumn":27,"fix":"378"},{"ruleId":"301","severity":1,"message":"379","line":11,"column":7,"nodeType":"303","messageId":"304","endLine":11,"endColumn":15},{"ruleId":"301","severity":1,"message":"380","line":14,"column":10,"nodeType":"303","messageId":"304","endLine":14,"endColumn":17},{"ruleId":"301","severity":1,"message":"381","line":14,"column":19,"nodeType":"303","messageId":"304","endLine":14,"endColumn":29},{"ruleId":"301","severity":1,"message":"313","line":17,"column":10,"nodeType":"303","messageId":"304","endLine":17,"endColumn":18},{"ruleId":"301","severity":1,"message":"382","line":18,"column":10,"nodeType":"303","messageId":"304","endLine":18,"endColumn":18},{"ruleId":"301","severity":1,"message":"383","line":18,"column":20,"nodeType":"303","messageId":"304","endLine":18,"endColumn":31},{"ruleId":"301","severity":1,"message":"306","line":23,"column":10,"nodeType":"303","messageId":"304","endLine":23,"endColumn":23},{"ruleId":"301","severity":1,"message":"384","line":23,"column":25,"nodeType":"303","messageId":"304","endLine":23,"endColumn":41},{"ruleId":"301","severity":1,"message":"385","line":34,"column":10,"nodeType":"303","messageId":"304","endLine":34,"endColumn":16},{"ruleId":"301","severity":1,"message":"386","line":34,"column":18,"nodeType":"303","messageId":"304","endLine":34,"endColumn":27},{"ruleId":"301","severity":1,"message":"387","line":35,"column":10,"nodeType":"303","messageId":"304","endLine":35,"endColumn":24},{"ruleId":"301","severity":1,"message":"388","line":35,"column":26,"nodeType":"303","messageId":"304","endLine":35,"endColumn":43},{"ruleId":"301","severity":1,"message":"389","line":36,"column":10,"nodeType":"303","messageId":"304","endLine":36,"endColumn":20},{"ruleId":"301","severity":1,"message":"390","line":36,"column":22,"nodeType":"303","messageId":"304","endLine":36,"endColumn":35},{"ruleId":"301","severity":1,"message":"314","line":57,"column":10,"nodeType":"303","messageId":"304","endLine":57,"endColumn":20},{"ruleId":"301","severity":1,"message":"391","line":92,"column":9,"nodeType":"303","messageId":"304","endLine":92,"endColumn":20},{"ruleId":"301","severity":1,"message":"392","line":2,"column":17,"nodeType":"303","messageId":"304","endLine":2,"endColumn":26},{"ruleId":"301","severity":1,"message":"393","line":2,"column":28,"nodeType":"303","messageId":"304","endLine":2,"endColumn":35},{"ruleId":"301","severity":1,"message":"394","line":3,"column":8,"nodeType":"303","messageId":"304","endLine":3,"endColumn":20},{"ruleId":"301","severity":1,"message":"363","line":5,"column":10,"nodeType":"303","messageId":"304","endLine":5,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":30,"column":11,"nodeType":"361","messageId":"397","endLine":30,"endColumn":56,"fix":"398"},{"ruleId":"301","severity":1,"message":"399","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":20},"no-native-reassign",["400"],"no-negated-in-lhs",["401"],"no-unused-vars","'SubNavbar' is defined but never used.","Identifier","unusedVar","'AfterpayClearpayMessageElement' is defined but never used.","'paymentMethod' is assigned a value but never used.","'hasPaymentError' is assigned a value but never used.","'errorPayment' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'requestRecharge' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["402"],"'apiGuide' is assigned a value but never used.","'errorQuote' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'guideCost' and 'username'. Either include them or remove the dependency array.",["403"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectedScreen' is assigned a value but never used.","'setSelectedScreen' is assigned a value but never used.","'setCompanyName' is assigned a value but never used.","'privateData' is assigned a value but never used.","'setPrivateData' is assigned a value but never used.","'setUserPoints' is assigned a value but never used.","'userSaldo' is assigned a value but never used.","'setUserSaldo' is assigned a value but never used.","'setTotalRecargas' is assigned a value but never used.","'pesoPromedioGuias' is assigned a value but never used.","'setPesoPromedioGuias' is assigned a value but never used.","'averageCostGuides' is assigned a value but never used.","'setAverageCostGuides' is assigned a value but never used.","'averageCost' is assigned a value but never used.","'setAverageCost' is assigned a value but never used.","'loadUserGuides' is assigned a value but never used.","'error' is assigned a value but never used.","'MidScreenWrapper' is defined but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchPrivateData' and 'user'. Either include them or remove the dependency array.",["404"],"'guideInformation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getGuideInfo'. Either include it or remove the dependency array.",["405"],"'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'WelcomeHeader' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'goToDashboard' and 'history'. Either include them or remove the dependency array.",["406"],"'data' is assigned a value but never used.","'axios' is defined but never used.","'loading' is assigned a value but never used.","'FloatingWhatsApp' is defined but never used.","'node' is assigned a value but never used.","no-use-before-define","'Tawk_API' was used before it was defined.","usedBeforeDefined","'Tawk_LoadStart' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'userEvent' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchGuides'. Either include it or remove the dependency array.",["407"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'Td' is assigned a value but never used.","'PaginationLink' is assigned a value but never used.","'SectionWrapper' is assigned a value but never used.","'logoutHandler' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"408","text":"409"},"'username' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'hrefFile' is assigned a value but never used.","'setHrefFile' is assigned a value but never used.","'setPaymentMethod' is assigned a value but never used.","'points' is assigned a value but never used.","'setPoints' is assigned a value but never used.","'isPointsEnough' is assigned a value but never used.","'setIsPointsEnough' is assigned a value but never used.","'needsReset' is assigned a value but never used.","'setNeedsReset' is assigned a value but never used.","'createGuide' is assigned a value but never used.","'Component' is defined but never used.","'useMemo' is defined but never used.","'CancelButton' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"410","text":"411"},"'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},[613,613],"()",[744,744]," rel=\"noreferrer\"","Update the dependencies array to be: [isRechargePaid, cartTotal, username, requestRecharge]",{"range":"424","text":"425"},"Update the dependencies array to be: [paymentMethod, points, needsReset, username, guideCost]",{"range":"426","text":"427"},"Update the dependencies array to be: [fetchPrivateData, user]",{"range":"428","text":"429"},"Update the dependencies array to be: [getGuideInfo, needsRerender]",{"range":"430","text":"431"},"Update the dependencies array to be: [goToDashboard, history]",{"range":"432","text":"433"},"Update the dependencies array to be: [fetchGuides]",{"range":"434","text":"435"},[3335,3362],"[isRechargePaid, cartTotal, username, requestRecharge]",[18330,18365],"[paymentMethod, points, needsReset, username, guideCost]",[968,970],"[fetchPrivateData, user]",[3075,3090],"[getGuideInfo, needsRerender]",[612,614],"[goToDashboard, history]",[512,514],"[fetchGuides]"]