[{"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/index.js":"1","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/App.js":"2","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/InicioPagina.js":"3","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/ContactoPagina.js":"4","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/RastreoPagina.js":"5","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/FulfillmentPagina.js":"6","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/SignUpPagina.js":"7","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/ForgotPasswordPagina.js":"8","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/SignInPagina.js":"9","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/UserDashboard.js":"10","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/ResetPasswordPagina.js":"11","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/ServiciosPagina.js":"12","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/routing/PrivateRoute.js":"13","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/CreateGuidePagina.js":"14","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Others/ContactUs.js":"15","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Navbar/BtnRegistro.js":"16","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Navbar/Navbar.js":"17","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Others/WhatsappBtn.js":"18","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Others/RastreaPedido.js":"19","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Others/BtnMail.js":"20","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/MapInicio.js":"21","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/MilesDeGuias.js":"22","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/ContactForm.js":"23","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/MasBeneficios.js":"24","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/NuestrosVehiculos.js":"25","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/AyudamosNegocios.js":"26","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Footer/Footer.js":"27","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/UserDashboard/GuideTable.js":"28","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Cart/Checkout.js":"29","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/UserDashboard/CancelButton.js":"30","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Tracking/ShippingInformation.js":"31","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/RecargarSaldoPagina.js":"32","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Cart/Checkout2.js":"33"},{"size":154,"mtime":1623101914080,"results":"34","hashOfConfig":"35"},{"size":2557,"mtime":1627600507443,"results":"36","hashOfConfig":"35"},{"size":5273,"mtime":1627984782204,"results":"37","hashOfConfig":"35"},{"size":916,"mtime":1627621372953,"results":"38","hashOfConfig":"35"},{"size":7976,"mtime":1627621396557,"results":"39","hashOfConfig":"35"},{"size":7695,"mtime":1628111944771,"results":"40","hashOfConfig":"35"},{"size":3634,"mtime":1627599753827,"results":"41","hashOfConfig":"35"},{"size":2048,"mtime":1623730476354,"results":"42","hashOfConfig":"35"},{"size":2920,"mtime":1627282349514,"results":"43","hashOfConfig":"35"},{"size":13732,"mtime":1628025557612,"results":"44","hashOfConfig":"35"},{"size":2870,"mtime":1623746926763,"results":"45","hashOfConfig":"35"},{"size":12415,"mtime":1628111902536,"results":"46","hashOfConfig":"35"},{"size":371,"mtime":1623224216980,"results":"47","hashOfConfig":"35"},{"size":41984,"mtime":1628021440519,"results":"48","hashOfConfig":"35"},{"size":1109,"mtime":1626302617495,"results":"49","hashOfConfig":"35"},{"size":225,"mtime":1623101914080,"results":"50","hashOfConfig":"35"},{"size":3969,"mtime":1628061275210,"results":"51","hashOfConfig":"35"},{"size":572,"mtime":1627006145411,"results":"52","hashOfConfig":"35"},{"size":1588,"mtime":1626205668867,"results":"53","hashOfConfig":"35"},{"size":239,"mtime":1623101914080,"results":"54","hashOfConfig":"35"},{"size":3726,"mtime":1628112044937,"results":"55","hashOfConfig":"35"},{"size":638,"mtime":1623312148541,"results":"56","hashOfConfig":"35"},{"size":7662,"mtime":1626303025160,"results":"57","hashOfConfig":"35"},{"size":3349,"mtime":1625954766959,"results":"58","hashOfConfig":"35"},{"size":1936,"mtime":1628111883332,"results":"59","hashOfConfig":"35"},{"size":1431,"mtime":1624922461190,"results":"60","hashOfConfig":"35"},{"size":2799,"mtime":1625175421499,"results":"61","hashOfConfig":"35"},{"size":1228,"mtime":1628022726001,"results":"62","hashOfConfig":"35"},{"size":3260,"mtime":1627281139750,"results":"63","hashOfConfig":"35"},{"size":833,"mtime":1623783620940,"results":"64","hashOfConfig":"35"},{"size":1504,"mtime":1626198834609,"results":"65","hashOfConfig":"35"},{"size":8303,"mtime":1627982895144,"results":"66","hashOfConfig":"35"},{"size":3262,"mtime":1627949296284,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"aip4tt",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/index.js",[],["151","152"],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/App.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/InicioPagina.js",["153"],"import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Navbar from '../components/Navbar/Navbar'\nimport './InicioPagina.scss'\nimport ContactUs from '../components/Others/ContactUs'\nimport MapInicio from '../components/Inicio/MapInicio'\nimport MilesDeGuias from '../components/Inicio/MilesDeGuias'\nimport ContactForm from '../components/Inicio/ContactForm'\nimport NuestrosVehiculos from '../components/Inicio/NuestrosVehiculos'\nimport MasBeneficios from '../components/Inicio/MasBeneficios'\nimport AyudamosNegocios from '../components/Inicio/AyudamosNegocios'\nimport Footer from '../components/Footer/Footer'\nimport FloatingWhatsApp from '../components/Others/WhatsappBtn'\n\n//Images\nimport imgServicioOne from '../assets/Inicio/Servicios/Quiken_Paqueteria_Local.png'\nimport imgServicioTwo from '../assets/Inicio/Servicios/Quiken_Envios_Nacionales_Internacionales.png'\nimport imgServicioThree from '../assets/Inicio/Servicios/Quiken_Fulfillment.png'\nimport imgServicioFour from '../assets/Inicio/Servicios/Quiken_Suministros.png'\nimport QuikenContacto from '../assets/Inicio/Quiken_Contacto.png'\nimport RastreaPedido from '../components/Others/RastreaPedido'\nimport WhatsappBtn from '../components/Others/WhatsappBtn';\n\nconst InicioPagina = () => {\n  return (\n    <>\n      <Navbar/>\n      \n      <div className=\"hero-image-wrapper\">\n        <div className=\"hero-text-wrapper\">\n          <h1 className='main-title-heading'>ENVIOS</h1>\n          <h1 className='main-title-heading'>EFICIENTES</h1>\n          <p className='main-title-subheading'>La mejor calidad y profesionalismo en servicios de entrega local y nacional para negocios</p>\n        </div>\n      </div>\n      \n      <div className=\"background-rastrea\">\n        <RastreaPedido/>\n      </div>\n\n        <h1 className=\"section-heading\">Conoce nuestros servicios</h1>\n        \n        <div className=\"row-wrapper-inicio\">  \n          <div className=\"servicio-wrapper\">\n              <div className=\"wrapper-50\">\n                <h2 className=\"heading-servicio\">Paqueteria Local</h2>\n                <p className=\"paragraph-servicio\">con entregas del mismo día y día siguiente (24-36 hrs) en Nuevo León, Ciudad de México, Léon y Querétaro.</p>\n                <div className=\"link-holder-wrapper\">\n                  <Link className=\"link-servicio\" to=\"/paqueterialocal\">Conoce más</Link>\n                </div>\n                <img className=\"imagen-servicio1\" alt=\"imagen-servicio\" src={imgServicioOne} />\n              </div>\n          </div>\n\n          <div className=\"servicio-wrapper\">\n              <div className=\"wrapper-50\">\n                <h2 className=\"heading-servicio\">Envíos Nacionales e Internacionales</h2>\n                <p className=\"paragraph-servicio\">con entregas del mismo día y día siguiente (24-35hrs) en nuevo León, Ciudad de México, Léon y Querétaro.</p>\n                <div className=\"link-holder-wrapper\">\n                  <Link className=\"link-servicio\" to=\"/paqueterialocal\">Conoce más</Link>\n                </div>\n                <img className=\"imagen-servicio\" alt=\"imagen-servicio\"src={imgServicioTwo} />\n              </div>  \n          </div>\n        </div>\n\n        <div className=\"row-wrapper-inicio\">  \n          <div className=\"servicio-wrapper\">\n              <div className=\"wrapper-50\">\n                <h2 className=\"heading-servicio\">Fulfillment</h2>\n                <p className=\"subheading-servicio\">(Almacenaje y Pick&Pack)</p>\n                <p className=\"paragraph-servicio\">Almacenamiento con más de 10,000 mts2 de almacenamiento en México y Estados Unidos.</p>\n                <div className=\"link-holder-wrapper\">\n                  <Link className=\"link-servicio\" to=\"/paqueterialocal\">Conoce más</Link>\n                </div>\n                <img className=\"imagen-servicio\" alt=\"imagen-servicio\" src={imgServicioThree} />\n              </div>\n          </div>\n\n          <div className=\"servicio-wrapper\">\n              <div className=\"wrapper-50\">\n                <h2 className=\"heading-servicio\">Suministros/Embalaje</h2>\n                <p className=\"paragraph-servicio\">Personaliza tus cajas y sobres con tu logo, lleva tu marca a todos lados!</p>\n                <div className=\"link-holder-wrapper\">\n                  <Link className=\"link-servicio\" to=\"/paqueterialocal\">Conoce más</Link>\n                </div>\n                <img className=\"imagen-servicio\" alt=\"imagen-servicio\" src={imgServicioFour} />\n              </div>  \n          </div>\n        </div>\n\n        {/* Contact Us Form */}\n        <ContactUs/>\n\n        <MapInicio/>\n\n        <MilesDeGuias/>\n\n        <NuestrosVehiculos/>\n\n        <MasBeneficios/>\n\n        <AyudamosNegocios/>\n        \n        <div className=\"alignment-div\" >\n          <h2 className=\"heading-contact\" >¡Empieza ahora!</h2>\n          <h3 className=\"subheading-contact-form\" >Ponte en contacto con un representate de <span>Quiken</span></h3>\n        </div>\n        \n        <div className=\"wrapper-contact-form-image\" >\n          <ContactForm/>\n          <img className=\"image-contacto\" alt=\"imagen-contacto\" src={QuikenContacto} ></img>\n        </div>\n        <Footer/>\n        {/* <FloatingWhatsApp/> */}\n        <WhatsappBtn/>\n    </>\n\n  )\n}\n\nexport default InicioPagina;\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/ContactoPagina.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/RastreoPagina.js",["154","155","156","157"],"import React,  { useState, useEffect} from 'react'\nimport { useParams ,useHistory} from 'react-router'\nimport Navbar from '../components/Navbar/Navbar'\nimport './RastreoPagina.scss';\nimport styled from 'styled-components'\nimport IconoRastreo from '../assets/Inicio/Icono_rastreo-43.svg'\nimport Footer from '../components/Footer/Footer'\nimport ShippingInformation from '../components/Tracking/ShippingInformation';\nimport PalomaQuiken from '../assets/Inicio/paloma-quiken.svg'\nimport FloatingWhatsApp from '../components/Others/WhatsappBtn'\n\nconst RasteroPagina = () => {\n  \n  const history = useHistory()\n\n  const [needsRerender, setNeedsRerender] = useState(true)\n  const [loading, setLoading] = useState(true)\n  const [guideInformation, setGuideInformation] = useState()\n  const [hasError, setHasError] = useState(false)\n  const [shipmentHistory, setShipmentHistory] = useState()\n  const [newTrackedGuide, setNewTrackedGuide] = useState('')\n  const [error, setError] = useState()\n  const params = useParams()\n  const guideNumber = params.guide\n  \n  const handleChange = (event) => {\n    setNewTrackedGuide(event.target.value)\n  }\n\n  const handleClick = () => {\n    history.push(`/rastreo/${newTrackedGuide}`)\n    setNeedsRerender(!needsRerender)\n  }\n \n  const getGuideInfo = async () => {\n    console.log('Getting Guide');\n    const body = {\n      \"clientDetail\": {\n        \"accountName\": \"rastreo@quiken.mx\",\n        \"apiKey\": \"QNy1tpJFfmYIOlqF1oiwBy7iE46LXuwb\"\n      },\n      \"trackingNumbers\": [\n        guideNumber\n      ]\n    }\n\n    const url = 'http://api.quiken.mx/track'\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(body)\n    })\n    \n    const data = await response.json()\n\n    try {\n      setGuideInformation(data)\n      setShipmentHistory(data.data.shipments[0].shipmentHistory)\n    }\n    catch {      \n      console.log(data.description === \"No shipments found\")\n      \n      if (!guideNumber === true) {\n        setError('Por favor ingresa tu codigo de rastreo.')\n        setHasError(true)\n        \n      } \n      \n      else if (data.description === \"No shipments found\") {\n        console.log('this applies 1');\n        setError('Tu numéro de rastreo no fue encontrado. Favor de ingresarlo nuevamente.')\n        setHasError(true)\n      } \n      \n      else {\n        console.log('this applies 2');\n        // setError('Tu numéro de rastreo no fue encontrado. Favor de ingresarlo nuevamente.')\n        setHasError(true)\n      }\n      \n    }\n    setLoading(false)\n  }\n\n\n  useEffect(() => {\n    setLoading(true)\n    setHasError(false)\n    setError('')\n      getGuideInfo()  \n  }, [needsRerender])\n\n  \n  return (\n    <>\n      <Navbar/>\n      <FloatingWhatsApp/>\n      <div className=\"request-body-wrapper\">\n\n        {loading ? \n        <div>...Loading</div> :\n        <div>\n          <div className=\"div-wrapper-rastero\">\n            <h1 className=\"request-header\">Rastreo y Seguimiento</h1>\n            <div>\n              <div className=\"div-tracking\">\n                <p className=\"rastreo-blue-letters\">Ingresa tu número de rastreo:</p>\n                <div className=\"rastreo-input-div\">\n                  <input id='input-rastreo' className=\"tracking-number-input\" onChange={handleChange} placeholder=\"Código de rastreo\"></input>\n                  {/* <Link to={`/rastreo/${newTrackedGuide}`}> */}\n                    <PlaceHolderLookUp onClick={handleClick}>\n                      <img className=\"icono-rastreo\" src={IconoRastreo}></img>\n                    </PlaceHolderLookUp>\n                  {/* </Link>   */}\n                \n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div>\n            {hasError ? \n            \n            <div className=\"main-wrapper-table-title\">\n              <a href='#input-rastreo'>\n                {\n                hasError === false ? \n                \n                <h1 className=\"estado-de-envio-heading-ingresa-guia\">\n                  Favor de ingresar un código de rastreo\n                </h1> : \n                \n                <h1 className=\"estado-de-envio-heading-ingresa-guia\">\n                  {error}\n                </h1>\n                }\n              </a>\n              \n              <div className=\"wrapper-table-titulo\">\n                <div>\n                  \n                  <h1 className=\"historial-pedido-heading\">Historial de Pedido</h1>\n                  \n                  <table className=\"tracking-table\">\n                    <thead>\n                      <tr>\n                        <th className=\"table-header-tracking\">Estatus</th>\n                        <th className=\"table-header-tracking\">Descripción</th>\n                        <th className=\"table-header-tracking\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"tbody-tracking-table\">\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                      \n                    </tbody>\n                  </table> \n                \n                </div>\n            </div>\n            \n            </div> : \n            \n            <div>\n              <ShippingInformation guideNumber={guideNumber} shipmentHistory={shipmentHistory}/>\n            </div> }\n              \n          </div>\n          \n          \n          {/* <>\n          <div>\n            <h1 className=\"estado-de-envio-heading\">Estado de envío</h1>\n            <h1 className=\"estado-de-pedido\">Status: <span>{guideNumber}</span> </h1>\n            <h1 className=\"estado-de-pedido\">Código de rastreo:  <span>{guideNumber}</span></h1>\n          </div>  \n\n          <div>\n            <h1 className=\"historial-pedido-heading\">Historial de Pedido</h1>\n            \n            <table className=\"tracking-table\">\n              <thead>\n                <tr>\n                  <th className=\"table-header-tracking\">Estatus</th>\n                  <th className=\"table-header-tracking\">Descripción</th>\n                  <th className=\"table-header-tracking\">Fecha</th>\n                </tr>\n              </thead>\n              <tbody className=\"tbody-tracking-table\">\n                {shipmentHistory.map((step) => {\n                  return (\n                    <tr>\n                    <td className=\"table-data-tracking\">{step.status}</td>\n                    <td className=\"table-data-tracking\">{step.description}</td>\n                    <td className=\"table-data-tracking\">{step.date}</td>\n                  </tr>)\n                })}\n              </tbody>\n            </table> \n          </div>\n          </> */}\n\n        </div>\n        \n      }\n      <Footer/>\n\n      </div>\n\n    </>  \n  )\n}\n\nconst PlaceHolderLookUp = styled.div`\nheight: 32px;\nwidth: 30px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center ;\nbackground-color: red;\nbackground-image: url(\"./\");\nborder-radius: 0px 5px 5px 0px;\n/* border: solid 1px black; */\n@media (max-width: 768px) {\n    height: 30px;\n    width: 50px;\n    align-self: center;\n    justify-self: center;\n    \n  } \n`\n\nexport default RasteroPagina;","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/FulfillmentPagina.js",["158"],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/SignUpPagina.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/ForgotPasswordPagina.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/SignInPagina.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/UserDashboard.js",["159","160","161","162","163","164","165","166","167","168","169"],"import { useState, useEffect } from \"react\";\nimport { useHistory, Link } from 'react-router-dom'\nimport axios from \"axios\";\nimport \"./UserDashboard.scss\"\nimport Navbar from '../components/Navbar/Navbar'\nimport GuideTable from '../components/UserDashboard/GuideTable'\nimport Footer from '../components/Footer/Footer'\n\nconst UserDashboard = () => {   \n\n  const [loggedInUser, setLoggedInUser] = useState('')\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState('')\n  const [userGuides, setUserGuides] = useState([])\n  const [error, setError] = useState(\"\");\n  const [privateData, setPrivateData] = useState(\"\");\n  const history = useHistory();\n  const [userPoints, setUserPoints] = useState(0)\n\n  //States Dashboard\n  const [userSaldo, setUserSaldo] = useState()\n  const [totalRecargas, setTotalRecargas] = useState()\n  const [pesoPromedioGuias, setPesoPromedioGuias] = useState()\n  const [averageCostGuides, setAverageCostGuides] = useState()\n  const [averageCost, setAverageCost] = useState()\n\n\n  //States for quoate\n  const [testPackageLength, setTestPackageLength] = useState()\n  const [testPackageWidth, setTestPackageWidth] = useState()\n  const [testPackageHeight, setTestPackageHeight] = useState()\n  const [testPackageWeight, setTestPackageWeight] = useState()\n  const [testReceiverPostalCode, setTestReceiverPostalCode] = useState()\n  const [testSenderPostalCode, setTestSenderPostalCode] = useState()\n\n  //Services available\n  const [testServices, setTestServices] = useState()\n  const [testQuoteError, setTestQuoteError] = useState()\n  const [hasQuoteError, setHasQuoteError] = useState(false)\n  const [loadingServicios, setLoadingServicios] = useState(true)\n\n  //Quoate API Call Function\n  const calculateGuide = async () => {\n    const url = 'https://api.quiken.mx/rate';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n          \"clientDetail\": {\n             \"accountName\": \"rastreo@quiken.mx\",\n             \"apiKey\": \"QNy1tpJFfmYIOlqF1oiwBy7iE46LXuwb\"\n           },\n           \"origin\": {\n             \"name\": \"testSender\",\n             \"company\": \"Default Value\",\n             \"email\": \"test@gmail.com\",\n             \"phone\": \"55555555\",\n             \"country\": \"MX\",\n             \"postalCode\": testSenderPostalCode\n           },\n           \"destination\": {\n             \"name\": \"testReceiber\",\n             \"company\": \"Default Value\",\n             \"email\": \"test2@gmail.com\",\n             \"phone\": \"88888888\",\n             \"country\": \"MX\",\n             \"postalCode\": testReceiverPostalCode\n           },\n           \"package\": {\n             \"content\": \"ropa\",\n             \"type\": 1,\n             \"dimensions\": {\n               \"length\": parseInt(testPackageLength),\n               \"width\": parseInt(testPackageWidth),\n               \"height\": parseInt(testPackageHeight)\n             },\n             \"weight\": parseInt(testPackageWeight)\n           }\n      })\n    });\n    const data = await response.json();\n    console.log(data)\n    if (data.status === \"SUCCESS\") {\n      setTestServices(data.data.services)\n      setLoadingServicios(false)\n      setHasQuoteError(false)\n      \n    } else if (data.status === \"ERROR\") {\n      console.log(data.description)\n      setTestQuoteError(data.description)\n      setHasQuoteError(true)\n      setLoadingServicios(false)\n    }\n    \n  }\n\n\n  //Handle click on quote button\n  const handleQuote = async (event) => {\n    event.preventDefault()\n    await calculateGuide()\n    console.log(testServices)\n  }\n\n  const getAverageCost = async (userGuides) => {\n    let totalGuideCostSum = 0;\n    console.log(userGuides.length)\n    let counterGuides = await userGuides.length\n    console.log(counterGuides)\n    userGuides.forEach((guide) => {\n      console.log(avgCost)\n      avgCost = totalGuideCostSum + parseInt(guide.guideCost)\n    })\n    let avgCost = totalGuideCostSum / userGuides.length\n    console.log(avgCost)\n  }\n\n\n\n  //Get Fetch Guides Function\n  const loadUserGuides = async (currentUser) => {\n    console.log('currentUser', currentUser)\n    await fetch(`api/user/guides/${currentUser}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(response => response.json())\n    .then(json =>  {\n      console.log('Success:', json);\n      console.log(json.data)\n      setUserGuides(json.data.reverse())\n    })\n    .then(() => getAverageCost(userGuides))\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  };\n\n  //Fetch Private Data\n  const fetchPrivateDate = async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\n      },\n    };\n    try {\n      \n      //AQUI VAN LAS RUTAS DE LAS GUIAS\n      const { data } = await axios.get(\"/api/private\", config);\n      setPrivateData(data.data);\n\n\n\n    } catch (error) {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"username\");\n      setError(\"You are not authorized please login\");\n    }\n\n  };\n\n  //Get Userpoints\n  const requestGetPoints = async (username) => {\n    const url = 'api/user/getPoints/'\n    console.log(username, 'RUNNING THIS')\n    \n    const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n          },\n        body: JSON.stringify ({\n            'username': username\n        })\n    });\n    \n    const data = await response.json()\n    console.log(data)\n    console.log(response.status, 'STATUS')\n    if (response.status === 200) {\n        setUserPoints(data.data[0].points)\n        // setTotalRecargas(data.data[0].recargas)\n    }\n    \n    \n}\n\n\n  useEffect(() => {\n    fetchPrivateDate();\n    let currentUser = localStorage.getItem('username')\n    let currentUserEmail = localStorage.getItem('email')\n    requestGetPoints(currentUserEmail)\n    setLoggedInUser(currentUser)\n    setLoggedInUserEmail(currentUserEmail)\n    loadUserGuides(currentUserEmail);\n  }, []);\n\n  const logoutHandler = () => {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('email');\n      localStorage.removeItem('username');\n      \n\n      history.push('/signin')\n  }\n\n  return error ? (\n    <>\n      <Navbar/>\n      <div className=\"wrapper-unauthorized-route\">\n        <h1 className=\"unautohorized-heading\">Esta es una ruta privada. Favor de iniciar sesión.</h1>\n        <Link className=\"link-sign-route\" to=\"/signin\">Da click aqui!</Link>\n      </div>\n      {/* <span className=\"error-message\">{error}</span> */}\n      <Footer/>\n    </>\n  ) : (\n    <>  \n        <Navbar/>\n            <div className=\"main-wrapper-userdashboard\">\n                <h2 className=\"heading-userdashboards\">Dashboard de Enviós</h2>\n                <div className=\"account-name\">Cuenta: {loggedInUser}</div>\n                <div className=\"account-name\">Email: {loggedInUserEmail}</div>\n                <h1 className=\"cotizador-rapido-main-header\">Cotizador Rapido</h1>\n              \n              <div className=\"main-cotizador-servicios div\">\n                {/* Cotizador */}\n                <div className=\"column-cotizador\">\n                      <h1 className=\"información-paquete-subheading\">Información Paquete</h1>\n                      \n                      <div className=\"div-main-cotizador-rapido\">  \n                        <div className=\"column-cotizador-rapido\">\n                          <label className=\"label-paquete-info\">Largo del paquete (cm)</label>\n                          <input placeholder=\"Largo (cm)\"\n                          onChange={(event) => setTestPackageLength(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Ancho del paquete (cm)</label>\n                          <input placeholder=\"Ancho (cm)\"\n                          onChange={(event) => setTestPackageWidth(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Alto del paquete (cm)</label>\n                          <input placeholder=\"Alto (cm)\"\n                          onChange={(event) => setTestPackageHeight(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Peso del paquete (kg)</label>\n                          <input placeholder=\"Peso (cm)\"\n                          onChange={(event) => setTestPackageWeight(event.target.value)}\n                          />\n\n                        </div>\n                        \n                        <div className=\"column-cotizador-rapido\">\n                        <label className=\"label-paquete-info\">¿Desde dónde envias?</label>\n                          <input placeholder=\"Codigo Postal\"\n                          onChange={(event) => setTestSenderPostalCode(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">¿Hacia dónde envias?</label>\n                          <input placeholder=\"Codigo Postal\"\n                          onChange={(event) => setTestReceiverPostalCode(event.target.value)}\n                          />\n                        </div>\n                        \n                    </div>\n                      <div className=\"cotizador-row-button\">\n                        <button class=\"button-cotizar-servicios\"onClick={(event) => handleQuote(event)}>Cotizar</button>\n                      </div>\n                </div>\n\n\n                {/* Empieza aqui */}\n                <div className=\"column-cotizador\">\n                      <h1 className=\"servicios-subheading-cotizador\">Servicios ofrecidos:</h1>\n                      {loadingServicios ? <h1 className=\"servicios-paragraph-cotizador\">Utiliza nuestro cotizador rapido para ver los servicios de entrega que manejamos.</h1> : \n                        hasQuoteError ? <div>{testQuoteError}</div> : \n                      \n      \n                      testServices.map((servicio) => {\n                        return (\n                          <div className=\"row-servicio-quota\">\n                            <table>\n                              <tr>\n                                <th>Codigo de Servico:</th>\n                                <th>Tipo de Servicio:</th>\n                                <th>Tiempo de Entrega:</th>\n                                <th>Precio:</th>\n                              </tr>\n                              <tr>\n                                <td>{servicio.name}</td>\n                                <td>{servicio.type}</td>\n                                <td>{servicio.estimateDelivery}</td>\n                                <td>${servicio.totalPrice}.99</td>\n                              </tr>\n                            </table>\n                          </div>\n                        )\n                      })}\n                      \n                </div>\n                {/* Termina Aqui */}\n\n              </div>\n\n              <div className=\"menu-opciones-saldo\">\n                \n                <div className=\"card-row-wrapper\">\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Saldo disponible</label>\n                    <h1 className=\"featured-number\">$ {userPoints}.00</h1>\n                    <Link className=\"recargar-saldo-link\" to=\"/recargarsaldo\">\n                      Recagar Saldo {\">\"}\n                    </Link>\n                  </div>\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Costo Promedio</label>\n                    <h1 className=\"featured-number\">$ 0.00</h1>\n                    <Link className=\"recargar-saldo-link-trans\" >Recagar Saldo {\">\"}</Link>\n                  </div>\n                </div>\n\n                <div className=\"card-row-wrapper\">\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Total Recargas</label>\n                    <h1 className=\"featured-number\">$ {totalRecargas}.00</h1>\n                    <Link className=\"recargar-saldo-link\" to=\"/recargarsaldo\">Recagar Saldo {\">\"}</Link>\n                  </div>\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Peso Promedio</label>\n                    <h1 className=\"featured-number\">0.00 Kg</h1>\n                    <Link className=\"recargar-saldo-link-trans\" >Recagar Saldo {\">\"}</Link>\n                  </div>\n                </div>\n\n                <div className=\"card-row-wrapper\">\n                  <Link to=\"/recargarsaldo\">\n                    <button className=\"btn-contact-form \">Recargar Saldo</button>        \n                  </Link>\n                  <Link to=\"/createguide\">\n                    <button id=\"blue\" className=\"btn-contact-form \">Crear Guia</button>\n                  </Link>\n                  \n                    <button onClick={logoutHandler} className=\"btn-contact-form \">Logout</button>\n                  \n                </div>\n\n              </div>\n\n              <h1 className=\"tabla-de-guias-heading\">Tabla de Guias</h1>  \n              <GuideTable userGuides={userGuides}/>\n              \n              <div className=\"div-row-wrapper\">\n                <Link to=\"/createguide\">\n                  <button id=\"blue\" className=\"btn-contact-form\">Crear Guida</button>\n                </Link>\n                <button className=\"btn-contact-form \" onClick={logoutHandler}>Logout</button>\n              </div>\n             <Footer/>\n            </div>\n        \n    </>\n  );\n};\n\nexport default UserDashboard;","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/ResetPasswordPagina.js",["170","171"],"import { useState} from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ResetPasswordPagina.scss\";\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport './ResetPasswordPagina.scss'\n\nconst ResetPasswordPagina = (props) => {\n\n  const match = useParams()\n  console.log(match.resetToken)\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const resetPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.put(\n        `/api/auth/resetpassword/${match.resetToken}`,\n        {\n          password,\n        },\n        config\n      );\n\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.data);\n    }\n  };\n\n  return (\n    <div className=\"resetpassword-screen\">\n      <Navbar/>\n      <div className=\"form-wrapper-div\">\n        <form className=\"forgot-password-form\"\n        onSubmit={resetPasswordHandler}\n        className=\"resetpassword-screen__form\"\n      >\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\n        {error && <span className=\"error-message\">{error} </span>}\n        {success && (\n          <span className=\"success-message\">\n            {success} <Link to=\"/signin\">Login</Link>\n          </span>\n        )}\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"password\">New Password:</label>\n          <input\n            className=\"contact-form-input\"\n            type=\"password\"\n            required\n            id=\"password\"\n            placeholder=\"Enter new password\"\n            autoComplete=\"true\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"confirmpassword\">Confirm New Password:</label>\n          <input\n            className=\"contact-form-input\"\n            type=\"password\"\n            required\n            id=\"confirmpassword\"\n            placeholder=\"Confirm new password\"\n            autoComplete=\"true\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </div>\n        <button className=\"btn-contact\" type=\"submit\">\n          Reset Password\n        </button>\n      </form>\n      </div>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default ResetPasswordPagina;","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/ServiciosPagina.js",["172","173","174","175","176","177","178","179","180"],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/routing/PrivateRoute.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/CreateGuidePagina.js",["181","182","183","184"],"import React, { useState, useEffect} from 'react';\nimport Navbar from '../components/Navbar/Navbar';\nimport axios from 'axios'\nimport './CreateGuidePagina.scss'\nimport Footer from '../components/Footer/Footer'\nimport { Link } from 'react-router-dom';\nimport CheckoutStripe from '../components/Cart/Checkout'\n\nconst CreateGuidePagina = () => {\n\n  //Username for fetching points\n  let username = localStorage.getItem('email')\n\n  //Create Guide Sucess\n  const [success, setSuccess] = useState(false)\n  \n  //Guide Data\n  const [apiGuide, setApiGuide] = useState()\n  const [hrefFile, setHrefFile] = useState(\"\")\n\n  //Payment and Selected Guide\n  // const [selectedGuide, setSelectedGuide] = useState(false)\n  const [selectedService, setSelectedService] = useState()\n  const [paymentMethod, setPaymentMethod] = useState(null)\n\n  //currentUser (HARDCODED)\n  // const [currentUser, setcurrentUser] = useState('')\n  const [guideCost, setguideCost] = useState(0)\n\n  //Types of Services\n  const [services, setServices] = useState()\n  const [loadingQuoteData, setLoadingQuoteData] = useState(true)\n\n  //User Points State\n  const [points, setPoints] = useState(100);\n  const [isPointsEnough, setIsPointsEnough] = useState(false)\n  const [needsReset, setNeedsReset] = useState(false)\n\n    //Origin STATES\n  const [fullNameSender, setFullNameSender] = useState('');\n  const [emailSender, setEmailSender] = useState('');\n  const [phoneNumberSender, setPhoneNumberSender] = useState('');\n  const [streetAndNumberSender, setStreetandNumberSender] = useState('');  \n  const [referenciasSender, setReferenciasSender] = useState('');\n  const [colonySender, setColonySender] = useState('');\n  const [postalCodeSender, setPostalCodeSender] = useState('');\n  const [citySender, setCitySender] = useState('');\n  const [mexicoStateSender, setMexicoStateSender] = useState('');\n    \n  // Origin Error\n  const [fullNameSenderError, setFullNameSenderError] = useState('');\n  const [emailSenderError, setEmailSenderError] = useState('');\n  const [phoneNumberSenderError, setPhoneNumberSenderError] = useState('');\n  const [streetAndNumberSenderError, setStreetandNumberSenderError] = useState('');\n  const [colonySenderError, setColonySenderError] = useState('');\n  const [postalCodeSenderError, setPostalCodeSenderError] = useState('');\n  const [citySenderError, setCitySenderError] = useState('');\n  const [errorQuote, setErrorQuote] = useState(\"\")\n\n    // \"\" STATES\n  const [fullNameReceiver, setFullNameReceiver] = useState('');\n  const [emailReceiver, setEmailReceiver] = useState('');\n  const [phoneNumberReceiver, setPhoneNumberReceiver] = useState('');\n  const [streetAndNumberReceiver, setStreetandNumberReceiver] = useState('');  \n  const [referenciasReceiver, setReferenciasReceiver] = useState('');\n  const [colonyReceiver, setColonyReceiver] = useState('');\n  const [postalCodeReceiver, setPostalCodeReceiver] = useState('');\n  const [cityReceiver, setCityReceiver] = useState('');\n  const [mexicoStateReceiver, setMexicoStateReceiver] = useState('');\n  \n  // To Errors\n  const [fullNameReceiverError, setFullNameReceiverError] = useState('');\n  const [emailReceiverError, setEmailReceiverError] = useState('');\n  const [phoneNumberReceiverError, setPhoneNumberReceiverError] = useState('');\n  const [streetAndNumberReceiverError, setStreetandNumberReceiverError] = useState('');\n  const [colonyReceiverError, setColonyReceiverError] = useState('');\n  const [postalCodeReceiverError, setPostalCodeReceiverError] = useState('');\n  const [cityReceiverError, setCityReceiverError] = useState('');\n  \n  //PACKAGE VALUES\n  const [packageLenght, setPackageLenght] = useState('');\n  const [packageWidth, setPackageWidth] = useState('');\n  const [packageHeight, setPackageHeight  ] = useState('');\n  const [packageWeight, setPackageWeight] = useState('');  \n  const [packageDescription, setPackageDescription] = useState('');\n    //PACKAGE ERRORS\n  const [packageLenghtError, setPackageLenghtError] = useState('');\n  const [packageWidthError, setPackageWidthError] = useState('');\n  const [packageHeightError, setPackageHeightError  ] = useState('');\n  const [packageWeightError, setPackageWeightError] = useState('');  \n  const [packageDescriptionError, setPackageDescriptionError] = useState('');\n\n//Get User Points\nconst requestGetPoints = async (username) => {\n  const url = 'api/user/getPoints/'\n  \n  const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n          'Content-Type': 'application/json',\n        },\n      body: JSON.stringify ({\n          'username': username\n      })\n  });\n  \n  const data = await response.json()\n  if (response.status === 200) {  \n    setPoints(data.data[0].points)\n  }\n}\n\n//Create Guide Function\nconst createGuide = async () => {\n  await createGuideApi() \n}\n//Step One Guide Creation\nconst createGuideApi = async () => {\n  console.log(mexicoStateReceiver, 'Receiver')\n  console.log(mexicoStateSender, 'GUACMOLE')\n  const urlApiCreate = 'https://test.quiken.mx/generate';\n  const responseApi = await fetch(urlApiCreate, {\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json',\n    },\n    body: JSON.stringify({\n      \"clientDetail\": {\n        \"accountName\": \"tester2@test.com\",\n        \"apiKey\": \"8oNVxt6MTfmv8aYUfhZyxwcWqQ7ELx2y\"\n      },\n      \"origin\": {\n        \"name\": fullNameSender,\n        \"company\": fullNameSender,\n        \"email\": emailSender,\n        \"phone\": phoneNumberSender,\n        \"street\": streetAndNumberSender,\n        \"ext_number\": \"col\",\n        \"int_number\": \"\",\n        \"district\": \"\",\n        \"city\": citySender,\n        \"state\": mexicoStateSender,\n        \"country\": \"MX\",\n        \"postalCode\": postalCodeSender,\n        \"reference\": referenciasSender\n      },\n      \"destination\": {\n        \"name\": fullNameSender,\n        \"company\": fullNameReceiver,\n        \"email\": emailReceiver,\n        \"phone\": phoneNumberReceiver,\n        \"street\": streetAndNumberReceiver,\n        \"ext_number\": \"col\",\n        \"int_number\": \"\",\n        \"district\": \"\",\n        \"city\": cityReceiver,\n        \"state\": mexicoStateReceiver,\n        \"country\": \"MX\",\n        \"postalCode\": postalCodeReceiver,\n        \"reference\": referenciasReceiver\n      },\n      \"package\": {\n        \"content\": \"ropa\",\n        \"type\": 1,\n        \"dimensions\": {\n          \"length\": 10,\n          \"width\": 10,\n          \"height\": 25\n        },\n        \"weight\": 1\n      },\n      \"shipment\": {\n        \"service\": selectedService\n      },\n      \"settings\": {\n        \"labelFormat\": \"pdf\"\n      }\n    })\n  });\n  console.log(responseApi)\n  const data = await responseApi.json()\n  console.log('DATA API REQUEST', data)\n  setApiGuide(data)\n  createGuideQuiken(data)\n}\n\n//Step Two Guide Creation\nconst createGuideQuiken = async (apiGuide) => {\n    let guideStatus = \"Activa\"\n    console.log(apiGuide)\n    let trackingNumber = apiGuide.data.trackingNumber\n    console.log(trackingNumber, 'THIS IS TRACKIGN NUMBER')\n    let fileUrl = apiGuide.data.fileUrl\n    setHrefFile(fileUrl)\n    \n    //Creating Guide in Database:\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      let currentUser = localStorage.getItem('email')\n      console.log(currentUser)\n      const { data } = await axios.post(\n        \"/api/user/createguide\",\n        {\n          currentUser,\n          guideCost,\n          trackingNumber,\n          fileUrl,\n          guideStatus,      \n          fullNameSender,\n          emailSender,\n          phoneNumberSender,\n          streetAndNumberSender,  \n          referenciasSender,\n          colonySender,\n          postalCodeSender,\n          citySender,\n          mexicoStateSender,\n          fullNameReceiver,\n          emailReceiver,\n          phoneNumberReceiver,\n          streetAndNumberReceiver,  \n          referenciasReceiver,\n          colonyReceiver,\n          postalCodeReceiver,\n          cityReceiver,\n          mexicoStateReceiver,\n          packageLenght,\n          packageWidth,\n          packageHeight,\n          packageWeight,\n          packageDescription\n        },\n        config\n      );\n      console.log(data, 'THIS IS DATA')\n      setSuccess(true)\n      alert('Tu guida fue creada exitosamente.')\n      // history.push(\"/userdashboard\");\n    } catch (error) {\n      console.log(error)\n    }\n    \n}\n\n// Guide Cost Function\nconst calculateNewGuidePrice = async () => {\n  const url = 'https://api.quiken.mx/rate';\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n        \"clientDetail\": {\n           \"accountName\": \"rastreo@quiken.mx\",\n           \"apiKey\": \"QNy1tpJFfmYIOlqF1oiwBy7iE46LXuwb\"\n         },\n         \"origin\": {\n           \"name\": fullNameSender,\n           \"company\": \"Default Value\",\n           \"email\": emailSender,\n           \"phone\": phoneNumberSender,\n           \"country\": \"MX\",\n           \"postalCode\": postalCodeSender\n         },\n         \"destination\": {\n           \"name\": fullNameReceiver,\n           \"company\": \"Default Value\",\n           \"email\": emailReceiver,\n           \"phone\": phoneNumberReceiver,\n           \"country\": \"MX\",\n           \"postalCode\": postalCodeReceiver\n         },\n         \"package\": {\n           \"content\": \"ropa\",\n           \"type\": 1,\n           \"dimensions\": {\n             \"length\": parseInt(packageLenght),\n             \"width\": parseInt(packageWidth),\n             \"height\": parseInt(packageHeight)\n           },\n           \"weight\": parseInt(packageWeight)\n         }\n    })\n  });\n  const data = await response.json();\n  console.log(data)\n  if (data.status === \"SUCCESS\") {\n    console.log(data.data.services, 'DATA DATA SERVICES');\n    setServices(data.data.services)\n    setLoadingQuoteData(false)\n    \n  } else if (data.status === \"ERROR\") {\n    setErrorQuote(data.description)\n    setLoadingQuoteData(false)\n  }\n  \n}\n\nconst handleSelectGuide = (servicio) => {\n  setSelectedService(servicio.code)\n  console.log(servicio.code)\n  setguideCost(servicio.totalPrice)\n}\n\n\n//   Validation Functions\n  function hasLetters (phone) {\n    return /^\\d+$/.test(phone)\n  }\n\n  function emailIsValid (email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n  }\n\n  const formValidation = () => {\n    const fullNameSenderError = {};\n    const emailSenderError = {};\n    const phoneNumberSenderError = {};\n    const streetAndNumberSenderError = {};\n    const colonySenderError = {};\n    const postalCodeSenderError = {};\n    const citySenderError = {};\n    const fullNameReceiverError = {};\n    const emailReceiverError = {};\n    const phoneNumberReceiverError = {};\n    const streetAndNumberReceiverError = {};\n    const colonyReceiverError = {};\n    const postalCodeReceiverError = {};\n    const cityReceiverError = {};\n    const packageLenghtError = {};\n    const packageWidthError = {};\n    const packageHeightError = {};\n    const packageWeightError = {};\n    const packageDescriptionError = {};\n    \n\n    let isValid = true;\n    \n    //Name Validation Origin\n    if (fullNameSender.trim().length < 5) {\n      fullNameSenderError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n      isValid = false;\n      console.log(\"name too short\")\n    }\n\n    if (fullNameSender.trim().match(/[0-9]/)) {\n      fullNameSenderError.FullNameLong = \"Favor de ingresar solamente letras\";\n      isValid = false;\n    }\n\n    setFullNameSenderError(fullNameSenderError)\n\n    //REGEX Email Validation \n    \n    if (emailIsValid(emailSender) === false) {\n      emailSenderError.EmailError = \"El email no es valido\"\n      isValid = false;\n      console.log(\"The email is not valid\")\n    }\n\n    setEmailSenderError(emailSenderError)\n    \n    if (phoneNumberSender.trim().length < 10) {\n      phoneNumberSenderError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n      console.log(\"el telefono es muy corto\")\n      isValid = false;\n    }\n    \n\n    if (hasLetters(phoneNumberSender) === false) {\n      phoneNumberSenderError.PhoneTooShort = \"Favor de introducir solo numeros\"\n      isValid = false;\n    }\n\n    setPhoneNumberSenderError(phoneNumberSenderError)\n\n    if (streetAndNumberSender.trim().length < 5) {\n      streetAndNumberSenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setStreetandNumberSenderError(streetAndNumberSenderError)\n\n    if (colonySender.trim().length < 5) {\n      colonySenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setColonySenderError(colonySenderError)\n\n    if (postalCodeSender.trim().length < 4) {\n      postalCodeSenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    if (postalCodeSender.trim().length > 11) {\n      postalCodeSenderError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n      isValid = false;\n    }\n    \n    setPostalCodeSenderError(postalCodeSenderError)\n\n    if (citySender.trim().length < 5) {\n      citySenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    setCitySenderError(citySenderError)\n\n    // To Section Validation\n\n    if (fullNameReceiver.trim().length < 5) {\n        fullNameReceiverError.FullNameReceiverShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n        isValid = false;\n        console.log(\"name too short\")\n      }\n  \n    if (fullNameReceiver.trim().match(/[0-9]/)) {\n        fullNameReceiverError.FullNameLong = \"Favor de ingresar solamente letras\";\n        isValid = false;\n      }\n  \n    setFullNameReceiverError(fullNameReceiverError)\n    \n    if (emailIsValid(emailReceiver) === false) {\n        emailReceiverError.EmailError = \"El email no es valido\"\n        isValid = false;\n        console.log(\"The email is not valid\")\n      }\n  \n      setEmailReceiverError(emailReceiverError)\n      \n    if (phoneNumberReceiver.trim().length < 10) {\n        phoneNumberReceiverError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n        console.log(\"el telefono es muy corto\")\n        isValid = false;\n      }\n\n      if (hasLetters(phoneNumberReceiver) === false) {\n        phoneNumberReceiverError.PhoneTooShort = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPhoneNumberReceiverError(phoneNumberReceiverError)\n  \n      if (streetAndNumberReceiver.trim().length < 5) {\n        streetAndNumberReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setStreetandNumberReceiverError(streetAndNumberReceiverError)\n  \n      if (colonyReceiver.trim().length < 5) {\n        colonyReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setColonyReceiverError(colonyReceiverError)\n  \n      if (postalCodeReceiver.trim().length < 4) {\n        postalCodeReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n        isValid = false;\n      }\n  \n      if (postalCodeReceiver.trim().length > 11) {\n        postalCodeReceiverError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n        isValid = false;\n      }\n      \n      setPostalCodeReceiverError(postalCodeReceiverError)\n  \n      if (cityReceiver.trim().length < 5) {\n        cityReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n        isValid = false;\n      }\n  \n      setCityReceiverError(cityReceiverError)\n      \n      if (packageLenght.length === 0) {\n        packageLenghtError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageLenght) === false) {\n        console.log(\"solo numeros\")\n        packageLenghtError.PackageLenghtLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageLenghtError(packageLenghtError)\n  \n      if (packageWidth.length === 0) {\n        packageWidthError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageWidth) === false) {\n        console.log(\"solo numeros\")\n        packageWidthError.PackageWidthLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageWidthError(packageWidthError)\n      \n      if (packageHeight.length === 0) {\n        packageHeightError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageHeight) === false) {\n        console.log(\"solo numeros\")\n        packageHeightError.PackageHeightLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageHeightError(packageHeightError)\n  \n      if (packageWeight.length === 0) {\n        packageWeightError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageWeight) === false) {\n        console.log(\"solo numeros\")\n        packageWeightError.PackageWeightLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageWeightError(packageWeightError)\n      \n      if (packageDescription.length === 0) {\n        packageDescriptionError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      setPackageDescriptionError(packageDescriptionError)\n\n    return isValid\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = formValidation();\n    if (isValid) {\n      await calculateNewGuidePrice()\n  }  \n\n  else {\n    setLoadingQuoteData(true)\n    setServices()\n    setguideCost(0)\n  }\n}\n\n\nconst payWithPoints = async (username, guideCost) => {\n  const url = 'api/user/payWithPoints'\n  console.log(username, 'RUNNING THIS')\n  console.log('GUIDE COST', guideCost)\n  \n  const response = await fetch(url, {\n      method: \"PUT\",\n      headers: {\n          'Content-Type': 'application/json',\n        },\n      body: JSON.stringify ({\n          'username': username,\n          'guideCost': guideCost \n      })\n  });\n  \n  const data = await response.json()\n  console.log(data)\n  console.log(response.status, 'STATUS')\n  if (response.status === 200) {\n      alert('Tu pago con puntos fue exitoso. Agradecemos tu compra')\n      setNeedsReset(true)\n      createGuide()\n  }   \n}\n\n//Use Effect for Payment With Points\nuseEffect(() => {\n  setNeedsReset(false)\n  requestGetPoints(username)\n  setIsPointsEnough(false)\n  const difference = points - guideCost\n  if (difference >= 0) {\n    setIsPointsEnough(true)\n  }\n}, [paymentMethod, points, needsReset])\n\n    return (\n      <>\n        <Navbar/>\n        <div className=\"main-wrapper-page\">                    \n            \n            {/* FIRST TWO SECTIONS */}\n            <div className=\"row-first-two-sections\">              \n              {/* ORIGIN SECTION */}\n              <div className=\"seccion-desde-donde-envias\">\n              <h1 className=\"subheading-form-create-guide\"> 1. ORIGEN:</h1>\n                  <div>\n                  <div>\n                  {/* <label className=\"form-label\" style={{display:'block'}}>Nombre Completo <span style={{color: \"red\"}}>*</span></label> */}\n                    <label className=\"label-create-guide-form\">Nombre Completo</label>\n                    <input className=\"input-create-guide-form\" value={fullNameSender}\n                        onChange= {event => setFullNameSender(event.target.value)}\n                        type=\"text\" placeholder=\"Nombre Completo\" />\n                    {Object.keys(fullNameSenderError).map((key) => {return <div>{fullNameSenderError[key] }</div>})}\n                  </div>\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Correo Electrónico</label>\n                      <input className=\"input-create-guide-form\" value={emailSender} onChange={(event) => setEmailSender(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                      </div>                \n                      {Object.keys(emailSenderError).map((key) => { return <div>{emailSenderError[key]}</div> })}  \n                      \n                  <div>\n                  <label className=\"label-create-guide-form\">Teléfono</label>\n                      <input className=\"input-create-guide-form\" value={phoneNumberSender} onChange={(event) => setPhoneNumberSender(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                      {Object.keys(phoneNumberSenderError).map((key) => {return <div>{phoneNumberSenderError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Calle y Número</label>\n                      <input className=\"input-create-guide-form\" value={streetAndNumberSender} onChange={(event) => setStreetandNumberSender(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                      </div>\n                      {Object.keys(streetAndNumberSenderError).map((key) => {return <div>{streetAndNumberSenderError[key] }</div>})}\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Referencia</label>\n                      <input className=\"input-create-guide-form\" value={referenciasSender} onChange={(event) => setReferenciasSender(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n                      </div>\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Colonia</label>\n                      <input className=\"input-create-guide-form\" value={colonySender} onChange={(event) => setColonySender(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                      </div>\n                  {Object.keys(colonySenderError).map((key) => {return <div>{colonySenderError[key] }</div>})}\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Código Postal</label>\n                      <input className=\"input-create-guide-form\" value={postalCodeSender} onChange={(event) => setPostalCodeSender(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                      </div>\n                  {Object.keys(postalCodeSenderError).map((key) => {return <div>{postalCodeSenderError[key] }</div>})}\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Ciudad</label>\n                      <input className=\"input-create-guide-form\" value={citySender} onChange={(event) => setCitySender(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                      </div>\n                  {Object.keys(citySenderError).map((key) => {return <div>{citySenderError[key] }</div>})}\n\n                  <div className=\"field-holder\">\n                      <label className=\"label-create-guide-form\">Estado</label>\n                      <select className=\"input-create-guide-form\" name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateSender(event.target.value)}>\n                        <option value=\"no\">Seleccione Estado.</option>\n                        {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                        <option value=\"Baja California\">Baja California</option>\n                        <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                        {/* <option value=\"Campeche\">Campeche</option>\n                        <option value=\"Chiapas\">Chiapas</option> */}\n                        <option value=\"CH\">Chihuahua</option>\n                        <option value=\"CX\">Ciudad de México</option>\n                        <option value=\"CO\">Coahuila</option>\n                        {/* <option value=\"Colima\">Colima</option> */}\n                        <option value=\"DG\">Durango</option>\n                        {/* <option value=\"Estado de México\">Estado de México</option> */}\n                        <option value=\"GT\">Guanajuato</option>\n                        {/* <option value=\"Guerrero\">Guerrero</option> */}\n                        <option value=\"HG\">Hidalgo</option>\n                        <option value=\"JL\">Jalisco</option>\n                        {/* <option value=\"Michoacán\">Michoacán</option>\n                        <option value=\"Morelos\">Morelos</option>\n                        <option value=\"Nayarit\">Nayarit</option> */}\n                        <option value=\"NL\">Nuevo León</option>\n                        {/* <option value=\"Oaxaca\">Oaxaca</option>\n                        <option value=\"Puebla\">Puebla</option> */}\n                        <option value=\"QT\">Querétaro</option>\n                        {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                        <option value=\"SL\">San Luis Potosí</option>\n                        {/* <option value=\"Sinaloa\">Sinaloa</option>\n                        <option value=\"Sonora\">Sonora</option>\n                        <option value=\"Tabasco\">Tabasco</option> */}\n                        <option value=\"TM\">Tamaulipas</option>\n                        {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                        <option value=\"VE\">Veracruz</option>\n                        {/* <option value=\"Yucatán\">Yucatán</option>\n                        <option value=\"Zacatecas\">Zacatecas</option> */}\n                    </select>\n                  </div>\n              \n              </div>\n              </div>\n\n              {/* TO SECTION */}\n              <div className=\"seccion-desde-donde-envias\">\n              <h1 className=\"subheading-form-create-guide\">2. DESTINO:</h1>\n                  <div>\n                  <div>\n                      <label className=\"label-create-guide-form\">Nombre Completo</label>\n                      <input className=\"input-create-guide-form\"\n                      value={fullNameReceiver}\n                      onChange= {event => setFullNameReceiver(event.target.value)}\n                      type=\"text\" placeholder=\"Nombre Completo\" />\n                      </div>\n                      {Object.keys(fullNameReceiverError).map((key) => {return <div>{fullNameReceiverError[key] }</div>})}\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Correo Electrónico</label>\n                      <input className=\"input-create-guide-form\" value={emailReceiver} onChange={(event) => setEmailReceiver(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                      {Object.keys(emailReceiverError).map((key) => { return <div>{emailReceiverError[key]}</div> })}  \n                  </div>                \n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Teléfono</label>\n                      <input className=\"input-create-guide-form\" value={phoneNumberReceiver} onChange={(event) => setPhoneNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                      {Object.keys(phoneNumberReceiverError).map((key) => {return <div>{phoneNumberReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Calle y Número</label>\n                      <input  className=\"input-create-guide-form\" value={streetAndNumberReceiver} onChange={(event) => setStreetandNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                      {Object.keys(streetAndNumberReceiverError).map((key) => {return <div>{streetAndNumberReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Referencias</label>\n                      <input  className=\"input-create-guide-form\" value={referenciasReceiver} onChange={(event) => setReferenciasReceiver(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n                  </div>\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Colonia</label>\n                      <input className=\"input-create-guide-form\" value={colonyReceiver} onChange={(event) => setColonyReceiver(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                      {Object.keys(colonyReceiverError).map((key) => {return <div>{colonyReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                    <label className=\"label-create-guide-form\">Código Postal</label>\n                      <input className=\"input-create-guide-form\" value={postalCodeReceiver} onChange={(event) => setPostalCodeReceiver(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                      {Object.keys(postalCodeReceiverError).map((key) => {return <div>{postalCodeReceiverError[key] }</div>})}\n                  </div>\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Ciudad</label>\n                      <input className=\"input-create-guide-form\" value={cityReceiver} onChange={(event) => setCityReceiver(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                      {Object.keys(cityReceiverError).map((key) => {return <div>{cityReceiverError[key] }</div>})}\n                  </div>\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Estado</label>\n                      <select className=\"input-create-guide-form\" name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateReceiver(event.target.value)}>\n                      <option value=\"no\">Seleccione Estado.</option>\n                      {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                      <option value=\"Baja California\">Baja California</option>\n                      <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                      {/* <option value=\"Campeche\">Campeche</option>\n                      <option value=\"Chiapas\">Chiapas</option> */}\n                      <option value=\"CH\">Chihuahua</option>\n                      <option value=\"CX\">Ciudad de México</option>\n                      <option value=\"CO\">Coahuila</option>\n                      {/* <option value=\"Colima\">Colima</option> */}\n                      <option value=\"DG\">Durango</option>\n                      {/* <option value=\"Estado de México\">Estado de México</option> */}\n                      <option value=\"GT\">Guanajuato</option>\n                      {/* <option value=\"Guerrero\">Guerrero</option> */}\n                      <option value=\"HG\">Hidalgo</option>\n                      <option value=\"JL\">Jalisco</option>\n                      {/* <option value=\"Michoacán\">Michoacán</option>\n                      <option value=\"Morelos\">Morelos</option>\n                      <option value=\"Nayarit\">Nayarit</option> */}\n                      <option value=\"NL\">Nuevo León</option>\n                      {/* <option value=\"Oaxaca\">Oaxaca</option>\n                      <option value=\"Puebla\">Puebla</option> */}\n                      <option value=\"QT\">Querétaro</option>\n                      {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                      <option value=\"SL\">San Luis Potosí</option>\n                      {/* <option value=\"Sinaloa\">Sinaloa</option>\n                      <option value=\"Sonora\">Sonora</option>\n                      <option value=\"Tabasco\">Tabasco</option> */}\n                      <option value=\"TM\">Tamaulipas</option>\n                      {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                      <option value=\"VE\">Veracruz</option>\n                      {/* <option value=\"Yucatán\">Yucatán</option>\n                      <option value=\"Zacatecas\">Zacatecas</option> */}\n                      </select>\n                  </div>\n                  \n                  </div>\n              </div>\n              \n            </div>\n\n            \n            {/* THIRD AND FOURTH SECTION */}\n            <div className=\"third-forth-sections\">  \n              {/* PACKAGE SECTION */}\n              <div className=\"seccion-informacion-paquete\">\n              <h2 className=\"subheading-form-create-guide\">3. INFORMACIÓN DEL PAQUETE</h2>\n                  <div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Largo (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageLenght} \n                      onChange={(event) => {\n                        setPackageLenght(event.target.value)\n                      }} \n                      type=\"text\" placeholder=\"Largo (cm)\" />\n                      {Object.keys(packageLenghtError).map((key) => {return <div>{packageLenghtError[key]}</div>})}\n                  </div>\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Ancho (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageWidth} \n                      onChange={(event) => {\n                        setPackageWidth(event.target.value)\n                      }} \n                      type=\"email\" placeholder=\"Ancho (cm)\" />\n                      {Object.keys(packageWidthError).map((key) => {return <div>{packageWidthError[key]}</div>})}\n                  </div>                \n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Alto (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageHeight} \n                      onChange={(event) => {\n                        setPackageHeight(event.target.value)\n                      }} \n                      type=\"text\" placeholder=\"Alto (cm)\" />\n                      {Object.keys(packageHeightError).map((key) => {return <div>{packageHeightError[key]}</div>})}\n                  </div>\n                  \n                      {/* <h4>Peso del paquete que envías</h4> */}\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Peso del paquete (kg)</label>\n                      <input className=\"input-create-guide-form\" value={packageWeight} \n                      onChange={(event) => {\n                        setPackageWeight(event.target.value)\n                      }}\n                      type=\"text\" placeholder=\"Peso del paquete en (kg)\" />\n                      {Object.keys(packageWeightError).map((key) => {return <div>{packageWeightError[key]}</div>})}\n                  </div>\n                  \n                      {/* <h4>¿Que envías?</h4> */}\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Contenido del paquete (Descripción corta)</label>\n                      <input className=\"input-create-guide-form\" value={packageDescription} \n                      onChange={(event) => {\n                        setPackageDescription(event.target.value)}\n                        } \n                        type=\"text\" placeholder=\"Contenido del paquete (Descripción corta)\" />\n                        {Object.keys(packageDescriptionError).map((key) => {return <div>{packageDescriptionError[key]}</div>})}\n                  </div>\n                \n                <div className=\"buttons-wrapper-row\">\n                  <Link to=\"/userdashboard\">\n                    <button id=\"blue\" className=\"btn-create-guide-form\" >Regresar</button>\n                  </Link>\n                      <button className=\"btn-create-guide-form\" onClick={(event) => {handleSubmit(event)}}>Cotizar</button>\n                </div>\n                  \n              </div>\n              </div>\n              \n              <div className=\"payment-main-wrapper\">\n                <div className=\"payment-section\">\n                <h1 className=\"subheading-form-create-guide\"> 4. SELECCIONA TU TIPO DE ENVIO:</h1>\n                <div className=\"table-holder\">{ loadingQuoteData ? <div className=\"cotizar-paragraph\">Llena todo los campos y da click en Cotizar!</div>:\n                  <table>\n                    <tr className=\"table-row-heading\">\n                      <th></th>\n                      <th>Servicio</th>\n                      <th>Tiempo Entrega</th>\n                      <th>Precio</th>\n                    </tr>\n                    {\n                      services.map((servicio, i) => {\n                        return (\n                        <tr className=\"table-data-row\" onClick={() => handleSelectGuide(servicio)}>\n                          <td>{i+1}</td>\n                          <td>{servicio.type.toUpperCase()}</td>\n                          <td>{servicio.estimateDelivery}</td>\n                          <td>${servicio.totalPrice}.99</td>\n                        </tr>)\n                      })}\n                  \n                  </table>  \n                  }  \n                \n                </div>\n                <div className=\"wrapper-guide-cost\">\n                      <div>\n                        \n                      </div>\n\n                      <label className=\"heading-guide-cost\">Costo de tu Guia</label>\n                      <br></br>\n                      <label className=\"price-guide-cost\" >{guideCost}.00</label>\n                </div>\n                <h1 className=\"subheading-form-create-guide\"> 5. METODO DE PAGO:</h1>\n                  <MetodoDePagoSelectorDiv guideCost={guideCost} setPaymentMethod={setPaymentMethod} />\n                  {/* <div className=\"payment-method-section-wrapper\">\n                    <label className=\"payment-method-subheading\">Selecciona tu forma de pago</label>\n                    <select className=\"payment-method-selector\" onChange ={(event) => {\n                      setPaymentMethod(event.target.value)\n                      console.log(event.target.value);\n                      }}>\n                      <option value={null}>Escoje Uno</option>\n                      <option value=\"tarjeta\">Tarjeta de Credito</option>\n                      <option value=\"puntos\">Pagar con Puntos</option>\n                    </select>\n                  </div> */}\n                  \n                  <PaymentDiv\n                  username={username} \n                  isPointsEnough={isPointsEnough} \n                  points={points}\n                  payWithPoints={payWithPoints} \n                  paymentMethod={paymentMethod} \n                  guideCost={guideCost} \n                  createGuide={createGuide}/>\n                  {/* <CheckoutStripe guideCost={guideCost} createGuide={createGuide}/> */}\n                  {success ? \n                  <div>\n                    <h1>Tu guía fue creada exitosamente.</h1>\n                    \n                    <a href={hrefFile} target=\"_blank\">\n                      <button className=\"btn-create-guide-form\">Imprimir</button>\n                    </a>\n\n                  </div> : <div></div>}\n                </div>\n              </div>\n            </div>\n            \n            {/* <div className=\"buttons-wrapper\">\n              <button className=\"btn-contact-form\" onClick={(event) => {handleSubmit(event)}}>Siguiente</button>\n            </div> */}\n            \n        </div>\n        <Footer/>\n      </>\n    )\n}\n\nconst PaymentDiv = (props) => {\n  const { paymentMethod,\n    username, \n    guideCost, \n    createGuide, \n    points, \n    isPointsEnough, \n    payWithPoints } = props;\n\n  if (paymentMethod === \"\") {\n    return <div>Nothing</div>\n  } \n  else if (paymentMethod === \"tarjeta\") {\n    return (\n    <div>\n      <h4 className=\"ingresa-tarjeta-datos-subheading\">Ingresa tu tarjeta de credito y da click.</h4>\n      <p className=\"ingresa-tarjeta-descripcion\">(Numéro de tarjeta, fecha de expiración, codigo, codigo postal)</p>\n      <CheckoutStripe guideCost={guideCost} createGuide={createGuide}/>\n    </div>\n  )\n\n  } \n  else if (paymentMethod === \"puntos\") {\n    return (\n    <div className=\"main-wrapper-puntos\">\n          \n          <div className=\"div-saldos-holder\">\n\n            <div>\n              <h1>Saldo Actual:</h1>\n              <h1> $ {points}.00</h1>\n            </div>\n            <div>\n              <h1>Costo de Guida:</h1>\n              <h1>$ {guideCost}.00</h1>\n            </div>\n            <div>\n              <h1>Saldo Nuevo:</h1>\n              <h1>$ {points - guideCost}.00</h1>\n            </div>\n          \n          </div>\n\n          <div className=\"buttons-holder\">\n            \n            \n            {isPointsEnough ? \n            <div>\n              <Link to=\"/recargarsaldo\">\n                <button>Recargar Saldo</button>\n              </Link>\n              <button onClick={() => payWithPoints(username,guideCost)}>Pagar</button>\n            </div>\n            \n             : \n             <div>\n              <div>No cuentas con suficientes puntos. Favor de seleccionar otro metodo de pago o recargar puntos.</div>\n              <Link to=\"/recargarsaldo\">\n                <button>Recargar Saldo</button>\n              </Link>\n            </div>\n              }\n            \n          </div>\n          \n    </div>\n    )\n  } \n  else return <></>\n}\n\nconst MetodoDePagoSelectorDiv = (props) => {\n  \n  const { guideCost, setPaymentMethod } = props\n  \n  if (guideCost > 0) {\n    return (\n      <div className=\"payment-method-section-wrapper\">\n      <label className=\"payment-method-subheading\">Selecciona tu forma de pago</label>\n      <select className=\"payment-method-selector\" onChange ={(event) => {\n        setPaymentMethod(event.target.value)\n        console.log(event.target.value);\n        }}>\n        <option value={null}>Escoje Uno</option>\n        <option value=\"tarjeta\">Tarjeta de Credito</option>\n        <option value=\"puntos\">Pagar con Puntos</option>\n      </select>\n    </div>\n    ) }\n    else {\n      return <div>Favor de cotizar una guida para continuar</div>\n    }\n}\n\n\nexport default CreateGuidePagina;","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Others/ContactUs.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Navbar/BtnRegistro.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Navbar/Navbar.js",["185","186","187"],"import React from 'react';\nimport BtnRegistro from './BtnRegistro';\nimport { Link } from 'react-router-dom';\nimport \"./Navbar.scss\";\nimport styled from 'styled-components'\n\nimport QuikenLogo from '../../assets/Inicio/Quiken_Logo_color-03.svg'\n\nconst Navbar = () => {\n  const [open, setOpen] = React.useState(false);\n  const node = React.useRef();\n\n  return (\n    <>\n      <div className=\"navbar-main\">\n        <div className=\"navbar-logo-placeholder\">\n          <Link className=\"logo-link\" to=\"/\">\n            <img src={QuikenLogo} className=\"quiken-logo\" />\n          </Link>\n        </div>\n        \n        {/* //Desktop Menu */}\n        <div className=\"navbar-links-wrapper\">\n          <Link className=\"navbar-link\" to=\"/\">INICIO</Link>\n          <Link className=\"navbar-link\" to=\"/servicios\">SERVICIOS</Link>\n          <Link className=\"navbar-link\" to=\"/fulfillment\">FULFILLMENT</Link>\n          <Link className=\"navbar-link\" to=\"/rastreo\">RASTREO</Link>\n          {/* <Link className=\"navbar-link\" to=\"/contacto\">CONTACTO</Link>\n          <Link className=\"navbar-link\" to=\"/signin\">\n            SIGN IN\n          </Link> */}\n          {/* <Link to=\"/signup\">\n            <BtnRegistro/>\n          </Link> */}\n        </div>\n        {/* Mobile Menu */}\n        <Burger open={open} setOpen={setOpen}/>\n        <Menu open={open} setOpen={setOpen}/>\n        \n        \n\n      </div>\n    </>\n  );\n};\n\nconst Menu = ({ open }) => {\n  return (\n    <StyledMenu open={open}>\n          <Link className=\"navbar-link\"to=\"/\">INICIO</Link>\n          <Link className=\"navbar-link\" to=\"/servicios\">SERVICIOS</Link>\n          <Link className=\"navbar-link\" to=\"/fulfillment\">FULFILLMENT</Link>\n          <Link className=\"navbar-link\" to=\"/rastreo\">RASTREO</Link>\n          <Link className=\"navbar-link\" to=\"/contacto\">CONTACTO</Link>\n          {/* <Link className=\"navbar-link\" to=\"/signin\">\n            SIGN IN\n          </Link>\n          <Link to=\"/signup\">\n            <BtnRegistro/>\n          </Link> */}\n    </StyledMenu>\n  )\n}\n\nconst StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #245188;\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(-100%)'};\n  height: 100vh;\n  text-align: left;\n  /* padding: 2rem; */\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  z-index: 30;\n\n  @media (max-width: 576px) {\n      width: 100%;\n    }\n\n  a {\n    font-size: 18px;\n    text-transform: uppercase;\n    padding: 1rem 0;\n    font-weight: bold;\n    letter-spacing: 0.5rem;\n    color: white;\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 1rem;\n      text-align: center;\n    }\n\n    &:hover {\n      color: red;\n    }\n  }\n`\n\nconst StyledBurger = styled.button`\n  /* position: absolute;\n  top: 5%;\n  left: 2rem; */\n  margin-right: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 30px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 31;\n\n  @media (min-width: 800px) {\n      display: none;\n    }\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.20rem;\n    background: ${({ open }) => open ? 'white' : '#245188'};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`\n\nconst Burger = ({ open, setOpen }) => {\n  return (\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\nexport default Navbar","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Others/WhatsappBtn.js",["188"],"import React from 'react'\nimport { FloatingWhatsApp } from 'react-floating-whatsapp'\nimport 'react-floating-whatsapp/dist/index.css' \n\nfunction WhatsappBtn() {\n    return (\n        <a href=\"https://wa.me/+528116618597\">\n            {/* <FloatingWhatsApp \n            phoneNumber=\"+5218124486070\"\n            accountName=\"Quiken Envios\"\n            statusMessage=\"Contestamos enseguida\"\n            chatMessage=\"Muy buenos dias! Quiken estamos para ayudarte y brindarte cualquier información necesaria.\"\n            /> */}\n        </a>\n    )\n}\n\nexport default WhatsappBtn\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Others/RastreaPedido.js",["189"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport styled from 'styled-components'\nimport './RastreaPedido.scss'\nimport IconoRastreo from '../../assets/Inicio/Icono_rastreo-43.svg'\n\nconst RastreaPedido = (props) => {\n    \n    const [guideTracked, setGuideTracked] = useState(\"\")\n    \n    const handleInput = (event) => { \n        setGuideTracked(event.target.value)\n    }\n\n    return (\n        <div className=\"main-wrapper-div-tracking\">\n            <RowDiv>\n                <TrackingNumberInput className=\"contact-us-input-form\" placeholder=\"Código de rastreo\" onChange={handleInput}></TrackingNumberInput>\n                <Link to={`/rastreo/${guideTracked}`}>\n                    <PlaceHolderLookUp>\n                        <img className=\"icono-rastreo\" src={IconoRastreo}></img>\n                    </PlaceHolderLookUp>\n                </Link>\n            </RowDiv>\n        </div>\n    )\n}\n\nconst RowDiv = styled.div`\ndisplay: flex;\n@media (max-width: 768px) {\n    height: 30px;\n    /* width: 90%; */\n    align-self: center;\n    justify-self: center;\n  }\n`\n\nconst TrackingNumberInput = styled.input`\nborder-radius: 5px;\nborder: solid 1px;\n\n`\n\nconst PlaceHolderLookUp = styled.div`\nheight: 50px;\nwidth: 50px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center ;\nbackground-color: red;\nbackground-image: url(\"./\");\nborder-radius: 5px;\nborder: solid 1px black;\n@media (max-width: 768px) {\n    height: 30px;\n    width: 50px;\n    align-self: center;\n    justify-self: center;\n    \n  } \n`\n\nexport default RastreaPedido;\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Others/BtnMail.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/MapInicio.js",["190","191","192","193","194","195","196","197","198","199","200","201","202"],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/MilesDeGuias.js",["203"],"import React from 'react'\nimport './MilesDeGuias.scss'\n\n//Images\nimport DeliveryGuy from '../../assets/Inicio/Quiken_Miles_Guias_generadas.png'\n\nconst MilesDeGuias = () => {\n    return (\n        <div className=\"main-wrapper-guias\">\n            <div className=\"red-container\">\n                <img className=\"delivery-guy-img\" src={DeliveryGuy}></img>\n            </div>\n            <div className=\"blue-container\">\n                <h1 className=\"numero-guias\">1,552,99</h1>\n                <h1 className=\"heading-guias\">Miles de guias generadas <br/>diariamente</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default MilesDeGuias;","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/ContactForm.js",["204","205"],"import React, { useState } from 'react';\nimport './ContactForm.scss';\nimport 'emailjs-com';\nimport emailjs from 'emailjs-com';\n\nconst ContactForm = () => {\n    \n\n  // process.env.SENDGRID_API_KEY\n    //Mail SendGrid Integration\n    function sendContactForm(e) {\n      e.preventDefault();\n  \n      emailjs.sendForm('service_e3d4d9r', 'template_d0ah23h', e.target, 'user_gecQCH4IIGePzUzhzJ47E')\n        .then((result) => {\n            console.log(result.text);\n            console.log('all good sr.');\n        }, (error) => {\n            console.log(error.text);\n        });\n        alert('Gracias por contactarnos uno nuestros asesores se pondre en contaco contigo.')\n        e.target.reset()\n        setEmail(\"\")\n        setPhoneNumber(\"\")\n        setSubject(\"\")\n        setMessage(\"\")\n        setFullName(\"\")\n        \n    }\n\n    //General Variables\n    let isValid = true\n\n    //Contact Form States\n    const [fullName, setFullName] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [subject, setSubject] = useState(\"\");\n    const [message, setMessage] = useState(\"\")\n\n    //Contact Form Error States\n  const [fullNameError, setFullNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [phoneNumberError, setPhoneNumberError] = useState('');\n  const [subjectError, setSubjectError] = useState('');\n  const [messageError, setMessageError] = useState('');\n\n    //Helper Functions for Validation\n    function hasLetters (lenght) {\n        return /^\\d+$/.test(lenght)\n      }\n\n    function emailIsValid (email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    const contactFormValdiation= () => {\n        //Error Form Objects\n        const fullNameError = {};\n        const phoneNumberError = {};\n        const emailError = {};\n        const subjectError = {};\n        const messageError = {};\n        \n        //Name Validation\n    if (fullName.trim().length < 5) {\n        fullNameError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n        isValid = false;\n        console.log(\"name too short\")\n      }\n  \n      if (fullName.trim().match(/[0-9]/)) {\n        fullNameError.FullNameLong = \"Favor de ingresar solamente letras\";\n        isValid = false;\n      }\n      setFullNameError(fullNameError)\n\n      //Email Validation\n      if (emailIsValid(email) == false) {\n        emailError.EmailError = \"El email no es valido\"\n        isValid = false;\n        console.log(\"The email is not valid\")\n      }\n  \n      setEmailError(emailError)\n      \n      //Phone Validation\n      if (hasLetters(phoneNumber) == false) {\n        phoneNumberError.PhoneTooShort = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n      \n      if (phoneNumber.trim().length < 10) {\n        phoneNumberError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n        console.log(\"el telefono es muy corto\")\n        isValid = false;\n      }\n\n      setPhoneNumberError(phoneNumberError)\n\n      //Tema Validation\n      if (subject.trim().length < 5) {\n        subjectError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setSubjectError(subjectError)\n  \n      if (message.trim().length < 5) {\n        messageError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n      setMessageError(messageError)\n    }\n\n\n    const handleContactForm = (e) => {\n        e.preventDefault();\n        console.log(isValid, 'bean burrito')\n\n        contactFormValdiation()\n        \n        console.log(isValid, 'guacamole9!')\n\n        if (isValid) {\n            console.log('evrything is valid')\n            console.log(\n                \"fullName: \", fullName, <br/>,\n                \"PhoneNumber: \", phoneNumber, <br/>,\n                \"email: \", email, <br/>,\n                \"subject: \", subject, <br/>,\n                \"message: \", message, <br/>, \n            )\n            console.log('Trying email');\n            sendContactForm(e)  \n        }\n    }\n\n    return (\n     <>\n     <form className=\"main-wrapper-contact-form\" onSubmit={(event) => handleContactForm(event)}>\n        {/* //Nombre Completo Field */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Nombre Completo<span> *</span></label>\n            <input\n            className=\"contact-form-input\" \n            value={fullName}\n            onChange={(event) => setFullName(event.target.value)} \n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Juan Gonzalez\"\n            />\n            {Object.keys(fullNameError).map((key) => {\n                return <div className=\"error-message\">{fullNameError[key]}</div>}\n            )}\n        </div>\n        \n        <div className=\"row-div-contact-form\">\n            {/* //Telefono Field */}\n            <div className=\"row-div-small-input-placeholder\">\n                <label className=\"label-form\">Teléfono<span> *</span></label>\n                <input\n                className=\"contact-form-input-small\"  \n                value={phoneNumber}\n                onChange={(event) => setPhoneNumber(event.target.value)} \n                type=\"text\"\n                name=\"phone\"\n                placeholder=\"81568180\"\n                />\n                {Object.keys(phoneNumberError).map((key) => {\n                    return <div className=\"error-message\">{phoneNumberError[key]}</div>}\n                )}\n            </div>\n            {/* //Email Field */}\n            <div className=\"row-div-small-input-placeholder\">\n              <label className=\"label-form\">Correo<span> *</span></label>\n              <input \n              className=\"contact-form-input-small\" \n              value={email}\n              onChange={(event) => setEmail(event.target.value)} \n              type=\"text\"\n              name=\"email\"\n              placeholder=\"juangonzalez@gmail.com\"\n              />\n              {Object.keys(emailError).map((key) => {\n                  return <div className=\"error-message\">{emailError[key]}</div>}\n              )}\n          </div>\n        </div>\n        \n        {/* //Subject Fields */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Tema<span> *</span></label>\n            <input \n            className=\"contact-form-input\" \n            value={subject}\n            onChange={(event) => setSubject(event.target.value)} \n            type=\"text\"\n            name=\"subject\"\n            placeholder=\"Información sobre envios locales\"\n            />\n            {Object.keys(subjectError).map((key) => {\n                return <div className=\"error-message\">{subjectError[key]}</div>}\n            )}\n        </div>\n        {/* //Subject Mensaje Field        */}\n        <div className=\"contact-form-field-wrapper\">\n            <label className=\"label-form\">Mensaje<span> *</span></label>\n            <input \n            className=\"contact-form-input-message\" \n            value={message}\n            onChange={(event) => setMessage(event.target.value)} \n            type=\"text\"\n            name=\"message\"\n            placeholder=\"Información sobre envios locales\"\n            />\n            {Object.keys(messageError).map((key) => {\n                return <div className=\"error-message\">{messageError[key]}</div>}\n            )}\n        </div>\n        <p className=\"sub-paragraph-form\">Campos marcados con <span> *</span> son requeridos</p>\n        <button className=\"btn-contact-form\" type=\"submit\" >Enviar</button>\n    </form>\n     </>\n    )\n}\n\nexport default ContactForm;\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/MasBeneficios.js",["206","207","208","209","210","211"],"import React from 'react';\nimport './MasBeneficios.scss';\nimport ContactUs from '../Others/ContactUs'\n\nimport Almacenamiento from '../../assets/Inicio/Beneficios/Quiken_Solucion_Almacenamiento-10.svg';\nimport Empaquetado from '../../assets/Inicio/Beneficios/Quiken_Preparacion_Empaquetado-11.svg';\nimport Devoluciones from '../../assets/Inicio/Beneficios/Quiken_Pedidos_devoluciones-15.svg';\nimport Precision from '../../assets/Inicio/Beneficios/Quiken_Presicion-12.svg';\nimport Cumplimiento from '../../assets/Inicio/Beneficios/Quiken_Expertos_Cumplimiento-13.svg';\nimport Tarifas from '../../assets/Inicio/Beneficios/Quiken_Mejores_tarifas_envio-14.svg';\n\nconst MasBeneficios = () => {\n    return (\n        <div className=\"mas-beneficios-main-wrapper\">\n            <h2 className=\"heading-main-section\" >Más Beneficios</h2>\n            <div className=\"row-wrapper\">\n                <div className=\"beneficio-column-wrapper\">\n                    <img className=\"beneficio-img\" src={Almacenamiento}></img>\n                    <h3 className=\"heading-beneficio\">Soluciones de almacenamiento</h3>\n                    <p className=\"paragraph-beneficio\">No importe el tamaño, tenemos almacenes seguros y protegidos.</p>\n                </div>\n\n                <div className=\"beneficio-column-wrapper\">\n                    <img className=\"beneficio-img\" src={Empaquetado}></img>\n                    <h3 className=\"heading-beneficio\">Preparación y empaquetado</h3>\n                    <p className=\"paragraph-beneficio\">Procesamos las órdenes que sean necesarias y empacamos cualquier producto, no importa el tamaño y lo delicado.</p>\n                </div>\n\n                <div className=\"beneficio-column-wrapper\">\n                    <img className=\"beneficio-img\" src={Devoluciones}></img>\n                    <h3 className=\"heading-beneficio\">Procesos de pedidos y devoluciones</h3>\n                    <p className=\"paragraph-beneficio\">Procesamos miles de pedidos diarios sin importar la cantidad y nos hacemos cargo de las devoluciones.</p>\n                </div>\n            </div>\n\n            <div className=\"row-wrapper\">\n                <div className=\"beneficio-column-wrapper\">\n                    <img className=\"beneficio-img\" src={Precision} ></img>\n                    <h3 className=\"heading-beneficio\">99.95% de precisión</h3>\n                    <p className=\"paragraph-beneficio\">Con nuestros sistemas y procesos disminuimos le margen de error al maximo.</p>\n                </div>\n\n                <div className=\"beneficio-column-wrapper\">\n                    <img className=\"beneficio-img\" src={Cumplimiento} ></img>\n                    <h3 className=\"heading-beneficio\">Expertos dedicados el cumplimiento</h3>\n                    <p className=\"paragraph-beneficio\">Nuestros ejecutivos lo ayudarán a resolver cualquier problema.</p>\n                </div>\n\n                <div className=\"beneficio-column-wrapper\">\n                    <img className=\"beneficio-img\" src={Tarifas} ></img>\n                    <h3 className=\"heading-beneficio\">Mejores tarifas de envío</h3>\n                    <p className=\"paragraph-beneficio\">Contamos con las mejores tarifas de envíos en el mercado.</p>\n                </div>\n            </div>\n        \n            <ContactUs/>\n\n        </div>\n    )\n}\n\nexport default MasBeneficios;\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/NuestrosVehiculos.js",["212","213","214","215"],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Inicio/AyudamosNegocios.js",["216","217","218","219","220","221"],"import React from 'react'\nimport './AyudamosNegocios.scss'\nimport Shopify from '../../assets/Inicio/Integraciones/Quiken_Shopify-22.svg'\nimport WooComerce from '../../assets/Inicio/Integraciones/Woocommerce-23.svg'\nimport MercadoLibre from '../../assets/Inicio/Integraciones/Mercado_Libre-24.svg'\nimport Amazon from '../../assets/Inicio/Integraciones/Amazon-25.svg'\n\n\n\nconst AyudamosNegocios = () => {\n    return (\n        <>\n            <div className=\"main-wrapper-negocios\">\n                <p className=\"paragraph-section\">Ayudamos a los negocios a enfocarse en sus tareas más\n                importantes, <span>disminuyendo costos extra de nómina, rentas y\n                    mantenimiento.</span></p>\n                <img></img>\n            </div>\n            <div>\n                <h2 className=\"heading-blue\">Nuestro sistema de gestión de almacén se integran\n                <br/>con los siguientes ecommerces:</h2>\n                <div className=\"row-wrapper-icons\">\n                    <img src={Shopify} className=\"image-integraciones\" ></img>\n                    <img src={WooComerce} className=\"image-integraciones\" ></img>\n                    <img src={MercadoLibre} className=\"image-integraciones\" ></img>\n                    <img src={Amazon} className=\"image-integraciones\" ></img>\n                    <img></img>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default AyudamosNegocios\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Footer/Footer.js",["222","223","224","225","226","227","228","229","230","231"],"import React from 'react'\nimport './Footer.scss'\nimport QuikenLogoFooter from '../../assets/Inicio/Quiken_Logo_Bco-44.svg'\nimport Facebook from '../../assets/Inicio/Iconos de redes sociales/Facebook-45.svg'\nimport Instagram from '../../assets/Inicio/Iconos de redes sociales/Instagram-47.svg'\nimport Twitter from '../../assets/Inicio/Iconos de redes sociales/Twitter-46.svg'\nimport locationIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_ubicacion-48.svg'\nimport phoneIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_Telefono-49.svg'\nimport mailIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_Correo-50.svg'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-main-wrapper\">\n            <div className=\"logo-links-wrapper\">\n                <div className=\"logo-quienes-somos-wrapper\">\n                    <img className=\"img-logo-footer\" src={QuikenLogoFooter}></img>\n                    <h3 className=\"quienes-somos\">¿QUIENES SOMOS?</h3>\n                </div>\n                <div className=\"copy-icons-wrapper\">\n                    <p className=\"copy-quiken\">© 2021 Quiken Mx, Todos los derechos reservados.</p>\n                    <a target=\"_blank\" href=\"https://www.facebook.com/quikenmx\">\n                        <img src={Facebook} className=\"icon\"/>\n                    </a>\n                    \n                    <a target=\"_blank\" href=\"https://www.facebook.com/quikenmx\">\n                    <img src={Twitter} className=\"icon\"/>\n                    </a>\n                    \n                    \n                    <a target=\"_blank\" href=\"https://www.instagram.com/quikenmx/?hl=en\">\n                        <img src={Instagram} className=\"icon\" />                    \n                    </a>\n                    \n                    \n                </div>\n            </div>\n            <div className=\"info-wrapper\">\n                <h2 className=\"contactanos-heading\">CONTÁCTANOS</h2>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={locationIcon} className=\"contact-icon\" />\n                    <p className=\"paragraph-contact\">Monte Alto No. 157, Fraccionamiento\n                    Parque 200, C.P 66368 Santa Catarina,\n                    Nuevo León, México.</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={phoneIcon} className=\"contact-icon\" />\n                    <p className=\"paragraph-contact\">(81) 1661 8597</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={mailIcon} className=\"contact-icon\" />\n                    <p className=\"paragraph-contact\">hola@quiken.mx</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/UserDashboard/GuideTable.js",["232","233","234","235","236"],"\nimport React, { Component, useMemo } from 'react'\nimport CancelButton from './CancelButton'\nimport './GuideTable.scss'\nimport { Link } from 'react-router-dom'\n\nconst GuideTable = (props) => {\n  \n  const data = props.userGuides\n  \n  const columns = [ \n    'Tracking Num.',\n    'User',\n    'Precio',\n    'Status'\n  ] \n\n  const renderRow = (guide, index) => {\n\n    return (\n      <tr className=\"tr-element\" key={index}>\n        <td>{guide.trackingNumber}</td>\n        <td>{guide.currentUser}</td>\n        <td>{guide.guideCost}</td>\n        {/* <td>{guide.guideStatus}</td> */}\n        {/* <td>\n          <CancelButton userGuide={guide}>Descargar</CancelButton>\n        </td> */}\n        <td>\n          <a href={`${guide.fileUrl}`} target=\"_blank\">\n            <button id=\"red\" className=\"btn-cancel-guide\">Imprimir</button>\n          </a>\n        </td>\n      </tr>\n    )\n  }; \n \n  return (\n    <div>\n      <table className=\"table-element\">\n        <thead className=\" thead-element\">\n          {columns.map((colName) => {\n            return (<th>{colName}</th>)\n          })}\n        </thead>\n        <tbody className=\"\">\n          {data.map(renderRow)}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default GuideTable;\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Cart/Checkout.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/UserDashboard/CancelButton.js",["237"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst CancelButton = (props) => {\n\n    const history = useHistory()\n\n    const { _id } = props.userGuide\n\n    console.log(_id)\n\n    \n    const cancelGuide = () => {\n        console.log('cancel guide');\n        console.log(_id)\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ _id })\n        };\n        fetch('api/user/cancelguide', requestOptions)\n            .then(response => {\n                console.log(response)\n                response.json()\n            })\n            .then(data => console.log(data));\n    }\n\n    return (\n        <button className=\"btn-cancel-guide\" onClick={cancelGuide}>Cancelar</button>\n    )\n}\n\nexport default CancelButton\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Tracking/ShippingInformation.js",[],"/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/Pages/RecargarSaldoPagina.js",["238","239","240","241","242"],"import React, { useState, useEffect } from 'react'\nimport \"./RecargarSaldoPagina.scss\"\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport CheckoutStripe2 from '../components/Cart/Checkout2'\nimport { AfterpayClearpayMessageElement } from '@stripe/react-stripe-js'\n\nconst RecargarSaldoPagina = () => {\n    //Initializing Variables and States\n    const [paymentMethodSelected, setPaymentMethodSelected] = useState(false)\n    const [paymentMethod, setPaymentMethod] = useState(\"\")\n    const [cartTotal, setCartTotal] = useState(0)\n    const [cart, setCart] = useState([])\n    const [isRechargePaid, setIsRechargePaid] = useState(false);\n    const [hasPaymentError, setHasPaymentError] = useState(false)\n    const [errorPayment, setErrorPayment] = useState(\"\")\n    const [userPoints, setUserPoints] = useState(0)\n\n    let username = localStorage.getItem('email')\n\n    const handleProductClick = async (cart, id) => {\n        console.log(cart);\n        if (cart.length < 5) {\n            const selectedProduct = await items.find(product => product.id === id)\n            cart.push(selectedProduct) \n            setCartTotal(cartTotal + selectedProduct.total)\n        }\n    }\n\n\n    const items = [\n        {id:100, total: 200},\n        {id:101, total: 1000},\n        {id:102, total: 10000}\n    ]\n\n    const requestGetPoints = async (username) => {\n        const url = 'api/user/getPoints/'\n        console.log(username, 'RUNNING THIS')\n        \n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify ({\n                'username': username\n            })\n        });\n        \n        const data = await response.json()\n        console.log(data)\n        console.log(response.status, 'STATUS')\n        if (response.status === 200) {\n            setUserPoints(data.data[0].points)\n        }\n        \n        \n    }\n\n    const requestRecharge = async (username, amount) => {\n        const url = 'api/user/updatePoints'\n        console.log(username, 'RUNNING THIS')\n        console.log('AMOUNT', amount);\n        \n        const response = await fetch(url, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify ({\n                'username': username,\n                'amount': amount \n            })\n        });\n        \n        const data = await response.json()\n        console.log(data)\n        console.log(response.status, 'STATUS')\n        if (response.status === 200) {\n            console.log(data)\n            alert('Tu recarga fue exitosa. Agradecemos tu compra')\n            resetState()\n        }   \n    }\n\n    const resetState = () => {\n        setUserPoints(0)\n        setErrorPayment(\"\")\n        setHasPaymentError(false)\n        setIsRechargePaid(false)\n        setCart([])\n        setCartTotal(0)\n        setPaymentMethod(\"\")\n        setHasPaymentError(false)\n    }\n\n    \n\n    useEffect(() => {\n        console.log('THSI IS BOOLEAN RECAHRG', isRechargePaid);\n        requestGetPoints(username)\n        if(isRechargePaid === true) {\n            console.log('UPDATING POINTS')\n            requestRecharge(username, cartTotal)\n            setIsRechargePaid(false)\n        }\n        \n    }, [isRechargePaid, cartTotal])\n\n    \n    return (\n        <div>\n            <Navbar/>\n            <div className=\"main-wrapper-recargar-saldo\">\n                <div className=\"main-wrapper-comprar-saldo\">\n\n                    <div className=\"wrapper-seleccionador paquetes\">\n                        <h1 className=\"saldo-actual-heading\">1. Recarga Saldo</h1>\n                        \n                        <div className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo Actual</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {userPoints}.00</h1>  \n                        </div>\n\n                        <div className=\"paquetes-de-puntos\">\n                            <label className=\"heading-agregar-puntos\">Da Click y Agrega Puntos!</label>\n                            \n                            <div className=\"card-agrega-credito\" \n                            onClick={() => {\n                                handleProductClick(cart, 100)\n                            }}>\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 200.00</h1>  \n                            </div>\n                            \n                            <div className=\"card-agrega-credito\"\n                            onClick={() => {\n                                handleProductClick(cart, 101)\n                            }}\n                            >\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 1000.00</h1>  \n                            </div>\n\n                            <div className=\"card-agrega-credito\"\n                            onClick={() => {\n                                handleProductClick(cart, 102)\n                            }}\n                            >\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 10000.00</h1>  \n                            </div>\n                            \n\n                        </div>\n\n                    </div>\n                    \n                    <div className=\"wrapper-checkout-puntos\">\n                    <h1 className=\"saldo-actual-heading\">2. Checkout</h1>\n                        \n                        <div  className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo por recargar</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {cartTotal}.00</h1>  \n                        </div>\n\n                        <div  className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo Nuevo</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {cartTotal + userPoints}.00</h1>  \n                        </div>\n                        \n                        <h1 className=\"selecciona-metodo-pago-heading\">Selecciona tu metodo de pago</h1>\n                        \n                        <select className=\"payment-method-selector-saldo\"  onChange={(event) => {\n                            setPaymentMethodSelected(!paymentMethodSelected)\n                            setPaymentMethod(event.target.value)\n                            }}\n                            >\n                            <option value=\"\">Ninguno</option>\n                            <option value=\"tarjeta\">Tarjeta de credito/debito</option>\n                        </select>\n                        \n                    </div>\n                </div>\n                \n                <div>\n                        {\n                        paymentMethodSelected ?\n                            <div className=\"checkout-wrapper\">\n                                <h1 className=\"metodo-tarjeta-heading\">Favor de ingresar la información de su tarjeta.</h1>\n                                <h2 className=\"metodo-tarjeta-subheading\">Numero de Tarjeta, Codigo, Fecha de expiración, Codigo Postal</h2>\n                                <h2 className=\"metodo-tarjeta-subheading\">Aceptamos todo tipo de tarjeta (Visa, AMEX, MasterCard)</h2>\n                                <CheckoutStripe2 setErrorPayment={setErrorPayment} setHasPaymentError={setHasPaymentError} cartTotal={cartTotal} setIsRechargePaid={setIsRechargePaid} />\n                            </div>\n                        :\n                        <div></div>\n                        }\n                        \n                        \n                </div>\n                \n\n            </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default RecargarSaldoPagina\n","/home/julianallende/Desktop/Coding/proyectos/master_quiken/proyecto_sapo/client/src/components/Cart/Checkout2.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":13,"column":8,"nodeType":"249","messageId":"250","endLine":13,"endColumn":24},{"ruleId":"247","severity":1,"message":"251","line":9,"column":8,"nodeType":"249","messageId":"250","endLine":9,"endColumn":20},{"ruleId":"247","severity":1,"message":"252","line":18,"column":10,"nodeType":"249","messageId":"250","endLine":18,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":94,"column":6,"nodeType":"255","endLine":94,"endColumn":21,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":115,"column":23,"nodeType":"259","endLine":115,"endColumn":73},{"ruleId":"257","severity":1,"message":"258","line":53,"column":11,"nodeType":"259","endLine":53,"endColumn":74},{"ruleId":"247","severity":1,"message":"260","line":15,"column":10,"nodeType":"249","messageId":"250","endLine":15,"endColumn":21},{"ruleId":"247","severity":1,"message":"261","line":20,"column":10,"nodeType":"249","messageId":"250","endLine":20,"endColumn":19},{"ruleId":"247","severity":1,"message":"262","line":20,"column":21,"nodeType":"249","messageId":"250","endLine":20,"endColumn":33},{"ruleId":"247","severity":1,"message":"263","line":21,"column":25,"nodeType":"249","messageId":"250","endLine":21,"endColumn":41},{"ruleId":"247","severity":1,"message":"264","line":22,"column":10,"nodeType":"249","messageId":"250","endLine":22,"endColumn":27},{"ruleId":"247","severity":1,"message":"265","line":22,"column":29,"nodeType":"249","messageId":"250","endLine":22,"endColumn":49},{"ruleId":"247","severity":1,"message":"266","line":23,"column":10,"nodeType":"249","messageId":"250","endLine":23,"endColumn":27},{"ruleId":"247","severity":1,"message":"267","line":23,"column":29,"nodeType":"249","messageId":"250","endLine":23,"endColumn":49},{"ruleId":"247","severity":1,"message":"268","line":24,"column":10,"nodeType":"249","messageId":"250","endLine":24,"endColumn":21},{"ruleId":"247","severity":1,"message":"269","line":24,"column":23,"nodeType":"249","messageId":"250","endLine":24,"endColumn":37},{"ruleId":"253","severity":1,"message":"270","line":199,"column":6,"nodeType":"255","endLine":199,"endColumn":8,"suggestions":"271"},{"ruleId":"247","severity":1,"message":"272","line":2,"column":16,"nodeType":"249","messageId":"250","endLine":2,"endColumn":26},{"ruleId":"273","severity":1,"message":"274","line":56,"column":9,"nodeType":"275","endLine":56,"endColumn":47},{"ruleId":"247","severity":1,"message":"276","line":14,"column":8,"nodeType":"249","messageId":"250","endLine":14,"endColumn":19},{"ruleId":"247","severity":1,"message":"277","line":20,"column":8,"nodeType":"249","messageId":"250","endLine":20,"endColumn":26},{"ruleId":"247","severity":1,"message":"278","line":21,"column":8,"nodeType":"249","messageId":"250","endLine":21,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":42,"column":19,"nodeType":"259","endLine":42,"endColumn":77},{"ruleId":"257","severity":1,"message":"258","line":47,"column":19,"nodeType":"259","endLine":47,"endColumn":78},{"ruleId":"257","severity":1,"message":"258","line":52,"column":19,"nodeType":"259","endLine":52,"endColumn":83},{"ruleId":"257","severity":1,"message":"258","line":57,"column":19,"nodeType":"259","endLine":57,"endColumn":72},{"ruleId":"257","severity":1,"message":"258","line":62,"column":19,"nodeType":"259","endLine":62,"endColumn":73},{"ruleId":"257","severity":1,"message":"258","line":212,"column":23,"nodeType":"259","endLine":212,"endColumn":81},{"ruleId":"247","severity":1,"message":"279","line":18,"column":10,"nodeType":"249","messageId":"250","endLine":18,"endColumn":18},{"ruleId":"247","severity":1,"message":"280","line":58,"column":10,"nodeType":"249","messageId":"250","endLine":58,"endColumn":20},{"ruleId":"253","severity":1,"message":"281","line":590,"column":4,"nodeType":"255","endLine":590,"endColumn":39,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":927,"column":21,"nodeType":"259","endLine":927,"endColumn":56},{"ruleId":"247","severity":1,"message":"276","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"285","line":11,"column":9,"nodeType":"249","messageId":"250","endLine":11,"endColumn":13},{"ruleId":"257","severity":1,"message":"258","line":18,"column":13,"nodeType":"259","endLine":18,"endColumn":61},{"ruleId":"247","severity":1,"message":"248","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":21,"column":25,"nodeType":"259","endLine":21,"endColumn":75},{"ruleId":"257","severity":1,"message":"258","line":17,"column":29,"nodeType":"259","endLine":17,"endColumn":80},{"ruleId":"257","severity":1,"message":"258","line":22,"column":29,"nodeType":"259","endLine":22,"endColumn":80},{"ruleId":"257","severity":1,"message":"258","line":27,"column":25,"nodeType":"259","endLine":27,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":32,"column":25,"nodeType":"259","endLine":32,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":40,"column":25,"nodeType":"259","endLine":40,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":44,"column":25,"nodeType":"259","endLine":44,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":48,"column":25,"nodeType":"259","endLine":48,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":53,"column":25,"nodeType":"259","endLine":53,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":62,"column":25,"nodeType":"259","endLine":62,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":67,"column":25,"nodeType":"259","endLine":67,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":72,"column":25,"nodeType":"259","endLine":72,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":77,"column":25,"nodeType":"259","endLine":77,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":85,"column":17,"nodeType":"259","endLine":85,"endColumn":57},{"ruleId":"257","severity":1,"message":"258","line":11,"column":17,"nodeType":"259","endLine":11,"endColumn":69},{"ruleId":"286","severity":1,"message":"287","line":79,"column":31,"nodeType":"288","messageId":"289","endLine":79,"endColumn":33},{"ruleId":"286","severity":1,"message":"287","line":88,"column":35,"nodeType":"288","messageId":"289","endLine":88,"endColumn":37},{"ruleId":"257","severity":1,"message":"258","line":18,"column":21,"nodeType":"259","endLine":18,"endColumn":73},{"ruleId":"257","severity":1,"message":"258","line":24,"column":21,"nodeType":"259","endLine":24,"endColumn":70},{"ruleId":"257","severity":1,"message":"258","line":30,"column":21,"nodeType":"259","endLine":30,"endColumn":71},{"ruleId":"257","severity":1,"message":"258","line":38,"column":21,"nodeType":"259","endLine":38,"endColumn":69},{"ruleId":"257","severity":1,"message":"258","line":44,"column":21,"nodeType":"259","endLine":44,"endColumn":72},{"ruleId":"257","severity":1,"message":"258","line":50,"column":21,"nodeType":"259","endLine":50,"endColumn":67},{"ruleId":"257","severity":1,"message":"258","line":23,"column":25,"nodeType":"259","endLine":23,"endColumn":72},{"ruleId":"257","severity":1,"message":"258","line":27,"column":25,"nodeType":"259","endLine":27,"endColumn":70},{"ruleId":"257","severity":1,"message":"258","line":31,"column":25,"nodeType":"259","endLine":31,"endColumn":70},{"ruleId":"257","severity":1,"message":"258","line":36,"column":25,"nodeType":"259","endLine":36,"endColumn":67},{"ruleId":"257","severity":1,"message":"258","line":17,"column":17,"nodeType":"259","endLine":17,"endColumn":22},{"ruleId":"257","severity":1,"message":"258","line":23,"column":21,"nodeType":"259","endLine":23,"endColumn":73},{"ruleId":"257","severity":1,"message":"258","line":24,"column":21,"nodeType":"259","endLine":24,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":25,"column":21,"nodeType":"259","endLine":25,"endColumn":78},{"ruleId":"257","severity":1,"message":"258","line":26,"column":21,"nodeType":"259","endLine":26,"endColumn":72},{"ruleId":"257","severity":1,"message":"258","line":27,"column":21,"nodeType":"259","endLine":27,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":16,"column":21,"nodeType":"259","endLine":16,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":21,"column":21,"nodeType":"259","endLine":21,"endColumn":81},{"ruleId":"257","severity":1,"message":"258","line":22,"column":25,"nodeType":"259","endLine":22,"endColumn":63},{"ruleId":"283","severity":1,"message":"284","line":25,"column":21,"nodeType":"259","endLine":25,"endColumn":81},{"ruleId":"257","severity":1,"message":"258","line":26,"column":21,"nodeType":"259","endLine":26,"endColumn":58},{"ruleId":"283","severity":1,"message":"284","line":30,"column":21,"nodeType":"259","endLine":30,"endColumn":89},{"ruleId":"257","severity":1,"message":"258","line":31,"column":25,"nodeType":"259","endLine":31,"endColumn":65},{"ruleId":"257","severity":1,"message":"258","line":40,"column":21,"nodeType":"259","endLine":40,"endColumn":72},{"ruleId":"257","severity":1,"message":"258","line":46,"column":21,"nodeType":"259","endLine":46,"endColumn":69},{"ruleId":"257","severity":1,"message":"258","line":50,"column":21,"nodeType":"259","endLine":50,"endColumn":68},{"ruleId":"247","severity":1,"message":"290","line":2,"column":17,"nodeType":"249","messageId":"250","endLine":2,"endColumn":26},{"ruleId":"247","severity":1,"message":"291","line":2,"column":28,"nodeType":"249","messageId":"250","endLine":2,"endColumn":35},{"ruleId":"247","severity":1,"message":"292","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":20},{"ruleId":"247","severity":1,"message":"293","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"283","severity":1,"message":"284","line":30,"column":11,"nodeType":"259","endLine":30,"endColumn":56},{"ruleId":"247","severity":1,"message":"294","line":6,"column":11,"nodeType":"249","messageId":"250","endLine":6,"endColumn":18},{"ruleId":"247","severity":1,"message":"295","line":6,"column":10,"nodeType":"249","messageId":"250","endLine":6,"endColumn":40},{"ruleId":"247","severity":1,"message":"296","line":11,"column":12,"nodeType":"249","messageId":"250","endLine":11,"endColumn":25},{"ruleId":"247","severity":1,"message":"297","line":15,"column":12,"nodeType":"249","messageId":"250","endLine":15,"endColumn":27},{"ruleId":"247","severity":1,"message":"298","line":16,"column":12,"nodeType":"249","messageId":"250","endLine":16,"endColumn":24},{"ruleId":"253","severity":1,"message":"299","line":109,"column":8,"nodeType":"255","endLine":109,"endColumn":35,"suggestions":"300"},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"no-unused-vars","'FloatingWhatsApp' is defined but never used.","Identifier","unusedVar","'PalomaQuiken' is defined but never used.","'guideInformation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getGuideInfo'. Either include it or remove the dependency array.","ArrayExpression",["303"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'privateData' is assigned a value but never used.","'userSaldo' is assigned a value but never used.","'setUserSaldo' is assigned a value but never used.","'setTotalRecargas' is assigned a value but never used.","'pesoPromedioGuias' is assigned a value but never used.","'setPesoPromedioGuias' is assigned a value but never used.","'averageCostGuides' is assigned a value but never used.","'setAverageCostGuides' is assigned a value but never used.","'averageCost' is assigned a value but never used.","'setAverageCost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadUserGuides'. Either include it or remove the dependency array.",["304"],"'useHistory' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BtnRegistro' is defined but never used.","'imgPaqueteriaLocal' is defined but never used.","'ContactForm' is defined but never used.","'apiGuide' is assigned a value but never used.","'errorQuote' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'guideCost' and 'username'. Either include them or remove the dependency array.",["305"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'node' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'useMemo' is defined but never used.","'CancelButton' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","'AfterpayClearpayMessageElement' is defined but never used.","'paymentMethod' is assigned a value but never used.","'hasPaymentError' is assigned a value but never used.","'errorPayment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'requestRecharge' and 'username'. Either include them or remove the dependency array.",["306"],"no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [getGuideInfo, needsRerender]",{"range":"315","text":"316"},"Update the dependencies array to be: [loadUserGuides]",{"range":"317","text":"318"},"Update the dependencies array to be: [paymentMethod, points, needsReset, username, guideCost]",{"range":"319","text":"320"},"Update the dependencies array to be: [isRechargePaid, cartTotal, username, requestRecharge]",{"range":"321","text":"322"},[2770,2785],"[getGuideInfo, needsRerender]",[6081,6083],"[loadUserGuides]",[18330,18365],"[paymentMethod, points, needsReset, username, guideCost]",[3387,3414],"[isRechargePaid, cartTotal, username, requestRecharge]"]