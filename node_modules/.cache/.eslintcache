[{"/Users/julianallenderussek/Coding/QuikenFrontend/src/index.js":"1","/Users/julianallenderussek/Coding/QuikenFrontend/src/App.js":"2","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/RastreoPagina.js":"3","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/ServiciosPagina.js":"4","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/InicioPagina.js":"5","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/FulfillmentPagina.js":"6","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/SignUpPagina.js":"7","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/ForgotPasswordPagina.js":"8","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/ContactoPagina.js":"9","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/SignInPagina.js":"10","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/ResetPasswordPagina.js":"11","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/RecargarSaldoPagina.js":"12","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewCotizar.js":"13","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/UserDashboard.js":"14","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewCreateGuide.js":"15","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/CreateGuidePagina.js":"16","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewGuias.js":"17","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewRecargar.js":"18","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewDashboard.js":"19","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/MyPayments.js":"20","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/routing/PrivateRoute.js":"21","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/PaymentsTable.js":"22","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/GuidesChart.js":"23","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/DashboardMonitor.js":"24","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/WhatsappBtn.js":"25","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Tracking/ShippingInformation.js":"26","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/BtnMail.js":"27","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Footer/Footer.js":"28","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/MilesDeGuias.js":"29","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/RastreaPedido.js":"30","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/NuestrosVehiculos.js":"31","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/ContactUs.js":"32","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/MapInicio.js":"33","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/MasBeneficios.js":"34","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/AyudamosNegocios.js":"35","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/ContactForm.js":"36","/Users/julianallenderussek/Coding/QuikenFrontend/src/styled_components/page_wrapper.js":"37","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Sidebar/Sidebar.js":"38","/Users/julianallenderussek/Coding/QuikenFrontend/src/styled_components/mid_screen_wrapper.js":"39","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/GuidesTable.js":"40","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Navbar/Navbar.js":"41","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Cart/Checkout.js":"42","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/AccountInfo.js":"43","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Navbar/SubNavbar.js":"44","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/GuideCreator.js":"45","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Cart/Checkout2.js":"46","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/Cotizador.js":"47","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/UserDashboard/GuideTable.js":"48","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Navbar/BtnRegistro.js":"49","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/UserDashboard/CancelButton.js":"50","/Users/julianallenderussek/Coding/QuikenFrontend/src/utilities/Loading.js":"51","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Context/UserContext.js":"52"},{"size":154,"mtime":1655824796076,"results":"53","hashOfConfig":"54"},{"size":3787,"mtime":1656607365151,"results":"55","hashOfConfig":"54"},{"size":8874,"mtime":1656541219179,"results":"56","hashOfConfig":"54"},{"size":12879,"mtime":1655824795324,"results":"57","hashOfConfig":"54"},{"size":5541,"mtime":1655824795317,"results":"58","hashOfConfig":"54"},{"size":8051,"mtime":1655824795315,"results":"59","hashOfConfig":"54"},{"size":5373,"mtime":1656956372004,"results":"60","hashOfConfig":"54"},{"size":2405,"mtime":1655824795314,"results":"61","hashOfConfig":"54"},{"size":1244,"mtime":1655824795311,"results":"62","hashOfConfig":"54"},{"size":2774,"mtime":1656964746144,"results":"63","hashOfConfig":"54"},{"size":2811,"mtime":1655824795323,"results":"64","hashOfConfig":"54"},{"size":8264,"mtime":1655824795322,"results":"65","hashOfConfig":"54"},{"size":1050,"mtime":1655824795318,"results":"66","hashOfConfig":"54"},{"size":14282,"mtime":1655824795326,"results":"67","hashOfConfig":"54"},{"size":1976,"mtime":1656961409298,"results":"68","hashOfConfig":"54"},{"size":41946,"mtime":1655824795313,"results":"69","hashOfConfig":"54"},{"size":1317,"mtime":1656542568777,"results":"70","hashOfConfig":"54"},{"size":6552,"mtime":1656959555758,"results":"71","hashOfConfig":"54"},{"size":2564,"mtime":1656964910373,"results":"72","hashOfConfig":"54"},{"size":1039,"mtime":1656558206420,"results":"73","hashOfConfig":"54"},{"size":374,"mtime":1655824796076,"results":"74","hashOfConfig":"54"},{"size":8901,"mtime":1656558168420,"results":"75","hashOfConfig":"54"},{"size":6035,"mtime":1656955458784,"results":"76","hashOfConfig":"54"},{"size":4343,"mtime":1656956339829,"results":"77","hashOfConfig":"54"},{"size":671,"mtime":1655824796070,"results":"78","hashOfConfig":"54"},{"size":1718,"mtime":1655824796072,"results":"79","hashOfConfig":"54"},{"size":239,"mtime":1655824796068,"results":"80","hashOfConfig":"54"},{"size":3799,"mtime":1655824796059,"results":"81","hashOfConfig":"54"},{"size":658,"mtime":1655824796063,"results":"82","hashOfConfig":"54"},{"size":2400,"mtime":1655824796069,"results":"83","hashOfConfig":"54"},{"size":2000,"mtime":1655824796064,"results":"84","hashOfConfig":"54"},{"size":1109,"mtime":1655824796069,"results":"85","hashOfConfig":"54"},{"size":3897,"mtime":1655824796062,"results":"86","hashOfConfig":"54"},{"size":3442,"mtime":1655824796063,"results":"87","hashOfConfig":"54"},{"size":1466,"mtime":1655824796060,"results":"88","hashOfConfig":"54"},{"size":7664,"mtime":1655824796061,"results":"89","hashOfConfig":"54"},{"size":161,"mtime":1655824796080,"results":"90","hashOfConfig":"54"},{"size":1542,"mtime":1656956584420,"results":"91","hashOfConfig":"54"},{"size":234,"mtime":1655824796080,"results":"92","hashOfConfig":"54"},{"size":8134,"mtime":1656955356919,"results":"93","hashOfConfig":"54"},{"size":5097,"mtime":1656956881147,"results":"94","hashOfConfig":"54"},{"size":3260,"mtime":1655824796058,"results":"95","hashOfConfig":"54"},{"size":447,"mtime":1655824796067,"results":"96","hashOfConfig":"54"},{"size":614,"mtime":1655824796067,"results":"97","hashOfConfig":"54"},{"size":35654,"mtime":1656964513670,"results":"98","hashOfConfig":"54"},{"size":3262,"mtime":1655824796059,"results":"99","hashOfConfig":"54"},{"size":6140,"mtime":1655824795312,"results":"100","hashOfConfig":"54"},{"size":1228,"mtime":1655824796073,"results":"101","hashOfConfig":"54"},{"size":225,"mtime":1655824796065,"results":"102","hashOfConfig":"54"},{"size":753,"mtime":1655824796072,"results":"103","hashOfConfig":"54"},{"size":372,"mtime":1656541239828,"results":"104","hashOfConfig":"54"},{"size":5178,"mtime":1656956639177,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"dn4ahk",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"214","usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/julianallenderussek/Coding/QuikenFrontend/src/index.js",[],["223","224"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/App.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/RastreoPagina.js",["225","226"]," import React,  { useState, useEffect} from 'react'\nimport { useParams ,useHistory} from 'react-router'\nimport Navbar from '../components/Navbar/Navbar'\nimport './RastreoPagina.scss';\nimport styled from 'styled-components'\nimport IconoRastreo from '../assets/Inicio/Icono_rastreo-43.svg'\nimport Footer from '../components/Footer/Footer'\nimport ShippingInformation from '../components/Tracking/ShippingInformation';\nimport FloatingWhatsApp from '../components/Others/WhatsappBtn';\nimport { Helmet } from 'react-helmet'\nimport { ClipLoader } from 'react-spinners';\nimport { Loading } from '../utilities/Loading';\n\nconst RasteroPagina = () => {\n  \n  const history = useHistory()\n\n  const [needsRerender, setNeedsRerender] = useState(true)\n  const [loading, setLoading] = useState(true)\n  const [guideInformation, setGuideInformation] = useState()\n  const [hasError, setHasError] = useState(false)\n  const [shipmentHistory, setShipmentHistory] = useState()\n  const [newTrackedGuide, setNewTrackedGuide] = useState({inputValue: \"\"})\n  const [error, setError] = useState()\n  const params = useParams()\n  const guideNumber = params.guide\n  \n  const handleChange = (event) => {\n    let value = event.target.value.replace(/\\D/g, '');\n    setNewTrackedGuide({inputValue: value})\n  }\n\n  const handleClick = () => {\n    if (newTrackedGuide.inputValue.length > 0) {\n      history.push(`/rastreo/${newTrackedGuide.inputValue}`)\n      setNeedsRerender(!needsRerender)\n    } else {\n      setError(\"Favor de ingresar un numéro de guia\")\n    }\n  }\n \n  const getGuideInfo = async () => {\n    const body = {\n      \"clientDetail\": {\n        \"accountName\": localStorage.getItem(\"email\"),\n        \"apiKey\": localStorage.getItem(\"api_key\")\n      },\n      \"trackingNumbers\": [\n        guideNumber\n      ]\n    }\n\n    const url = `${process.env.REACT_APP_API_URL}/track`\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(body)\n    })\n    \n    const data = await response.json()\n    console.log(data);\n    try {\n      console.log(data)\n      setGuideInformation(data)\n      setShipmentHistory(data.data.shipments[0].shipmentHistory)\n    }\n    catch {      \n      console.log(data.description === \"No shipments found\")\n      \n      if (!guideNumber === true) {\n        setError('Por favor ingresa tu codigo de rastreo.')\n        setHasError(true)\n        \n      } \n      \n      else if (data.description === \"No shipments found\") {\n        console.log('this applies 1');\n        setError('Tu numéro de rastreo no fue encontrado. Favor de ingresarlo nuevamente.')\n        setHasError(true)\n      } \n      \n      else {\n        console.log('this applies 2');\n        // setError('Tu numéro de rastreo no fue encontrado. Favor de ingresarlo nuevamente.')\n        setHasError(true)\n      }\n      \n    }\n    setLoading(false)\n  }\n\n\n  useEffect(() => {\n    setLoading(true)\n    setHasError(false)\n    setError('')\n    getGuideInfo()  \n  }, [needsRerender])\n\n  \n  return (\n    <>\n      <Helmet>\n        <title>Quiken Rastreo</title>\n        <meta \n          name=\"description\"\n          content=\"Servicios de paqueteria y fulfilment en México, rastreo de guias\"\n        />\n        <meta\n          name=\"keywords\" content=\"Envios, Paqueteria, ecommerce, delivery\"\n        />\n      </Helmet>\n      <Navbar/>\n      <FloatingWhatsApp/>\n      <div className=\"request-body-wrapper\">\n\n        {loading ? \n          <Loading></Loading>\n          :\n        <div>\n          <div className=\"div-wrapper-rastero\">\n            <h1 className=\"request-header\">Rastreo y Seguimiento</h1>\n            <div>\n              <div className=\"div-tracking\">\n                <p className=\"rastreo-blue-letters\">Ingresa tu número de rastreo:</p>\n                <div className=\"rastreo-input-div\">\n                  <input id='input-rastreo' \n                  required\n                  className=\"tracking-number-input\"\n                  value={newTrackedGuide.inputValue} \n                  onChange={handleChange} \n                  placeholder=\"Código de rastreo\"></input>\n                  {/* <Link to={`/rastreo/${newTrackedGuide}`}> */}\n                    <PlaceHolderLookUp onClick={handleClick}>\n                      <img className=\"icono-rastreo\" src={IconoRastreo} alt=\"icono-rastreo\" ></img>\n                    </PlaceHolderLookUp>\n                  {/* </Link>   */}\n                \n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div>\n            {hasError ? \n            \n            <div className=\"main-wrapper-table-title\">\n              <a href='#input-rastreo'>\n                {\n                hasError === false ? \n                \n                <h1 className=\"estado-de-envio-heading-ingresa-guia\">\n                  Favor de ingresar un código de rastreo\n                </h1> : \n                \n                <h1 className=\"estado-de-envio-heading-ingresa-guia\">\n                  {error}\n                </h1>\n                }\n              </a>\n              \n              <div className=\"wrapper-table-titulo\">\n                <div>\n                  \n                  <h1 className=\"historial-pedido-heading\">Historial de Pedido</h1>\n                  \n                  <table className=\"tracking-table\">\n                    <thead>\n                      <tr>\n                        <th className=\"table-header-tracking\">Estatus</th>\n                        <th className=\"table-header-tracking\">Descripción</th>\n                        <th className=\"table-header-tracking\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"tbody-tracking-table\">\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                      \n                    </tbody>\n                  </table> \n                \n                </div>\n            </div>\n            \n            </div> : \n            \n            <div>\n              <ShippingInformation guideInformation={guideInformation} guideNumber={guideNumber} shipmentHistory={shipmentHistory}/>\n            </div> }\n              \n          </div>\n          \n          \n          {/* <>\n          <div>\n            <h1 className=\"estado-de-envio-heading\">Estado de envío</h1>\n            <h1 className=\"estado-de-pedido\">Status: <span>{guideNumber}</span> </h1>\n            <h1 className=\"estado-de-pedido\">Código de rastreo:  <span>{guideNumber}</span></h1>\n          </div>  \n\n          <div>\n            <h1 className=\"historial-pedido-heading\">Historial de Pedido</h1>\n            \n            <table className=\"tracking-table\">\n              <thead>\n                <tr>\n                  <th className=\"table-header-tracking\">Estatus</th>\n                  <th className=\"table-header-tracking\">Descripción</th>\n                  <th className=\"table-header-tracking\">Fecha</th>\n                </tr>\n              </thead>\n              <tbody className=\"tbody-tracking-table\">\n                {shipmentHistory.map((step) => {\n                  return (\n                    <tr>\n                    <td className=\"table-data-tracking\">{step.status}</td>\n                    <td className=\"table-data-tracking\">{step.description}</td>\n                    <td className=\"table-data-tracking\">{step.date}</td>\n                  </tr>)\n                })}\n              </tbody>\n            </table> \n          </div>\n          </> */}\n\n        </div>\n        \n      }\n      <Footer/>\n\n      </div>\n\n    </>  \n  )\n}\n\nconst PlaceHolderLookUp = styled.div`\nheight: 32px;\nwidth: 30px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center ;\nbackground-color: red;\nbackground-image: url(\"./\");\nborder-radius: 0px 5px 5px 0px;\n/* border: solid 1px black; */\n@media (max-width: 768px) {\n    height: 30px;\n    width: 50px;\n    align-self: center;\n    justify-self: center;\n    \n  } \n`\n\nexport default RasteroPagina;","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/ServiciosPagina.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/InicioPagina.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/FulfillmentPagina.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/SignUpPagina.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/ForgotPasswordPagina.js",["227"],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ForgotPasswordPagina.scss\";\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst ForgotPasswordScreen = () => {\n  \n  const history = useHistory()\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n\n  const forgotPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n\n    let formData = new FormData();\n    formData.append('email', email); \n\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API_URL}/user/password/recovery`,\n        formData,\n        config\n      );\n\n      setSuccess(data.data);\n      console.log(data)\n      if (data.status == \"SUCCESS\") {\n        alert(\"Un email de recuperacion ha sido envidado a tu correo.\")\n        history.push(\"/\")\n      }\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail(\"\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar/>\n      <div className=\"forgotpassword-screen\">\n        <form\n          onSubmit={forgotPasswordHandler}\n          className=\"forgotpassword-screen__form\"\n        >\n          <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\n          {error && <span className=\"error-message\">{error}</span>}\n          {success && <span className=\"success-message\">{success}</span>}\n          <div className=\"form-group\">\n            <p className=\"forgotpassword-screen__subtext\">\n              Please enter the email address you register your account with.<br/> We\n              will send you reset password confirmation to this email\n            </p>\n            <label className=\"form-label\" htmlFor=\"email\">Email:</label>\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              required\n              id=\"email\"\n              placeholder=\"Email address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button id=\"btn\" type=\"submit\" className=\"btn-contact-form\">\n            Send\n          </button>\n        </form>\n      </div>\n      <Footer/>\n    </>\n  );\n};\n\nexport default ForgotPasswordScreen;","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/ContactoPagina.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/SignInPagina.js",["228","229","230","231","232","233","234","235"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/ResetPasswordPagina.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/RecargarSaldoPagina.js",["236","237","238","239","240","241"],"import React, { useState, useEffect } from 'react'\nimport \"./RecargarSaldoPagina.scss\"\nimport Navbar from '../components/Navbar/Navbar'\nimport SubNavbar from '../components/Navbar/SubNavbar'\nimport Footer from '../components/Footer/Footer'\nimport CheckoutStripe2 from '../components/Cart/Checkout2'\nimport { AfterpayClearpayMessageElement } from '@stripe/react-stripe-js'\n\nconst RecargarSaldoPagina = () => {\n    //Initializing Variables and States\n    const [paymentMethodSelected, setPaymentMethodSelected] = useState(false)\n    const [paymentMethod, setPaymentMethod] = useState(\"\")\n    const [cartTotal, setCartTotal] = useState(0)\n    const [cart, setCart] = useState([])\n    const [isRechargePaid, setIsRechargePaid] = useState(false);\n    const [hasPaymentError, setHasPaymentError] = useState(false)\n    const [errorPayment, setErrorPayment] = useState(\"\")\n    const [userPoints, setUserPoints] = useState(0)\n\n    let username = localStorage.getItem('email')\n\n    const handleProductClick = async (cart, id) => {\n        console.log(cart);\n        if (cart.length < 5) {\n            const selectedProduct = await items.find(product => product.id === id)\n            cart.push(selectedProduct) \n            setCartTotal(cartTotal + selectedProduct.total)\n        }\n    }\n\n\n    const items = [\n        {id:100, total: 200},\n        {id:101, total: 1000},\n        {id:102, total: 10000}\n    ]\n\n    const requestGetPoints = async (username) => {\n        const url = 'api/user/getPoints/'\n        console.log(username, 'RUNNING THIS')\n        \n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify ({\n                'username': username\n            })\n        });\n        \n        const data = await response.json()\n        console.log(data)\n        console.log(response.status, 'STATUS')\n        if (response.status === 200) {\n            setUserPoints(data.data[0].points)\n        }\n        \n        \n    }\n\n    const requestRecharge = async (username, amount) => {\n        const url = 'api/user/updatePoints'\n        console.log(username, 'RUNNING THIS')\n        console.log('AMOUNT', amount);\n        \n        const response = await fetch(url, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify ({\n                'username': username,\n                'amount': amount \n            })\n        });\n        \n        const data = await response.json()\n        console.log(data)\n        console.log(response.status, 'STATUS')\n        if (response.status === 200) {\n            console.log(data)\n            alert('Tu recarga fue exitosa. Agradecemos tu compra')\n            resetState()\n        }   \n    }\n\n    const resetState = () => {\n        setUserPoints(0)\n        setErrorPayment(\"\")\n        setHasPaymentError(false)\n        setIsRechargePaid(false)\n        setCart([])\n        setCartTotal(0)\n        setPaymentMethod(\"\")\n        setHasPaymentError(false)\n    }\n\n    \n\n    useEffect(() => {\n        requestGetPoints(username)\n        if(isRechargePaid === true) {\n            requestRecharge(username, cartTotal)\n            setIsRechargePaid(false)\n        }\n        \n    }, [isRechargePaid, cartTotal])\n\n    \n    return (\n        <div>\n            <Navbar/>\n            \n            <div className=\"main-wrapper-recargar-saldo\">\n                <div className=\"main-wrapper-comprar-saldo\">\n\n                    <div className=\"wrapper-seleccionador paquetes\">\n                        <h1 className=\"saldo-actual-heading\">1. Recarga Saldo</h1>\n                        \n                        <div className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo Actual</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {userPoints}.00</h1>  \n                        </div>\n\n                        <div className=\"paquetes-de-puntos\">\n                            <label className=\"heading-agregar-puntos\">Da Click y Agrega Puntos!</label>\n                            \n                            <div className=\"card-agrega-credito\" \n                            onClick={() => {\n                                handleProductClick(cart, 100)\n                            }}>\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 200.00</h1>  \n                            </div>\n                            \n                            <div className=\"card-agrega-credito\"\n                            onClick={() => {\n                                handleProductClick(cart, 101)\n                            }}\n                            >\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 1000.00</h1>  \n                            </div>\n\n                            <div className=\"card-agrega-credito\"\n                            onClick={() => {\n                                handleProductClick(cart, 102)\n                            }}\n                            >\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 10000.00</h1>  \n                            </div>\n                            \n\n                        </div>\n\n                    </div>\n                    \n                    <div className=\"wrapper-checkout-puntos\">\n                    <h1 className=\"saldo-actual-heading\">2. Checkout</h1>\n                        \n                        <div  className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo por recargar</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {cartTotal}.00</h1>  \n                        </div>\n\n                        <div  className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo Nuevo</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {cartTotal + userPoints}.00</h1>  \n                        </div>\n                        \n                        <h1 className=\"selecciona-metodo-pago-heading\">Selecciona tu metodo de pago</h1>\n                        \n                        <select className=\"payment-method-selector-saldo\"  onChange={(event) => {\n                            setPaymentMethodSelected(!paymentMethodSelected)\n                            setPaymentMethod(event.target.value)\n                            }}\n                            >\n                            <option value=\"\">Ninguno</option>\n                            <option value=\"tarjeta\">Tarjeta de credito/debito</option>\n                        </select>\n                        \n                    </div>\n                </div>\n                \n                <div>\n                        {\n                        paymentMethodSelected ?\n                            <div className=\"checkout-wrapper\">\n                                <h1 className=\"metodo-tarjeta-heading\">Favor de ingresar la información de su tarjeta.</h1>\n                                <h2 className=\"metodo-tarjeta-subheading\">Numero de Tarjeta, Codigo, Fecha de expiración, Codigo Postal</h2>\n                                <h2 className=\"metodo-tarjeta-subheading\">Aceptamos todo tipo de tarjeta (Visa, AMEX, MasterCard)</h2>\n                                <CheckoutStripe2 setErrorPayment={setErrorPayment} setHasPaymentError={setHasPaymentError} cartTotal={cartTotal} setIsRechargePaid={setIsRechargePaid} />\n                            </div>\n                        :\n                        <div></div>\n                        }\n                        \n                        \n                </div>\n                \n\n            </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default RecargarSaldoPagina\n","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewCotizar.js",["242"],"import React, { useState } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport Cotizador from './Cotizador'\nimport styled from 'styled-components'\n\nconst NewCotizar = () => {\n    const [error, setError] = useState(true);\n  \n    return (\n    <PageWrapper>\n        <Navbar/>\n        <WrapperCotizador>\n            <Sidebar setError={setError}/>\n            <CotizadorWrapper>\n                <Cotizador/>\n            </CotizadorWrapper>\n        </WrapperCotizador>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\n\nconst WrapperCotizador = styled.div`\n    display: flex;\n    flex-direction: row;\n    background-color: #DDE5ED;\n    min-height: 600px;\n`\n\nconst CotizadorWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    align-self: center;\n    justify-content: center;\n`\n\nexport default NewCotizar;","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/UserDashboard.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import { useState, useEffect } from \"react\";\nimport { useHistory, Link } from 'react-router-dom'\nimport axios from \"axios\";\nimport \"./UserDashboard.scss\"\nimport Navbar from '../components/Navbar/Navbar'\nimport GuideTable from '../components/UserDashboard/GuideTable'\nimport Footer from '../components/Footer/Footer'\nimport SubNavbar from '../components/Navbar/SubNavbar'\nimport AccountInfo from '../components/Others/AccountInfo'\n\nconst UserDashboard = () => {   \n\n  const [companyName, setCompanyName] = useState('')\n  const [loggedInUser, setLoggedInUser] = useState('')\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState('')\n  const [userGuides, setUserGuides] = useState([])\n  const [error, setError] = useState(\"\");\n  const [privateData, setPrivateData] = useState(\"\");\n  const history = useHistory();\n  const [userPoints, setUserPoints] = useState(0)\n\n  //States Dashboard\n  const [userSaldo, setUserSaldo] = useState()\n  const [totalRecargas, setTotalRecargas] = useState()\n  const [pesoPromedioGuias, setPesoPromedioGuias] = useState()\n  const [averageCostGuides, setAverageCostGuides] = useState()\n  const [averageCost, setAverageCost] = useState()\n\n  //States for quoate\n  const [testPackageLength, setTestPackageLength] = useState()\n  const [testPackageWidth, setTestPackageWidth] = useState()\n  const [testPackageHeight, setTestPackageHeight] = useState()\n  const [testPackageWeight, setTestPackageWeight] = useState()\n  const [testReceiverPostalCode, setTestReceiverPostalCode] = useState()\n  const [testSenderPostalCode, setTestSenderPostalCode] = useState()\n\n  //Services available\n  const [testServices, setTestServices] = useState()\n  const [testQuoteError, setTestQuoteError] = useState()\n  const [hasQuoteError, setHasQuoteError] = useState(false)\n  const [loadingServicios, setLoadingServicios] = useState(true)\n\n  //Quoate API Call Function\n  const calculateGuide = async () => {\n    const url = `${process.env.REACT_APP_API_URL}/rate`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'},\n      body: JSON.stringify({\n          \"clientDetail\": {\n             \"accountName\": localStorage.getItem('email'),\n             \"apiKey\": localStorage.getItem('api_key')\n           },\n           \"origin\": {\n             \"name\": \"testSender\",\n             \"company\": \"Default Value\",\n             \"email\": \"test@gmail.com\",\n             \"phone\": \"55555555\",\n             \"country\": \"MX\",\n             \"postalCode\": testSenderPostalCode\n           },\n           \"destination\": {\n             \"name\": \"testReceiber\",\n             \"company\": \"Default Value\",\n             \"email\": \"test2@gmail.com\",\n             \"phone\": \"88888888\",\n             \"country\": \"MX\",\n             \"postalCode\": testReceiverPostalCode\n           },\n           \"package\": {\n             \"content\": \"ropa\",\n             \"type\": 1,\n             \"dimensions\": {\n               \"length\": parseInt(testPackageLength),\n               \"width\": parseInt(testPackageWidth),\n               \"height\": parseInt(testPackageHeight)\n             },\n             \"weight\": parseInt(testPackageWeight)\n           }\n      })\n    });\n    const data = await response.json();\n    console.log(data)\n    if (data.status === \"SUCCESS\") {\n      setTestServices(data.data.services)\n      setLoadingServicios(false)\n      setHasQuoteError(false)\n      \n    } else if (data.status === \"ERROR\") {\n      console.log(data.description)\n      setTestQuoteError(data.description)\n      setHasQuoteError(true)\n      setLoadingServicios(false)\n    }\n    \n  }\n\n  const handleSelectedComponent = (event) => {\n    console.log(event.target)\n  }\n\n\n  //Handle click on quote button\n  const handleQuote = async (event) => {\n    event.preventDefault()\n    await calculateGuide()\n    console.log(testServices)\n  }\n\n  const getAverageCost = async (userGuides) => {\n    let totalGuideCostSum = 0;\n    console.log(userGuides.length)\n    let counterGuides = await userGuides.length\n    console.log(counterGuides)\n    userGuides.forEach((guide) => {\n      console.log(avgCost)\n      avgCost = totalGuideCostSum + parseInt(guide.guideCost)\n    })\n    let avgCost = totalGuideCostSum / userGuides.length\n    console.log(avgCost)\n  }\n\n\n\n  //Get Fetch Guides Function\n  const loadUserGuides = async (currentUser) => {\n    console.log('currentUser', currentUser)\n    await fetch(`${process.env.REACT_APP_API_URL}/user/guides`, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(response => response.json())\n    .then(json =>  {\n      console.log('Success:', json);\n      console.log(json.data)\n      setUserGuides(json.data.reverse())\n    })\n    .then(() => getAverageCost(userGuides))\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  };\n\n  //Fetch Private Data\n  const fetchPrivateData = async () => {\n    console.log(\"GUACAMOLE\")\n    console.log(localStorage.getItem(\"access_token\"))\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    };\n\n    try {\n      \n      //AQUI VAN LAS RUTAS DE LAS GUIAS\n      const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/user/info`, {} ,config);\n      console.log(data)\n\n    } catch (error) {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"username\");\n      setError(\"You are not authorized please login\");\n    }\n\n  };\n\n  useEffect(() => {\n    fetchPrivateData();\n    let currentUser = \"jaimito\"\n    let currentUserEmail = localStorage.getItem('email')\n    //requestGetPoints(currentUserEmail)\n    setLoggedInUser(currentUser)\n    setLoggedInUserEmail(currentUserEmail)\n    //loadUserGuides(currentUserEmail);\n  }, []);\n\n  const logoutHandler = () => {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('email');\n      localStorage.removeItem('username');\n      \n      history.push('/signin')\n  }\n\n  return error ? (\n    <>\n      <Navbar/>\n      <div className=\"wrapper-unauthorized-route\">\n        <h1 className=\"unautohorized-heading\">Esta es una ruta privada. Favor de iniciar sesión.</h1>\n        <Link className=\"link-sign-route\" to=\"/signin\">Da click aqui!</Link>\n      </div>\n      {/* <span className=\"error-message\">{error}</span> */}\n      <Footer/>\n    </>\n  ) : (\n    <>  \n        <Navbar/>\n            {/* <div className=\"sub-navbar\">\n              <Link className=\"link-subnavbar\">Inicio</Link>\n              <Link className=\"link-subnavbar\">Cotizar</Link>\n              <Link className=\"link-subnavbar\">Guias</Link>\n              <Link className=\"link-subnavbar\" to=\"/recargarsaldo\">Recarga Saldo</Link>\n              <Link onClick={logoutHandler} className=\"link-subnavbar\">Logout</Link>\n            </div>\n\n            <SubNavbar handleSelectedComponent={handleSelectedComponent} logoutHandler={logoutHandler}/> */}\n\n            <div className=\"main-wrapper-userdashboard\">\n                <AccountInfo handleSelectedComponent={handleSelectedComponent} companyName={companyName} loggedInUser={loggedInUser} loggedInUserEmail={loggedInUserEmail} />\n                \n                {/* <div className=\"account-info-wrapper\">\n                  <h2 className=\"heading-userdashboards\">Dashboard de Enviós</h2>\n                  <div className=\"account-name\">Cuenta: {loggedInUser}</div>\n                  <div className=\"account-name\">Email: {loggedInUserEmail}</div>\n                </div> */}\n\n              \n              <div className=\"main-cotizador-servicios div\">\n                {/* Cotizador */}\n                <div className=\"column-cotizador\">\n                <h1 className=\"cotizador-rapido-main-header\">Cotizador</h1>\n                      <h1 className=\"información-paquete-subheading\">Información Paquete</h1>\n                      \n                      <div className=\"div-main-cotizador-rapido\">  \n                        <div className=\"column-cotizador-rapido\">\n                          <label className=\"label-paquete-info\">Largo del paquete (cm)</label>\n                          <input placeholder=\"Largo (cm)\"\n                          onChange={(event) => setTestPackageLength(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Ancho del paquete (cm)</label>\n                          <input placeholder=\"Ancho (cm)\"\n                          onChange={(event) => setTestPackageWidth(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Alto del paquete (cm)</label>\n                          <input placeholder=\"Alto (cm)\"\n                          onChange={(event) => setTestPackageHeight(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">Peso del paquete (kg)</label>\n                          <input placeholder=\"Peso (cm)\"\n                          onChange={(event) => setTestPackageWeight(event.target.value)}\n                          />\n\n                        </div>\n                        \n                        <div className=\"column-cotizador-rapido\">\n                        <label className=\"label-paquete-info\">¿Desde dónde envias?</label>\n                          <input placeholder=\"Codigo Postal\"\n                          onChange={(event) => setTestSenderPostalCode(event.target.value)}\n                          />\n\n                          <label className=\"label-paquete-info\">¿Hacia dónde envias?</label>\n                          <input placeholder=\"Codigo Postal\"\n                          onChange={(event) => setTestReceiverPostalCode(event.target.value)}\n                          />\n                        </div>\n                        \n                    </div>\n                      <div className=\"cotizador-row-button\">\n                        <button class=\"button-cotizar-servicios\"onClick={(event) => handleQuote(event)}>Cotizar</button>\n                      </div>\n                </div>\n\n\n                {/* Empieza aqui */}\n                <div className=\"column-cotizador\">\n                      <h1 className=\"servicios-subheading-cotizador\">Servicios ofrecidos:</h1>\n                      {loadingServicios ? <h1 className=\"servicios-paragraph-cotizador\">Utiliza nuestro cotizador rapido para ver los servicios de entrega que manejamos.</h1> : \n                        hasQuoteError ? <div>{testQuoteError}</div> : \n                      \n      \n                      testServices.map((servicio) => {\n                        return (\n                          <div className=\"row-servicio-quota\">\n                            <table>\n                              <tr>\n                                <th>Codigo de Servico:</th>\n                                <th>Tipo de Servicio:</th>\n                                <th>Tiempo de Entrega:</th>\n                                <th>Precio:</th>\n                              </tr>\n                              <tr>\n                                <td>{servicio.name}</td>\n                                <td>{servicio.type}</td>\n                                <td>{servicio.estimateDelivery}</td>\n                                <td>${servicio.totalPrice}.99</td>\n                              </tr>\n                            </table>\n                          </div>\n                        )\n                      })}\n                      \n                </div>\n                {/* Termina Aqui */}\n\n              </div>\n\n              <div className=\"menu-opciones-saldo\">\n                \n                <div className=\"card-row-wrapper\">\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Saldo disponible</label>\n                    <h1 className=\"featured-number\">$ {userPoints}.00</h1>\n                    <Link className=\"recargar-saldo-link\" to=\"/recargarsaldo\">\n                      Recagar Saldo {\">\"}\n                    </Link>\n                  </div>\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Costo Promedio</label>\n                    <h1 className=\"featured-number\">$ 0.00</h1>\n                    <Link className=\"recargar-saldo-link-trans\" >Recagar Saldo {\">\"}</Link>\n                  </div>\n                </div>\n\n                <div className=\"card-row-wrapper\">\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Total Recargas</label>\n                    <h1 className=\"featured-number\">$ {totalRecargas}.00</h1>\n                    <Link className=\"recargar-saldo-link\" to=\"/recargarsaldo\">Recagar Saldo {\">\"}</Link>\n                  </div>\n                  <div className=\"card-dashboard\">\n                    <label className=\"label-paquete-info\">Peso Promedio</label>\n                    <h1 className=\"featured-number\">0.00 Kg</h1>\n                    <Link className=\"recargar-saldo-link-trans\" >Recagar Saldo {\">\"}</Link>\n                  </div>\n                </div>\n\n                <div className=\"card-row-wrapper\">\n                  <Link to=\"/recargarsaldo\">\n                    <button className=\"btn-contact-form \">Recargar Saldo</button>        \n                  </Link>\n                  <Link to=\"/createguide\">\n                    <button id=\"blue\" className=\"btn-contact-form \">Crear Guia</button>\n                  </Link>\n                  \n                    <button onClick={logoutHandler} className=\"btn-contact-form \">Logout</button>\n                  \n                </div>\n\n              </div>\n\n              <h1 className=\"tabla-de-guias-heading\">Tabla de Guias</h1>  \n              <GuideTable userGuides={userGuides}/>\n              \n              <div className=\"div-row-wrapper\">\n                <Link to=\"/createguide\">\n                  <button id=\"blue\" className=\"btn-contact-form\">Crear Guida</button>\n                </Link>\n                <button className=\"btn-contact-form \" onClick={logoutHandler}>Logout</button>\n              </div>\n            </div>\n          <Footer/>\n        \n    </>\n  );\n};\n\nexport default UserDashboard;","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewCreateGuide.js",["258","259","260"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/CreateGuidePagina.js",["261","262","263"],"import React, { useState, useEffect} from 'react';\nimport Navbar from '../components/Navbar/Navbar';\nimport axios from 'axios'\nimport './CreateGuidePagina.scss'\nimport Footer from '../components/Footer/Footer'\nimport { Link } from 'react-router-dom';\nimport CheckoutStripe from '../components/Cart/Checkout'\n\nconst CreateGuidePagina = () => {\n\n  //Username for fetching points\n  let username = localStorage.getItem('email')\n\n  //Create Guide Sucess\n  const [success, setSuccess] = useState(false)\n  \n  //Guide Data\n  const [apiGuide, setApiGuide] = useState()\n  const [hrefFile, setHrefFile] = useState(\"\")\n\n  //Payment and Selected Guide\n  // const [selectedGuide, setSelectedGuide] = useState(false)\n  const [selectedService, setSelectedService] = useState()\n  const [paymentMethod, setPaymentMethod] = useState(null)\n\n  //currentUser (HARDCODED)\n  // const [currentUser, setcurrentUser] = useState('')\n  const [guideCost, setguideCost] = useState(0)\n\n  //Types of Services\n  const [services, setServices] = useState()\n  const [loadingQuoteData, setLoadingQuoteData] = useState(true)\n\n  //User Points State\n  const [points, setPoints] = useState(100);\n  const [isPointsEnough, setIsPointsEnough] = useState(false)\n  const [needsReset, setNeedsReset] = useState(false)\n\n    //Origin STATES\n  const [fullNameSender, setFullNameSender] = useState('');\n  const [emailSender, setEmailSender] = useState('');\n  const [phoneNumberSender, setPhoneNumberSender] = useState('');\n  const [streetAndNumberSender, setStreetandNumberSender] = useState('');  \n  const [referenciasSender, setReferenciasSender] = useState('');\n  const [colonySender, setColonySender] = useState('');\n  const [postalCodeSender, setPostalCodeSender] = useState('');\n  const [citySender, setCitySender] = useState('');\n  const [mexicoStateSender, setMexicoStateSender] = useState('');\n    \n  // Origin Error\n  const [fullNameSenderError, setFullNameSenderError] = useState('');\n  const [emailSenderError, setEmailSenderError] = useState('');\n  const [phoneNumberSenderError, setPhoneNumberSenderError] = useState('');\n  const [streetAndNumberSenderError, setStreetandNumberSenderError] = useState('');\n  const [colonySenderError, setColonySenderError] = useState('');\n  const [postalCodeSenderError, setPostalCodeSenderError] = useState('');\n  const [citySenderError, setCitySenderError] = useState('');\n  const [errorQuote, setErrorQuote] = useState(\"\")\n\n    // \"\" STATES\n  const [fullNameReceiver, setFullNameReceiver] = useState('');\n  const [emailReceiver, setEmailReceiver] = useState('');\n  const [phoneNumberReceiver, setPhoneNumberReceiver] = useState('');\n  const [streetAndNumberReceiver, setStreetandNumberReceiver] = useState('');  \n  const [referenciasReceiver, setReferenciasReceiver] = useState('');\n  const [colonyReceiver, setColonyReceiver] = useState('');\n  const [postalCodeReceiver, setPostalCodeReceiver] = useState('');\n  const [cityReceiver, setCityReceiver] = useState('');\n  const [mexicoStateReceiver, setMexicoStateReceiver] = useState('');\n  \n  // To Errors\n  const [fullNameReceiverError, setFullNameReceiverError] = useState('');\n  const [emailReceiverError, setEmailReceiverError] = useState('');\n  const [phoneNumberReceiverError, setPhoneNumberReceiverError] = useState('');\n  const [streetAndNumberReceiverError, setStreetandNumberReceiverError] = useState('');\n  const [colonyReceiverError, setColonyReceiverError] = useState('');\n  const [postalCodeReceiverError, setPostalCodeReceiverError] = useState('');\n  const [cityReceiverError, setCityReceiverError] = useState('');\n  \n  //PACKAGE VALUES\n  const [packageLenght, setPackageLenght] = useState('');\n  const [packageWidth, setPackageWidth] = useState('');\n  const [packageHeight, setPackageHeight  ] = useState('');\n  const [packageWeight, setPackageWeight] = useState('');  \n  const [packageDescription, setPackageDescription] = useState('');\n    //PACKAGE ERRORS\n  const [packageLenghtError, setPackageLenghtError] = useState('');\n  const [packageWidthError, setPackageWidthError] = useState('');\n  const [packageHeightError, setPackageHeightError  ] = useState('');\n  const [packageWeightError, setPackageWeightError] = useState('');  \n  const [packageDescriptionError, setPackageDescriptionError] = useState('');\n\n//Get User Points\nconst requestGetPoints = async (username) => {\n  const url = 'api/user/getPoints/'\n  \n  const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n          'Content-Type': 'application/json',\n        },\n      body: JSON.stringify ({\n          'username': username\n      })\n  });\n  \n  const data = await response.json()\n  if (response.status === 200) {  \n    setPoints(data.data[0].points)\n  }\n}\n\n//Create Guide Function\nconst createGuide = async () => {\n  await createGuideApi() \n}\n//Step One Guide Creation\nconst createGuideApi = async () => {\n  const urlApiCreate = 'https://test.quiken.mx/generate';\n  const responseApi = await fetch(urlApiCreate, {\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json',\n    },\n    body: JSON.stringify({\n      \"clientDetail\": {\n        \"accountName\": localStorage.getItem('email'),\n        \"apiKey\": localStorage.getItem('api_key')\n      },\n      \"origin\": {\n        \"name\": fullNameSender,\n        \"company\": fullNameSender,\n        \"email\": emailSender,\n        \"phone\": phoneNumberSender,\n        \"street\": streetAndNumberSender,\n        \"ext_number\": \"col\",\n        \"int_number\": \"\",\n        \"district\": \"\",\n        \"city\": citySender,\n        \"state\": mexicoStateSender,\n        \"country\": \"MX\",\n        \"postalCode\": postalCodeSender,\n        \"reference\": referenciasSender\n      },\n      \"destination\": {\n        \"name\": fullNameSender,\n        \"company\": fullNameReceiver,\n        \"email\": emailReceiver,\n        \"phone\": phoneNumberReceiver,\n        \"street\": streetAndNumberReceiver,\n        \"ext_number\": \"col\",\n        \"int_number\": \"\",\n        \"district\": \"\",\n        \"city\": cityReceiver,\n        \"state\": mexicoStateReceiver,\n        \"country\": \"MX\",\n        \"postalCode\": postalCodeReceiver,\n        \"reference\": referenciasReceiver\n      },\n      \"package\": {\n        \"content\": \"ropa\",\n        \"type\": 1,\n        \"dimensions\": {\n          \"length\": 10,\n          \"width\": 10,\n          \"height\": 25\n        },\n        \"weight\": 1\n      },\n      \"shipment\": {\n        \"service\": selectedService\n      },\n      \"settings\": {\n        \"labelFormat\": \"pdf\"\n      }\n    })\n  });\n  console.log(responseApi)\n  const data = await responseApi.json()\n  console.log('DATA API REQUEST', data)\n  setApiGuide(data)\n  createGuideQuiken(data)\n}\n\n//Step Two Guide Creation\nconst createGuideQuiken = async (apiGuide) => {\n    let guideStatus = \"Activa\"\n    console.log(apiGuide)\n    let trackingNumber = apiGuide.data.trackingNumber\n    console.log(trackingNumber, 'THIS IS TRACKIGN NUMBER')\n    let fileUrl = apiGuide.data.fileUrl\n    setHrefFile(fileUrl)\n    \n    //Creating Guide in Database:\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      let currentUser = localStorage.getItem('email')\n      console.log(currentUser)\n      const { data } = await axios.post(\n        \"/api/user/createguide\",\n        {\n          currentUser,\n          guideCost,\n          trackingNumber,\n          fileUrl,\n          guideStatus,      \n          fullNameSender,\n          emailSender,\n          phoneNumberSender,\n          streetAndNumberSender,  \n          referenciasSender,\n          colonySender,\n          postalCodeSender,\n          citySender,\n          mexicoStateSender,\n          fullNameReceiver,\n          emailReceiver,\n          phoneNumberReceiver,\n          streetAndNumberReceiver,  \n          referenciasReceiver,\n          colonyReceiver,\n          postalCodeReceiver,\n          cityReceiver,\n          mexicoStateReceiver,\n          packageLenght,\n          packageWidth,\n          packageHeight,\n          packageWeight,\n          packageDescription\n        },\n        config\n      );\n      console.log(data, 'THIS IS DATA')\n      setSuccess(true)\n      alert('Tu guida fue creada exitosamente.')\n      // history.push(\"/userdashboard\");\n    } catch (error) {\n      console.log(error)\n    }\n    \n}\n\n// Guide Cost Function\nconst calculateNewGuidePrice = async () => {\n  const url = 'https://api.quiken.mx/rate';\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n        \"clientDetail\": {\n          \"accountName\": localStorage.getItem('email'),\n          \"apiKey\": localStorage.getItem('api_key')\n         },\n         \"origin\": {\n           \"name\": fullNameSender,\n           \"company\": \"Default Value\",\n           \"email\": emailSender,\n           \"phone\": phoneNumberSender,\n           \"country\": \"MX\",\n           \"postalCode\": postalCodeSender\n         },\n         \"destination\": {\n           \"name\": fullNameReceiver,\n           \"company\": \"Default Value\",\n           \"email\": emailReceiver,\n           \"phone\": phoneNumberReceiver,\n           \"country\": \"MX\",\n           \"postalCode\": postalCodeReceiver\n         },\n         \"package\": {\n           \"content\": \"ropa\",\n           \"type\": 1,\n           \"dimensions\": {\n             \"length\": parseInt(packageLenght),\n             \"width\": parseInt(packageWidth),\n             \"height\": parseInt(packageHeight)\n           },\n           \"weight\": parseInt(packageWeight)\n         }\n    })\n  });\n  const data = await response.json();\n  console.log(data)\n  if (data.status === \"SUCCESS\") {\n    console.log(data.data.services, 'DATA DATA SERVICES');\n    setServices(data.data.services)\n    setLoadingQuoteData(false)\n    \n  } else if (data.status === \"ERROR\") {\n    setErrorQuote(data.description)\n    setLoadingQuoteData(false)\n  }\n  \n}\n\nconst handleSelectGuide = (servicio) => {\n  setSelectedService(servicio.code)\n  console.log(servicio.code)\n  setguideCost(servicio.totalPrice)\n}\n\n\n//   Validation Functions\n  function hasLetters (phone) {\n    return /^\\d+$/.test(phone)\n  }\n\n  function emailIsValid (email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n  }\n\n  const formValidation = () => {\n    const fullNameSenderError = {};\n    const emailSenderError = {};\n    const phoneNumberSenderError = {};\n    const streetAndNumberSenderError = {};\n    const colonySenderError = {};\n    const postalCodeSenderError = {};\n    const citySenderError = {};\n    const fullNameReceiverError = {};\n    const emailReceiverError = {};\n    const phoneNumberReceiverError = {};\n    const streetAndNumberReceiverError = {};\n    const colonyReceiverError = {};\n    const postalCodeReceiverError = {};\n    const cityReceiverError = {};\n    const packageLenghtError = {};\n    const packageWidthError = {};\n    const packageHeightError = {};\n    const packageWeightError = {};\n    const packageDescriptionError = {};\n    \n\n    let isValid = true;\n    \n    //Name Validation Origin\n    if (fullNameSender.trim().length < 5) {\n      fullNameSenderError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n      isValid = false;\n      console.log(\"name too short\")\n    }\n\n    if (fullNameSender.trim().match(/[0-9]/)) {\n      fullNameSenderError.FullNameLong = \"Favor de ingresar solamente letras\";\n      isValid = false;\n    }\n\n    setFullNameSenderError(fullNameSenderError)\n\n    //REGEX Email Validation \n    \n    if (emailIsValid(emailSender) === false) {\n      emailSenderError.EmailError = \"El email no es valido\"\n      isValid = false;\n      console.log(\"The email is not valid\")\n    }\n\n    setEmailSenderError(emailSenderError)\n    \n    if (phoneNumberSender.trim().length < 10) {\n      phoneNumberSenderError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n      console.log(\"el telefono es muy corto\")\n      isValid = false;\n    }\n    \n\n    if (hasLetters(phoneNumberSender) === false) {\n      phoneNumberSenderError.PhoneTooShort = \"Favor de introducir solo numeros\"\n      isValid = false;\n    }\n\n    setPhoneNumberSenderError(phoneNumberSenderError)\n\n    if (streetAndNumberSender.trim().length < 5) {\n      streetAndNumberSenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setStreetandNumberSenderError(streetAndNumberSenderError)\n\n    if (colonySender.trim().length < 5) {\n      colonySenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n      isValid = false;\n    }\n\n    setColonySenderError(colonySenderError)\n\n    if (postalCodeSender.trim().length < 4) {\n      postalCodeSenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    if (postalCodeSender.trim().length > 11) {\n      postalCodeSenderError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n      isValid = false;\n    }\n    \n    setPostalCodeSenderError(postalCodeSenderError)\n\n    if (citySender.trim().length < 5) {\n      citySenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n      isValid = false;\n    }\n\n    setCitySenderError(citySenderError)\n\n    // To Section Validation\n\n    if (fullNameReceiver.trim().length < 5) {\n        fullNameReceiverError.FullNameReceiverShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n        isValid = false;\n        console.log(\"name too short\")\n      }\n  \n    if (fullNameReceiver.trim().match(/[0-9]/)) {\n        fullNameReceiverError.FullNameLong = \"Favor de ingresar solamente letras\";\n        isValid = false;\n      }\n  \n    setFullNameReceiverError(fullNameReceiverError)\n    \n    if (emailIsValid(emailReceiver) === false) {\n        emailReceiverError.EmailError = \"El email no es valido\"\n        isValid = false;\n        console.log(\"The email is not valid\")\n      }\n  \n      setEmailReceiverError(emailReceiverError)\n      \n    if (phoneNumberReceiver.trim().length < 10) {\n        phoneNumberReceiverError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n        console.log(\"el telefono es muy corto\")\n        isValid = false;\n      }\n\n      if (hasLetters(phoneNumberReceiver) === false) {\n        phoneNumberReceiverError.PhoneTooShort = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPhoneNumberReceiverError(phoneNumberReceiverError)\n  \n      if (streetAndNumberReceiver.trim().length < 5) {\n        streetAndNumberReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setStreetandNumberReceiverError(streetAndNumberReceiverError)\n  \n      if (colonyReceiver.trim().length < 5) {\n        colonyReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n        isValid = false;\n      }\n  \n      setColonyReceiverError(colonyReceiverError)\n  \n      if (postalCodeReceiver.trim().length < 4) {\n        postalCodeReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n        isValid = false;\n      }\n  \n      if (postalCodeReceiver.trim().length > 11) {\n        postalCodeReceiverError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n        isValid = false;\n      }\n      \n      setPostalCodeReceiverError(postalCodeReceiverError)\n  \n      if (cityReceiver.trim().length < 5) {\n        cityReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n        isValid = false;\n      }\n  \n      setCityReceiverError(cityReceiverError)\n      \n      if (packageLenght.length === 0) {\n        packageLenghtError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageLenght) === false) {\n        console.log(\"solo numeros\")\n        packageLenghtError.PackageLenghtLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageLenghtError(packageLenghtError)\n  \n      if (packageWidth.length === 0) {\n        packageWidthError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageWidth) === false) {\n        console.log(\"solo numeros\")\n        packageWidthError.PackageWidthLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageWidthError(packageWidthError)\n      \n      if (packageHeight.length === 0) {\n        packageHeightError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageHeight) === false) {\n        console.log(\"solo numeros\")\n        packageHeightError.PackageHeightLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageHeightError(packageHeightError)\n  \n      if (packageWeight.length === 0) {\n        packageWeightError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      if (hasLetters(packageWeight) === false) {\n        console.log(\"solo numeros\")\n        packageWeightError.PackageWeightLetters = \"Favor de introducir solo numeros\"\n        isValid = false;\n      }\n  \n      setPackageWeightError(packageWeightError)\n      \n      if (packageDescription.length === 0) {\n        packageDescriptionError.NoValue = \"Favor de ingresar un valor\"\n      }\n  \n      setPackageDescriptionError(packageDescriptionError)\n\n    return isValid\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = formValidation();\n    if (isValid) {\n      await calculateNewGuidePrice()\n  }  \n\n  else {\n    setLoadingQuoteData(true)\n    setServices()\n    setguideCost(0)\n  }\n}\n\n\nconst payWithPoints = async (username, guideCost) => {\n  const url = 'api/user/payWithPoints'\n  console.log(username, 'RUNNING THIS')\n  console.log('GUIDE COST', guideCost)\n  \n  const response = await fetch(url, {\n      method: \"PUT\",\n      headers: {\n          'Content-Type': 'application/json',\n        },\n      body: JSON.stringify ({\n          'username': username,\n          'guideCost': guideCost \n      })\n  });\n  \n  const data = await response.json()\n  console.log(data)\n  console.log(response.status, 'STATUS')\n  if (response.status === 200) {\n      alert('Tu pago con puntos fue exitoso. Agradecemos tu compra')\n      setNeedsReset(true)\n      createGuide()\n  }   \n}\n\n//Use Effect for Payment With Points\nuseEffect(() => {\n  setNeedsReset(false)\n  requestGetPoints(username)\n  setIsPointsEnough(false)\n  const difference = points - guideCost\n  if (difference >= 0) {\n    setIsPointsEnough(true)\n  }\n}, [paymentMethod, points, needsReset])\n\n    return (\n      <>\n        <Navbar/>\n        <div className=\"main-wrapper-page\">                    \n            \n            {/* FIRST TWO SECTIONS */}\n            <div className=\"row-first-two-sections\">              \n              {/* ORIGIN SECTION */}\n              <div className=\"seccion-desde-donde-envias\">\n              <h1 className=\"subheading-form-create-guide\"> 1. ORIGEN:</h1>\n                  <div>\n                  <div>\n                  {/* <label className=\"form-label\" style={{display:'block'}}>Nombre Completo <span style={{color: \"red\"}}>*</span></label> */}\n                    <label className=\"label-create-guide-form\">Nombre Completo</label>\n                    <input className=\"input-create-guide-form\" value={fullNameSender}\n                        onChange= {event => setFullNameSender(event.target.value)}\n                        type=\"text\" placeholder=\"Nombre Completo\" />\n                    {Object.keys(fullNameSenderError).map((key) => {return <div>{fullNameSenderError[key] }</div>})}\n                  </div>\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Correo Electrónico</label>\n                      <input className=\"input-create-guide-form\" value={emailSender} onChange={(event) => setEmailSender(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                      </div>                \n                      {Object.keys(emailSenderError).map((key) => { return <div>{emailSenderError[key]}</div> })}  \n                      \n                  <div>\n                  <label className=\"label-create-guide-form\">Teléfono</label>\n                      <input className=\"input-create-guide-form\" value={phoneNumberSender} onChange={(event) => setPhoneNumberSender(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                      {Object.keys(phoneNumberSenderError).map((key) => {return <div>{phoneNumberSenderError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Calle y Número</label>\n                      <input className=\"input-create-guide-form\" value={streetAndNumberSender} onChange={(event) => setStreetandNumberSender(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                      </div>\n                      {Object.keys(streetAndNumberSenderError).map((key) => {return <div>{streetAndNumberSenderError[key] }</div>})}\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Referencia</label>\n                      <input className=\"input-create-guide-form\" value={referenciasSender} onChange={(event) => setReferenciasSender(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n                      </div>\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Colonia</label>\n                      <input className=\"input-create-guide-form\" value={colonySender} onChange={(event) => setColonySender(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                      </div>\n                  {Object.keys(colonySenderError).map((key) => {return <div>{colonySenderError[key] }</div>})}\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Código Postal</label>\n                      <input className=\"input-create-guide-form\" value={postalCodeSender} onChange={(event) => setPostalCodeSender(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                      </div>\n                  {Object.keys(postalCodeSenderError).map((key) => {return <div>{postalCodeSenderError[key] }</div>})}\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Ciudad</label>\n                      <input className=\"input-create-guide-form\" value={citySender} onChange={(event) => setCitySender(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                      </div>\n                  {Object.keys(citySenderError).map((key) => {return <div>{citySenderError[key] }</div>})}\n\n                  <div className=\"field-holder\">\n                      <label className=\"label-create-guide-form\">Estado</label>\n                      <select className=\"input-create-guide-form\" name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateSender(event.target.value)}>\n                        <option value=\"no\">Seleccione Estado.</option>\n                        {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                        <option value=\"Baja California\">Baja California</option>\n                        <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                        {/* <option value=\"Campeche\">Campeche</option>\n                        <option value=\"Chiapas\">Chiapas</option> */}\n                        <option value=\"CH\">Chihuahua</option>\n                        <option value=\"CX\">Ciudad de México</option>\n                        <option value=\"CO\">Coahuila</option>\n                        {/* <option value=\"Colima\">Colima</option> */}\n                        <option value=\"DG\">Durango</option>\n                        {/* <option value=\"Estado de México\">Estado de México</option> */}\n                        <option value=\"GT\">Guanajuato</option>\n                        {/* <option value=\"Guerrero\">Guerrero</option> */}\n                        <option value=\"HG\">Hidalgo</option>\n                        <option value=\"JL\">Jalisco</option>\n                        {/* <option value=\"Michoacán\">Michoacán</option>\n                        <option value=\"Morelos\">Morelos</option>\n                        <option value=\"Nayarit\">Nayarit</option> */}\n                        <option value=\"NL\">Nuevo León</option>\n                        {/* <option value=\"Oaxaca\">Oaxaca</option>\n                        <option value=\"Puebla\">Puebla</option> */}\n                        <option value=\"QT\">Querétaro</option>\n                        {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                        <option value=\"SL\">San Luis Potosí</option>\n                        {/* <option value=\"Sinaloa\">Sinaloa</option>\n                        <option value=\"Sonora\">Sonora</option>\n                        <option value=\"Tabasco\">Tabasco</option> */}\n                        <option value=\"TM\">Tamaulipas</option>\n                        {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                        <option value=\"VE\">Veracruz</option>\n                        {/* <option value=\"Yucatán\">Yucatán</option>\n                        <option value=\"Zacatecas\">Zacatecas</option> */}\n                    </select>\n                  </div>\n              \n              </div>\n              </div>\n\n              {/* TO SECTION */}\n              <div className=\"seccion-desde-donde-envias\">\n              <h1 className=\"subheading-form-create-guide\">2. DESTINO:</h1>\n                  <div>\n                  <div>\n                      <label className=\"label-create-guide-form\">Nombre Completo</label>\n                      <input className=\"input-create-guide-form\"\n                      value={fullNameReceiver}\n                      onChange= {event => setFullNameReceiver(event.target.value)}\n                      type=\"text\" placeholder=\"Nombre Completo\" />\n                      </div>\n                      {Object.keys(fullNameReceiverError).map((key) => {return <div>{fullNameReceiverError[key] }</div>})}\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Correo Electrónico</label>\n                      <input className=\"input-create-guide-form\" value={emailReceiver} onChange={(event) => setEmailReceiver(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                      {Object.keys(emailReceiverError).map((key) => { return <div>{emailReceiverError[key]}</div> })}  \n                  </div>                \n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Teléfono</label>\n                      <input className=\"input-create-guide-form\" value={phoneNumberReceiver} onChange={(event) => setPhoneNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                      {Object.keys(phoneNumberReceiverError).map((key) => {return <div>{phoneNumberReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Calle y Número</label>\n                      <input  className=\"input-create-guide-form\" value={streetAndNumberReceiver} onChange={(event) => setStreetandNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                      {Object.keys(streetAndNumberReceiverError).map((key) => {return <div>{streetAndNumberReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Referencias</label>\n                      <input  className=\"input-create-guide-form\" value={referenciasReceiver} onChange={(event) => setReferenciasReceiver(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n                  </div>\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Colonia</label>\n                      <input className=\"input-create-guide-form\" value={colonyReceiver} onChange={(event) => setColonyReceiver(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                      {Object.keys(colonyReceiverError).map((key) => {return <div>{colonyReceiverError[key] }</div>})}\n                  </div>\n                  \n                  <div>\n                    <label className=\"label-create-guide-form\">Código Postal</label>\n                      <input className=\"input-create-guide-form\" value={postalCodeReceiver} onChange={(event) => setPostalCodeReceiver(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                      {Object.keys(postalCodeReceiverError).map((key) => {return <div>{postalCodeReceiverError[key] }</div>})}\n                  </div>\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Ciudad</label>\n                      <input className=\"input-create-guide-form\" value={cityReceiver} onChange={(event) => setCityReceiver(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                      {Object.keys(cityReceiverError).map((key) => {return <div>{cityReceiverError[key] }</div>})}\n                  </div>\n\n                  <div>\n                      <label className=\"label-create-guide-form\">Estado</label>\n                      <select className=\"input-create-guide-form\" name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateReceiver(event.target.value)}>\n                      <option value=\"no\">Seleccione Estado.</option>\n                      {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                      <option value=\"Baja California\">Baja California</option>\n                      <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                      {/* <option value=\"Campeche\">Campeche</option>\n                      <option value=\"Chiapas\">Chiapas</option> */}\n                      <option value=\"CH\">Chihuahua</option>\n                      <option value=\"CX\">Ciudad de México</option>\n                      <option value=\"CO\">Coahuila</option>\n                      {/* <option value=\"Colima\">Colima</option> */}\n                      <option value=\"DG\">Durango</option>\n                      {/* <option value=\"Estado de México\">Estado de México</option> */}\n                      <option value=\"GT\">Guanajuato</option>\n                      {/* <option value=\"Guerrero\">Guerrero</option> */}\n                      <option value=\"HG\">Hidalgo</option>\n                      <option value=\"JL\">Jalisco</option>\n                      {/* <option value=\"Michoacán\">Michoacán</option>\n                      <option value=\"Morelos\">Morelos</option>\n                      <option value=\"Nayarit\">Nayarit</option> */}\n                      <option value=\"NL\">Nuevo León</option>\n                      {/* <option value=\"Oaxaca\">Oaxaca</option>\n                      <option value=\"Puebla\">Puebla</option> */}\n                      <option value=\"QT\">Querétaro</option>\n                      {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                      <option value=\"SL\">San Luis Potosí</option>\n                      {/* <option value=\"Sinaloa\">Sinaloa</option>\n                      <option value=\"Sonora\">Sonora</option>\n                      <option value=\"Tabasco\">Tabasco</option> */}\n                      <option value=\"TM\">Tamaulipas</option>\n                      {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                      <option value=\"VE\">Veracruz</option>\n                      {/* <option value=\"Yucatán\">Yucatán</option>\n                      <option value=\"Zacatecas\">Zacatecas</option> */}\n                      </select>\n                  </div>\n                  \n                  </div>\n              </div>\n              \n            </div>\n\n            \n            {/* THIRD AND FOURTH SECTION */}\n            <div className=\"third-forth-sections\">  \n              {/* PACKAGE SECTION */}\n              <div className=\"seccion-informacion-paquete\">\n              <h2 className=\"subheading-form-create-guide\">3. INFORMACIÓN DEL PAQUETE</h2>\n                  <div>\n                  \n                  <div>\n                      <label className=\"label-create-guide-form\">Largo (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageLenght} \n                      onChange={(event) => {\n                        setPackageLenght(event.target.value)\n                      }} \n                      type=\"text\" placeholder=\"Largo (cm)\" />\n                      {Object.keys(packageLenghtError).map((key) => {return <div>{packageLenghtError[key]}</div>})}\n                  </div>\n                                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Ancho (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageWidth} \n                      onChange={(event) => {\n                        setPackageWidth(event.target.value)\n                      }} \n                      type=\"email\" placeholder=\"Ancho (cm)\" />\n                      {Object.keys(packageWidthError).map((key) => {return <div>{packageWidthError[key]}</div>})}\n                  </div>                \n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Alto (cm)</label>\n                      <input className=\"input-create-guide-form\" value={packageHeight} \n                      onChange={(event) => {\n                        setPackageHeight(event.target.value)\n                      }} \n                      type=\"text\" placeholder=\"Alto (cm)\" />\n                      {Object.keys(packageHeightError).map((key) => {return <div>{packageHeightError[key]}</div>})}\n                  </div>\n                  \n                      {/* <h4>Peso del paquete que envías</h4> */}\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Peso del paquete (kg)</label>\n                      <input className=\"input-create-guide-form\" value={packageWeight} \n                      onChange={(event) => {\n                        setPackageWeight(event.target.value)\n                      }}\n                      type=\"text\" placeholder=\"Peso del paquete en (kg)\" />\n                      {Object.keys(packageWeightError).map((key) => {return <div>{packageWeightError[key]}</div>})}\n                  </div>\n                  \n                      {/* <h4>¿Que envías?</h4> */}\n                      \n                  <div>\n                      <label className=\"label-create-guide-form\">Contenido del paquete (Descripción corta)</label>\n                      <input className=\"input-create-guide-form\" value={packageDescription} \n                      onChange={(event) => {\n                        setPackageDescription(event.target.value)}\n                        } \n                        type=\"text\" placeholder=\"Contenido del paquete (Descripción corta)\" />\n                        {Object.keys(packageDescriptionError).map((key) => {return <div>{packageDescriptionError[key]}</div>})}\n                  </div>\n                \n                <div className=\"buttons-wrapper-row\">\n                  <Link to=\"/userdashboard\">\n                    <button id=\"blue\" className=\"btn-create-guide-form\" >Regresar</button>\n                  </Link>\n                      <button className=\"btn-create-guide-form\" onClick={(event) => {handleSubmit(event)}}>Cotizar</button>\n                </div>\n                  \n              </div>\n              </div>\n              \n              <div className=\"payment-main-wrapper\">\n                <div className=\"payment-section\">\n                <h1 className=\"subheading-form-create-guide\"> 4. SELECCIONA TU TIPO DE ENVIO:</h1>\n                <div className=\"table-holder\">{ loadingQuoteData ? <div className=\"cotizar-paragraph\">Llena todo los campos y da click en Cotizar!</div>:\n                  <table>\n                    <tr className=\"table-row-heading\">\n                      <th></th>\n                      <th>Servicio</th>\n                      <th>Tiempo Entrega</th>\n                      <th>Precio</th>\n                    </tr>\n                    {\n                      services.map((servicio, i) => {\n                        return (\n                        <tr className=\"table-data-row\" onClick={() => handleSelectGuide(servicio)}>\n                          <td>{i+1}</td>\n                          <td>{servicio.type.toUpperCase()}</td>\n                          <td>{servicio.estimateDelivery}</td>\n                          <td>${servicio.totalPrice}.99</td>\n                        </tr>)\n                      })}\n                  \n                  </table>  \n                  }  \n                \n                </div>\n                <div className=\"wrapper-guide-cost\">\n                      <div>\n                        \n                      </div>\n\n                      <label className=\"heading-guide-cost\">Costo de tu Guia</label>\n                      <br></br>\n                      <label className=\"price-guide-cost\" >{guideCost}.00</label>\n                </div>\n                <h1 className=\"subheading-form-create-guide\"> 5. METODO DE PAGO:</h1>\n                  <MetodoDePagoSelectorDiv guideCost={guideCost} setPaymentMethod={setPaymentMethod} />\n                  {/* <div className=\"payment-method-section-wrapper\">\n                    <label className=\"payment-method-subheading\">Selecciona tu forma de pago</label>\n                    <select className=\"payment-method-selector\" onChange ={(event) => {\n                      setPaymentMethod(event.target.value)\n                      console.log(event.target.value);\n                      }}>\n                      <option value={null}>Escoje Uno</option>\n                      <option value=\"tarjeta\">Tarjeta de Credito</option>\n                      <option value=\"puntos\">Pagar con Puntos</option>\n                    </select>\n                  </div> */}\n                  \n                  <PaymentDiv\n                  username={username} \n                  isPointsEnough={isPointsEnough} \n                  points={points}\n                  payWithPoints={payWithPoints} \n                  paymentMethod={paymentMethod} \n                  guideCost={guideCost} \n                  createGuide={createGuide}/>\n                  {/* <CheckoutStripe guideCost={guideCost} createGuide={createGuide}/> */}\n                  {success ? \n                  <div>\n                    <h1>Tu guía fue creada exitosamente.</h1>\n                    \n                    <a href={hrefFile} target=\"_blank\" rel=\"noreferrer\" >\n                      <button className=\"btn-create-guide-form\">Imprimir</button>\n                    </a>\n\n                  </div> : <div></div>}\n                </div>\n              </div>\n            </div>\n            \n            {/* <div className=\"buttons-wrapper\">\n              <button className=\"btn-contact-form\" onClick={(event) => {handleSubmit(event)}}>Siguiente</button>\n            </div> */}\n            \n        </div>\n        <Footer/>\n      </>\n    )\n}\n\nconst PaymentDiv = (props) => {\n  const { paymentMethod,\n    username, \n    guideCost, \n    createGuide, \n    points, \n    isPointsEnough, \n    payWithPoints } = props;\n\n  if (paymentMethod === \"\") {\n    return <div>Nothing</div>\n  } \n  else if (paymentMethod === \"tarjeta\") {\n    return (\n    <div>\n      <h4 className=\"ingresa-tarjeta-datos-subheading\">Ingresa tu tarjeta de credito y da click.</h4>\n      <p className=\"ingresa-tarjeta-descripcion\">(Numéro de tarjeta, fecha de expiración, codigo, codigo postal)</p>\n      <CheckoutStripe guideCost={guideCost} createGuide={createGuide}/>\n    </div>\n  )\n\n  } \n  else if (paymentMethod === \"puntos\") {\n    return (\n    <div className=\"main-wrapper-puntos\">\n          \n          <div className=\"div-saldos-holder\">\n\n            <div>\n              <h1>Saldo Actual:</h1>\n              <h1> $ {points}.00</h1>\n            </div>\n            <div>\n              <h1>Costo de Guida:</h1>\n              <h1>$ {guideCost}.00</h1>\n            </div>\n            <div>\n              <h1>Saldo Nuevo:</h1>\n              <h1>$ {points - guideCost}.00</h1>\n            </div>\n          \n          </div>\n\n          <div className=\"buttons-holder\">\n            \n            \n            {isPointsEnough ? \n            <div>\n              <Link to=\"/recargarsaldo\">\n                <button>Recargar Saldo</button>\n              </Link>\n              <button style={{color: \"red\"}} onClick={() => payWithPoints(username,guideCost)}>Pagar</button>\n            </div>\n            \n             : \n             <div>\n              <div>No cuentas con suficientes puntos. Favor de seleccionar otro metodo de pago o recargar puntos.</div>\n              <Link to=\"/recargarsaldo\">\n                <button>Recargar Saldo</button>\n              </Link>\n            </div>\n              }\n            \n          </div>\n          \n    </div>\n    )\n  } \n  else return <></>\n}\n\nconst MetodoDePagoSelectorDiv = (props) => {\n  \n  const { guideCost, setPaymentMethod } = props\n  \n  if (guideCost > 0) {\n    return (\n      <div className=\"payment-method-section-wrapper\">\n      <label className=\"payment-method-subheading\">Selecciona tu forma de pago</label>\n      <select className=\"payment-method-selector\" onChange ={(event) => {\n        setPaymentMethod(event.target.value)\n        console.log(event.target.value);\n        }}>\n        <option value={null}>Escoje Uno</option>\n        <option value=\"tarjeta\">Tarjeta de Credito</option>\n        <option value=\"puntos\">Pagar con Puntos</option>\n      </select>\n    </div>\n    ) }\n    else {\n      return <div>Favor de cotizar una guida para continuar</div>\n    }\n}\n\n\nexport default CreateGuidePagina;","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewGuias.js",["264","265","266","267"],"import React, { useState } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport MidScreenWrapper from '../styled_components/mid_screen_wrapper'\nimport styled from 'styled-components'\nimport GuidesTable from './GuidesTable'\nimport { Loading } from '../utilities/Loading'\n\nconst NewGuias = () => {\n  \n    const [error, setError] = useState(true);\n    const [loading, setLoading] = useState(true);\n\n    return (\n    <PageWrapper>\n        <Navbar/>\n        <Row>\n                <Sidebar />\n                    <WrapperTableGuias>\n                    <h1 className=\"cotizador-rapido-main-header\">Guias Generadas</h1>\n                    <GuidesTable loading={loading} setLoading={setLoading}/>\n                </WrapperTableGuias>\n        </Row>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nconst WrapperTableGuias = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    //height: 100%;\n    align-items: center;\n    padding-top: 50px;\n    box-sizing: border-box;\n    justify-content: center;\n    background-color: white;\n`\n\nexport default NewGuias;","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewRecargar.js",["268","269","270"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/NewDashboard.js",["271","272","273","274","275","276","277","278","279","280","281"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/MyPayments.js",["282"],"import React, { useState } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport styled from 'styled-components'\nimport PaymentsTable from './PaymentsTable'\n\nconst MyPayments = () => {\n\n    return (\n    <PageWrapper>\n        <Navbar/>\n        <Row>\n            <Sidebar />\n            <WrapperTableGuias>\n                <h1 className=\"cotizador-rapido-main-header\">Mis Pagos</h1>\n                <PaymentsTable/>\n            </WrapperTableGuias>\n        </Row>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\n\nconst WrapperTableGuias = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    //height: 100%;\n    align-items: center;\n    padding-top: 50px;\n    box-sizing: border-box;\n    justify-content: center;\n    background-color: white;\n`\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport default MyPayments;","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/routing/PrivateRoute.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/PaymentsTable.js",["283","284","285","286","287","288","289","290","291","292","293"],"import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { Link, NavLink, useHistory } from \"react-router-dom\"\nimport styled from 'styled-components'\nimport { useTable } from 'react-table'\nimport userEvent from '@testing-library/user-event'\nimport DocIcon from '../assets/iconos/doc_icon.png'\nimport { ClipLoader } from 'react-spinners'\nimport { Loading } from '../utilities/Loading'\n\n\nconst PaymentsTable = () => {\n  const history = useHistory()\n  const [payments, setPayments] = useState([])\n  const [allData, setAllData] = useState([])\n  const [loading, setLoading] = useState(true);\n  const [needsReload, setNeedsReload] = useState(true);\n  \n  useEffect(() => {\n    setLoading(true)  \n    fetchPayments()\n  }, [needsReload]);\n\n  // Use the state and functions returned from useTable to build your UI\n  \n  const fetchPayments = async (\n    url = `${process.env.REACT_APP_API_URL}/user/payments`\n  ) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    };\n\n    try {\n      //AQUI VAN LAS RUTAS DE LAS GUIAS\n      const { data } = await axios.post(url, {} ,config);\n      console.log(data.data)\n      setAllData(data.data.data)\n      \n      console.log(\"DATA\")\n      setPayments(data.data.data)\n      setLoading(false)\n    } catch (error) {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"username\");\n      history.push(\"/signin\")\n    }\n  };\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Confirmar',\n        accessor: 'icon'\n      },\n      {\n        Header: 'ID de Orden',\n        accessor: 'payment_name'\n      },\n      {\n        Header: 'Fecha de creacion',\n        accessor: 'created_at'\n      },\n      {\n        Header: 'Concepto de pago',\n        accessor: 'name'\n      },\n      {\n        Header: 'Order Id',\n        accessor: 'order_id'\n      },\n      {\n        Header: 'Estatus de recarga',\n        accessor: 'status'\n      },\n      {\n        Header: 'Tracking Number',\n        accessor: 'id'\n      },\n      {\n        Header: 'Precio',\n        accessor: 'price'\n      },\n\n    ]\n  )\n\n  return (\n    loading ?\n      <Loading></Loading>  \n      :\n      <Styles>\n        <Table needsReload={needsReload} \n        setNeedsReload={setNeedsReload} \n        columns={columns} \n        data={payments} \n        allData={allData} \n        fetchGuides={fetchPayments} />   \n      </Styles>\n  )\n}\n\n\nfunction Table({ needsReload, setNeedsReload ,columns, data, allData, fetchGuides }) {\n  \n  const confirmSinglePayment = async (order_id) => {\n    const url = `${process.env.REACT_APP_API_URL}/user/pay/confirm`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n      body: JSON.stringify({\n          \"order_id\": order_id\n      })\n    });\n    const data = await response.json();\n    if (data.status === \"SUCCESS\") {\n      console.log(\"pagos actualizados\")\n    } \n    else if (data.status === \"ERROR\") {\n      \n    }\n    \n  }\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  })\n  \n  useEffect(() => {\n    \n  }, [allData]);\n  \n  // Render the UI for your table\n  return (\n\n    <>\n    <StyledTable {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <THead {...column.getHeaderProps()}>{column.render('Header')}</THead>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          \n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                // COLUMN GUIDE\n                if (cell.column.id === \"icon\" ) {\n                  const trackingNumberCell = row.cells.filter((cell) => cell.column.Header == \"Tracking Number\")\n                  const tracking_number = trackingNumberCell[0].value\n                  return (\n                  <td style={{\n                    height: \"100%\",\n                    width: \"50px\",\n                    backgroundColor: \"white\",\n                    boxSizing: \"border-box\",\n                    justifyItems: \"center\",\n                    alignItems:\"center\"\n                  }\n                  }>\n                    <button onClick={()=> {\n                    console.log(needsReload)\n                    confirmSinglePayment(row.original.order_id)\n                    setNeedsReload(!needsReload)\n                    \n                    }}\n                    href={`https://s3.us-east-2.amazonaws.com/quikn-staging/labels`} target=\"_blank\" title=\"document icons\">\n                      <img  style={{\n                            width: `20px`,\n                            height: `20px`}} alt='doc-icon' src={DocIcon}></img>\n                    </button>\n                  </td>\n                  )\n                } \n                // COLUMN ESTADO\n                if (cell.column.id === \"status_id\" ) {\n                  return (\n                  <td>\n                  <StatusButton status={cell.value}>\n                    {\n                      getStatusString(cell.value)\n                    }\n                  </StatusButton>\n                  </td>\n                  )\n                } \n                else {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                }\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </StyledTable>\n    <PaginationWrapper class=\"pagination\">\n      \n      <PaginationBtn onClick={\n        () => fetchGuides(allData.first_page_url)}>\n        Comienzo\n      </PaginationBtn>\n      \n      { \n      allData.prev_page_url ? \n      <PaginationBtn onClick={\n        () => fetchGuides(allData.prev_page_url)\n      }\n        >\n        Anterior\n      </PaginationBtn> :\n      <PaginationBtn disabled \n        >\n        Anterior\n      </PaginationBtn>  \n      }\n\n      <PaginationBtn>\n        {allData.current_page}\n      </PaginationBtn>\n      \n      { \n      allData.next_page_url ? \n      <PaginationBtn \n      onClick={\n        () => fetchGuides(allData.next_page_url)\n      }\n        >\n        Siguiente\n      </PaginationBtn> :\n      <PaginationBtn disabled \n        >\n        Siguiente\n      </PaginationBtn>  \n      }\n\n      <PaginationBtn onClick={\n        () => fetchGuides(allData.last_page_url)}>\n        Final\n      </PaginationBtn>\n      \n      \n    </PaginationWrapper>\n  </>\n  )\n}\n\nconst StyledTable = styled.table`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 400;\n  color: white;\n`\n\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  padding-top: 15px;\n`\n\nconst Td = styled.td`\n  box-sizing: border-box;\n  padding-top: 3px 5px;\n`\n\nconst PaginationLink = styled.li`\n  box-sizing: border-box;\n  padding-left: 6px;\n  padding-right: 6px;\n  font-size: 20px;\n`\n\nconst StatusButton = styled.button`\n  ${props => styleButton(props.status)};\n  border-radius: 6px;\n  box-sizing: border-box;\n  padding: 5px;\n  width: 80px;\n  color: white;\n`\n\nconst PaginationBtn = styled.button`\n  border-radius: 5px;\n  box-sizing: border-box;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: white;\n  padding: 2px 8px;\n  background-color: #245188;\n  font-size: 15px;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  &:hover {\n    color: #EE1F42;\n    font-weight: 500;\n  }\n  &:disabled {\n    opacity: 50%;\n    &:hover {\n      color: white;\n    }\n  } \n`\n\n\nconst getStatusString = (int) => {\n  switch(int) {\n    case 1:\n      return \"Generada\"\n    default:\n      return \"Sin Status\"\n  }\n}\n\nconst styleButton = (status) => {\n  switch(status) {\n    case 1:\n      return `\n      background-color: green;\n    `\n    case 2:\n      return `\n      background-color: lightblue;\n    `\n    default:\n      return `\n      background-color: grey;\n    `\n  }\n}\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nconst THead = styled.th`\n  background-color: #245188;\n  font-size: 15px;\n`\n\nconst SectionWrapper = styled.div`\n  width: 100%;\n  background-color: green;\n`\n\nexport default PaymentsTable","/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/GuidesChart.js",["294","295","296","297","298","299","300","301","302","303"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/DashboardMonitor.js",["304","305","306","307","308","309","310","311","312","313","314"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/WhatsappBtn.js",["315"],"import React from 'react'\nimport  FloatingWhatsApp from 'react-floating-whatsapp'\nimport 'react-floating-whatsapp/dist/index.css' \nimport './WhatsappBtn.scss'\n\nconst WhatsAppBtn = () => {\n    return (\n        <div>\n            <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"></link>\n            <a\n                href=\"https://wa.me/528116618597\"\n                className=\"whatsapp_float\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <i className=\"fa fa-whatsapp whatsapp-icon\"></i>\n            </a>\n        </div>\n    )\n}\n\nexport default WhatsAppBtn;\n","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Tracking/ShippingInformation.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/BtnMail.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Footer/Footer.js",["316"],"import React from 'react'\nimport './Footer.scss'\nimport QuikenLogoFooter from '../../assets/Inicio/Quiken_Logo_Bco-44.svg'\nimport Facebook from '../../assets/Inicio/Iconos de redes sociales/Facebook-45.svg'\nimport Instagram from '../../assets/Inicio/Iconos de redes sociales/Instagram-47.svg'\nimport Twitter from '../../assets/Inicio/Iconos de redes sociales/Twitter-46.svg'\nimport locationIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_ubicacion-48.svg'\nimport phoneIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_Telefono-49.svg'\nimport mailIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_Correo-50.svg'\nimport styled from 'styled-components'\nimport Privacidad from '../../pdf/privacidad.pdf'\nimport Terminos from '../../pdf/terminos.pdf'\n\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-main-wrapper\">\n            <div className=\"logo-links-wrapper\">\n                <div className=\"logo-quienes-somos-wrapper\">\n                    <img className=\"img-logo-footer\" alt=\"quiken-logo\" src={QuikenLogoFooter}></img>\n                    <h3 className=\"quienes-somos\">¿QUIENES SOMOS?</h3>\n                </div>\n                <div className=\"copy-icons-wrapper\">\n                    <p className=\"copy-quiken\">© 2021 Quiken Mx, Todos los derechos reservados.</p>\n                    <a target=\"_blank\" href=\"https://www.facebook.com/quikenmx\" rel=\"noreferrer\">\n                        <img src={Facebook} className=\"icon\" alt=\"facebook-icon\"/>\n                    </a>\n                    \n                    <a target=\"_blank\" href=\"https://www.facebook.com/quikenmx\" rel=\"noreferrer\">\n                    <img src={Twitter} className=\"icon\" alt=\"twitter-icon\"/>\n                    </a>\n                    \n                    \n                    <a target=\"_blank\" href=\"https://www.instagram.com/quikenmx/?hl=en\" rel=\"noreferrer\">\n                        <img src={Instagram} className=\"icon\" alt=\"instagram-icon\" />                    \n                    </a>\n                    \n                    \n                </div>\n            </div>\n            <div className=\"info-wrapper\">\n                <h2 className=\"contactanos-heading\">CONTÁCTANOS</h2>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={locationIcon} className=\"contact-icon\" />\n                    <p className=\"paragraph-contact\">Monte Alto No. 157, Fraccionamiento\n                    Parque 200, C.P 66368 Santa Catarina,\n                    Nuevo León, México.</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={phoneIcon} className=\"contact-icon\" alt=\"phone-icon\" />\n                    <p className=\"paragraph-contact\">(81) 1661 8597</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={mailIcon} className=\"contact-icon\" alt=\"mail-icon\" />\n                    <p className=\"paragraph-contact\">hola@quiken.mx</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\" style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent:\"space-around\",\n                    padding: \"5px\"\n                    }}>\n                    <LinkFooter href={Terminos} target=\"_blank\">\n                        Terminos y condiciones\n                    </LinkFooter>\n                    <LinkFooter href={Privacidad} target=\"_blank\">\n                        Aviso de privacidad\n                    </LinkFooter>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst LinkFooter = styled.a`\n    color: white;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 600;\n    font-size: 15px\n`\n\nexport default Footer\n","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/MilesDeGuias.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/RastreaPedido.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/NuestrosVehiculos.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/ContactUs.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/MapInicio.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/MasBeneficios.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/AyudamosNegocios.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Inicio/ContactForm.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/styled_components/page_wrapper.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Sidebar/Sidebar.js",["317","318"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/styled_components/mid_screen_wrapper.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/GuidesTable.js",["319","320","321","322","323","324","325","326","327","328","329","330"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Navbar/Navbar.js",["331","332","333"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Cart/Checkout.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Others/AccountInfo.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Navbar/SubNavbar.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/GuideCreator.js",["334","335","336","337","338","339","340","341","342","343","344","345","346"],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Cart/Checkout2.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/Pages/Cotizador.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/UserDashboard/GuideTable.js",["347","348","349","350","351"],"\nimport React, { Component, useMemo } from 'react'\nimport CancelButton from './CancelButton'\nimport './GuideTable.scss'\nimport { Link } from 'react-router-dom'\n\nconst GuideTable = (props) => {\n  \n  const data = props.userGuides\n  \n  const columns = [ \n    'Tracking Num.',\n    'User',\n    'Precio',\n    'Status'\n  ] \n\n  const renderRow = (guide, index) => {\n\n    return (\n      <tr className=\"tr-element\" key={index}>\n        <td>{guide.trackingNumber}</td>\n        <td>{guide.currentUser}</td>\n        <td>{guide.guideCost}</td>\n        {/* <td>{guide.guideStatus}</td> */}\n        {/* <td>\n          <CancelButton userGuide={guide}>Descargar</CancelButton>\n        </td> */}\n        <td>\n          <a href={`${guide.fileUrl}`} target=\"_blank\">\n            <button id=\"red\" className=\"btn-cancel-guide\">Imprimir</button>\n          </a>\n        </td>\n      </tr>\n    )\n  }; \n \n  return (\n    <div>\n      <table className=\"table-element\">\n        <thead className=\" thead-element\">\n          {columns.map((colName) => {\n            return (<th>{colName}</th>)\n          })}\n        </thead>\n        <tbody className=\"\">\n          {data.map(renderRow)}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default GuideTable;\n","/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Navbar/BtnRegistro.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/UserDashboard/CancelButton.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/utilities/Loading.js",[],"/Users/julianallenderussek/Coding/QuikenFrontend/src/components/Context/UserContext.js",["352"],{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":11,"column":10,"nodeType":"359","messageId":"360","endLine":11,"endColumn":20},{"ruleId":"361","severity":1,"message":"362","line":102,"column":6,"nodeType":"363","endLine":102,"endColumn":21,"suggestions":"364"},{"ruleId":"365","severity":1,"message":"366","line":38,"column":23,"nodeType":"367","messageId":"368","endLine":38,"endColumn":25},{"ruleId":"357","severity":1,"message":"369","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"370","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":13},{"ruleId":"357","severity":1,"message":"371","line":15,"column":5,"nodeType":"359","messageId":"360","endLine":15,"endColumn":19},{"ruleId":"357","severity":1,"message":"372","line":16,"column":5,"nodeType":"359","messageId":"360","endLine":16,"endColumn":17},{"ruleId":"357","severity":1,"message":"373","line":17,"column":5,"nodeType":"359","messageId":"360","endLine":17,"endColumn":9},{"ruleId":"357","severity":1,"message":"374","line":19,"column":12,"nodeType":"359","messageId":"360","endLine":19,"endColumn":20},{"ruleId":"357","severity":1,"message":"375","line":20,"column":16,"nodeType":"359","messageId":"360","endLine":20,"endColumn":28},{"ruleId":"361","severity":1,"message":"376","line":34,"column":5,"nodeType":"363","endLine":34,"endColumn":7,"suggestions":"377"},{"ruleId":"357","severity":1,"message":"378","line":4,"column":8,"nodeType":"359","messageId":"360","endLine":4,"endColumn":17},{"ruleId":"357","severity":1,"message":"379","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":40},{"ruleId":"357","severity":1,"message":"380","line":12,"column":12,"nodeType":"359","messageId":"360","endLine":12,"endColumn":25},{"ruleId":"357","severity":1,"message":"381","line":16,"column":12,"nodeType":"359","messageId":"360","endLine":16,"endColumn":27},{"ruleId":"357","severity":1,"message":"382","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":24},{"ruleId":"361","severity":1,"message":"383","line":108,"column":8,"nodeType":"363","endLine":108,"endColumn":35,"suggestions":"384"},{"ruleId":"357","severity":1,"message":"385","line":10,"column":12,"nodeType":"359","messageId":"360","endLine":10,"endColumn":17},{"ruleId":"357","severity":1,"message":"378","line":8,"column":8,"nodeType":"359","messageId":"360","endLine":8,"endColumn":17},{"ruleId":"357","severity":1,"message":"386","line":13,"column":23,"nodeType":"359","messageId":"360","endLine":13,"endColumn":37},{"ruleId":"357","severity":1,"message":"387","line":18,"column":10,"nodeType":"359","messageId":"360","endLine":18,"endColumn":21},{"ruleId":"357","severity":1,"message":"388","line":18,"column":23,"nodeType":"359","messageId":"360","endLine":18,"endColumn":37},{"ruleId":"357","severity":1,"message":"389","line":20,"column":22,"nodeType":"359","messageId":"360","endLine":20,"endColumn":35},{"ruleId":"357","severity":1,"message":"390","line":23,"column":10,"nodeType":"359","messageId":"360","endLine":23,"endColumn":19},{"ruleId":"357","severity":1,"message":"391","line":23,"column":21,"nodeType":"359","messageId":"360","endLine":23,"endColumn":33},{"ruleId":"357","severity":1,"message":"392","line":24,"column":25,"nodeType":"359","messageId":"360","endLine":24,"endColumn":41},{"ruleId":"357","severity":1,"message":"393","line":25,"column":10,"nodeType":"359","messageId":"360","endLine":25,"endColumn":27},{"ruleId":"357","severity":1,"message":"394","line":25,"column":29,"nodeType":"359","messageId":"360","endLine":25,"endColumn":49},{"ruleId":"357","severity":1,"message":"395","line":26,"column":10,"nodeType":"359","messageId":"360","endLine":26,"endColumn":27},{"ruleId":"357","severity":1,"message":"396","line":26,"column":29,"nodeType":"359","messageId":"360","endLine":26,"endColumn":49},{"ruleId":"357","severity":1,"message":"397","line":27,"column":10,"nodeType":"359","messageId":"360","endLine":27,"endColumn":21},{"ruleId":"357","severity":1,"message":"398","line":27,"column":23,"nodeType":"359","messageId":"360","endLine":27,"endColumn":37},{"ruleId":"357","severity":1,"message":"399","line":127,"column":9,"nodeType":"359","messageId":"360","endLine":127,"endColumn":23},{"ruleId":"357","severity":1,"message":"400","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":24},{"ruleId":"357","severity":1,"message":"385","line":18,"column":12,"nodeType":"359","messageId":"360","endLine":18,"endColumn":17},{"ruleId":"365","severity":1,"message":"366","line":47,"column":21,"nodeType":"367","messageId":"368","endLine":47,"endColumn":23},{"ruleId":"357","severity":1,"message":"401","line":18,"column":10,"nodeType":"359","messageId":"360","endLine":18,"endColumn":18},{"ruleId":"357","severity":1,"message":"402","line":58,"column":10,"nodeType":"359","messageId":"360","endLine":58,"endColumn":20},{"ruleId":"361","severity":1,"message":"403","line":588,"column":4,"nodeType":"363","endLine":588,"endColumn":39,"suggestions":"404"},{"ruleId":"357","severity":1,"message":"400","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":24},{"ruleId":"357","severity":1,"message":"405","line":9,"column":10,"nodeType":"359","messageId":"360","endLine":9,"endColumn":17},{"ruleId":"357","severity":1,"message":"385","line":13,"column":12,"nodeType":"359","messageId":"360","endLine":13,"endColumn":17},{"ruleId":"357","severity":1,"message":"374","line":13,"column":19,"nodeType":"359","messageId":"360","endLine":13,"endColumn":27},{"ruleId":"357","severity":1,"message":"400","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":24},{"ruleId":"357","severity":1,"message":"385","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":17},{"ruleId":"357","severity":1,"message":"406","line":196,"column":7,"nodeType":"359","messageId":"360","endLine":196,"endColumn":20},{"ruleId":"357","severity":1,"message":"370","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":13},{"ruleId":"357","severity":1,"message":"407","line":17,"column":9,"nodeType":"359","messageId":"360","endLine":17,"endColumn":16},{"ruleId":"357","severity":1,"message":"408","line":18,"column":10,"nodeType":"359","messageId":"360","endLine":18,"endColumn":20},{"ruleId":"357","severity":1,"message":"409","line":18,"column":22,"nodeType":"359","messageId":"360","endLine":18,"endColumn":35},{"ruleId":"357","severity":1,"message":"410","line":20,"column":17,"nodeType":"359","messageId":"360","endLine":20,"endColumn":24},{"ruleId":"357","severity":1,"message":"385","line":22,"column":5,"nodeType":"359","messageId":"360","endLine":22,"endColumn":10},{"ruleId":"357","severity":1,"message":"411","line":24,"column":5,"nodeType":"359","messageId":"360","endLine":24,"endColumn":17},{"ruleId":"357","severity":1,"message":"389","line":25,"column":17,"nodeType":"359","messageId":"360","endLine":25,"endColumn":30},{"ruleId":"357","severity":1,"message":"392","line":27,"column":20,"nodeType":"359","messageId":"360","endLine":27,"endColumn":36},{"ruleId":"357","severity":1,"message":"412","line":28,"column":20,"nodeType":"359","messageId":"360","endLine":28,"endColumn":36},{"ruleId":"361","severity":1,"message":"413","line":49,"column":6,"nodeType":"363","endLine":49,"endColumn":8,"suggestions":"414"},{"ruleId":"357","severity":1,"message":"369","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"415","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":14},{"ruleId":"357","severity":1,"message":"416","line":3,"column":16,"nodeType":"359","messageId":"360","endLine":3,"endColumn":23},{"ruleId":"357","severity":1,"message":"417","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":17},{"ruleId":"357","severity":1,"message":"358","line":8,"column":10,"nodeType":"359","messageId":"360","endLine":8,"endColumn":20},{"ruleId":"361","severity":1,"message":"418","line":22,"column":6,"nodeType":"363","endLine":22,"endColumn":19,"suggestions":"419"},{"ruleId":"361","severity":1,"message":"420","line":53,"column":19,"nodeType":"421","endLine":53,"endColumn":32},{"ruleId":"365","severity":1,"message":"366","line":169,"column":92,"nodeType":"367","messageId":"368","endLine":169,"endColumn":94},{"ruleId":"357","severity":1,"message":"422","line":170,"column":25,"nodeType":"359","messageId":"360","endLine":170,"endColumn":40},{"ruleId":"357","severity":1,"message":"423","line":284,"column":7,"nodeType":"359","messageId":"360","endLine":284,"endColumn":9},{"ruleId":"357","severity":1,"message":"424","line":289,"column":7,"nodeType":"359","messageId":"360","endLine":289,"endColumn":21},{"ruleId":"357","severity":1,"message":"425","line":390,"column":7,"nodeType":"359","messageId":"360","endLine":390,"endColumn":21},{"ruleId":"357","severity":1,"message":"426","line":1,"column":26,"nodeType":"359","messageId":"360","endLine":1,"endColumn":35},{"ruleId":"357","severity":1,"message":"427","line":1,"column":45,"nodeType":"359","messageId":"360","endLine":1,"endColumn":55},{"ruleId":"357","severity":1,"message":"428","line":6,"column":10,"nodeType":"359","messageId":"360","endLine":6,"endColumn":21},{"ruleId":"357","severity":1,"message":"429","line":14,"column":9,"nodeType":"359","messageId":"360","endLine":14,"endColumn":22},{"ruleId":"357","severity":1,"message":"430","line":17,"column":25,"nodeType":"359","messageId":"360","endLine":17,"endColumn":41},{"ruleId":"431","severity":1,"message":"432","line":38,"column":7,"nodeType":"433","messageId":"434","endLine":75,"endColumn":6},{"ruleId":"365","severity":1,"message":"366","line":85,"column":14,"nodeType":"367","messageId":"368","endLine":85,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":87,"column":9,"nodeType":"433","messageId":"434","endLine":124,"endColumn":8},{"ruleId":"365","severity":1,"message":"366","line":128,"column":14,"nodeType":"367","messageId":"368","endLine":128,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":134,"column":9,"nodeType":"433","messageId":"434","endLine":171,"endColumn":10},{"ruleId":"357","severity":1,"message":"435","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":20},{"ruleId":"357","severity":1,"message":"370","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":13},{"ruleId":"357","severity":1,"message":"407","line":10,"column":11,"nodeType":"359","messageId":"360","endLine":10,"endColumn":18},{"ruleId":"357","severity":1,"message":"436","line":11,"column":12,"nodeType":"359","messageId":"360","endLine":11,"endColumn":16},{"ruleId":"357","severity":1,"message":"408","line":12,"column":12,"nodeType":"359","messageId":"360","endLine":12,"endColumn":22},{"ruleId":"357","severity":1,"message":"437","line":16,"column":5,"nodeType":"359","messageId":"360","endLine":16,"endColumn":10},{"ruleId":"357","severity":1,"message":"438","line":17,"column":5,"nodeType":"359","messageId":"360","endLine":17,"endColumn":17},{"ruleId":"357","severity":1,"message":"439","line":18,"column":14,"nodeType":"359","messageId":"360","endLine":18,"endColumn":24},{"ruleId":"357","severity":1,"message":"440","line":21,"column":5,"nodeType":"359","messageId":"360","endLine":21,"endColumn":21},{"ruleId":"361","severity":1,"message":"441","line":25,"column":12,"nodeType":"442","endLine":32,"endColumn":2},{"ruleId":"443","severity":1,"message":"444","line":27,"column":19,"nodeType":"445","messageId":"446","endLine":27,"endColumn":27,"fix":"447"},{"ruleId":"357","severity":1,"message":"448","line":2,"column":9,"nodeType":"359","messageId":"360","endLine":2,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":44,"column":21,"nodeType":"451","endLine":44,"endColumn":72},{"ruleId":"357","severity":1,"message":"426","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"407","line":9,"column":9,"nodeType":"359","messageId":"360","endLine":9,"endColumn":16},{"ruleId":"357","severity":1,"message":"415","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":14},{"ruleId":"357","severity":1,"message":"416","line":3,"column":16,"nodeType":"359","messageId":"360","endLine":3,"endColumn":23},{"ruleId":"357","severity":1,"message":"417","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":17},{"ruleId":"357","severity":1,"message":"385","line":16,"column":10,"nodeType":"359","messageId":"360","endLine":16,"endColumn":15},{"ruleId":"357","severity":1,"message":"374","line":16,"column":17,"nodeType":"359","messageId":"360","endLine":16,"endColumn":25},{"ruleId":"361","severity":1,"message":"452","line":24,"column":6,"nodeType":"363","endLine":24,"endColumn":8,"suggestions":"453"},{"ruleId":"361","severity":1,"message":"420","line":53,"column":19,"nodeType":"421","endLine":53,"endColumn":32},{"ruleId":"365","severity":1,"message":"366","line":150,"column":92,"nodeType":"367","messageId":"368","endLine":150,"endColumn":94},{"ruleId":"454","severity":1,"message":"455","line":162,"column":21,"nodeType":"451","messageId":"456","endLine":163,"endColumn":148,"fix":"457"},{"ruleId":"357","severity":1,"message":"423","line":260,"column":7,"nodeType":"359","messageId":"360","endLine":260,"endColumn":9},{"ruleId":"357","severity":1,"message":"424","line":265,"column":7,"nodeType":"359","messageId":"360","endLine":265,"endColumn":21},{"ruleId":"357","severity":1,"message":"425","line":366,"column":7,"nodeType":"359","messageId":"360","endLine":366,"endColumn":21},{"ruleId":"458","severity":1,"message":"459","line":16,"column":22,"nodeType":"359","messageId":"460","endLine":16,"endColumn":30},{"ruleId":"357","severity":1,"message":"461","line":17,"column":7,"nodeType":"359","messageId":"360","endLine":17,"endColumn":21},{"ruleId":"449","severity":1,"message":"450","line":47,"column":13,"nodeType":"451","endLine":47,"endColumn":61},{"ruleId":"357","severity":1,"message":"462","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":15},{"ruleId":"357","severity":1,"message":"407","line":12,"column":9,"nodeType":"359","messageId":"360","endLine":12,"endColumn":16},{"ruleId":"357","severity":1,"message":"463","line":15,"column":7,"nodeType":"359","messageId":"360","endLine":15,"endColumn":15},{"ruleId":"357","severity":1,"message":"464","line":18,"column":10,"nodeType":"359","messageId":"360","endLine":18,"endColumn":17},{"ruleId":"357","severity":1,"message":"465","line":18,"column":19,"nodeType":"359","messageId":"360","endLine":18,"endColumn":29},{"ruleId":"357","severity":1,"message":"401","line":21,"column":10,"nodeType":"359","messageId":"360","endLine":21,"endColumn":18},{"ruleId":"357","severity":1,"message":"466","line":37,"column":10,"nodeType":"359","messageId":"360","endLine":37,"endColumn":16},{"ruleId":"357","severity":1,"message":"467","line":37,"column":18,"nodeType":"359","messageId":"360","endLine":37,"endColumn":27},{"ruleId":"357","severity":1,"message":"468","line":38,"column":10,"nodeType":"359","messageId":"360","endLine":38,"endColumn":24},{"ruleId":"357","severity":1,"message":"469","line":38,"column":26,"nodeType":"359","messageId":"360","endLine":38,"endColumn":43},{"ruleId":"357","severity":1,"message":"470","line":39,"column":10,"nodeType":"359","messageId":"360","endLine":39,"endColumn":20},{"ruleId":"357","severity":1,"message":"471","line":39,"column":22,"nodeType":"359","messageId":"360","endLine":39,"endColumn":35},{"ruleId":"357","severity":1,"message":"402","line":60,"column":10,"nodeType":"359","messageId":"360","endLine":60,"endColumn":20},{"ruleId":"357","severity":1,"message":"472","line":2,"column":17,"nodeType":"359","messageId":"360","endLine":2,"endColumn":26},{"ruleId":"357","severity":1,"message":"473","line":2,"column":28,"nodeType":"359","messageId":"360","endLine":2,"endColumn":35},{"ruleId":"357","severity":1,"message":"474","line":3,"column":8,"nodeType":"359","messageId":"360","endLine":3,"endColumn":20},{"ruleId":"357","severity":1,"message":"415","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":14},{"ruleId":"454","severity":1,"message":"455","line":30,"column":11,"nodeType":"451","messageId":"456","endLine":30,"endColumn":56,"fix":"475"},{"ruleId":"361","severity":1,"message":"476","line":21,"column":6,"nodeType":"363","endLine":21,"endColumn":8,"suggestions":"477"},"no-native-reassign",["478"],"no-negated-in-lhs",["479"],"no-unused-vars","'ClipLoader' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getGuideInfo'. Either include it or remove the dependency array.","ArrayExpression",["480"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'axios' is defined but never used.","'isUserSignedIn' is assigned a value but never used.","'userSignedIn' is assigned a value but never used.","'user' is assigned a value but never used.","'setError' is assigned a value but never used.","'setErrorText' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.",["481"],"'SubNavbar' is defined but never used.","'AfterpayClearpayMessageElement' is defined but never used.","'paymentMethod' is assigned a value but never used.","'hasPaymentError' is assigned a value but never used.","'errorPayment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'requestRecharge' and 'username'. Either include them or remove the dependency array.",["482"],"'error' is assigned a value but never used.","'setCompanyName' is assigned a value but never used.","'privateData' is assigned a value but never used.","'setPrivateData' is assigned a value but never used.","'setUserPoints' is assigned a value but never used.","'userSaldo' is assigned a value but never used.","'setUserSaldo' is assigned a value but never used.","'setTotalRecargas' is assigned a value but never used.","'pesoPromedioGuias' is assigned a value but never used.","'setPesoPromedioGuias' is assigned a value but never used.","'averageCostGuides' is assigned a value but never used.","'setAverageCostGuides' is assigned a value but never used.","'averageCost' is assigned a value but never used.","'setAverageCost' is assigned a value but never used.","'loadUserGuides' is assigned a value but never used.","'MidScreenWrapper' is defined but never used.","'apiGuide' is assigned a value but never used.","'errorQuote' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'guideCost' and 'username'. Either include them or remove the dependency array.",["483"],"'Loading' is defined but never used.","'WelcomeHeader' is assigned a value but never used.","'history' is assigned a value but never used.","'loadingTwo' is assigned a value but never used.","'setLoadingTwo' is assigned a value but never used.","'setUser' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","'setDashboardData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchDashboard', 'fetchPrivateData', 'loading', and 'setLoading'. Either include them or remove the dependency array.",["484"],"'Link' is defined but never used.","'NavLink' is defined but never used.","'userEvent' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPayments'. Either include it or remove the dependency array.",["485"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'tracking_number' is assigned a value but never used.","'Td' is assigned a value but never used.","'PaginationLink' is assigned a value but never used.","'SectionWrapper' is assigned a value but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","'yearsRecargas' is assigned a value but never used.","'setYearsToSelect' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'background' is defined but never used.","'date' is assigned a value but never used.","'email' is assigned a value but never used.","'loginHandler' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'fetchPrivateData' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"486","text":"487"},"'FloatingWhatsApp' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchGuides'. Either include it or remove the dependency array.",["488"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"489","text":"490"},"no-use-before-define","'Tawk_API' was used before it was defined.","usedBeforeDefined","'Tawk_LoadStart' is assigned a value but never used.","'Input' is defined but never used.","'username' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'points' is assigned a value but never used.","'setPoints' is assigned a value but never used.","'isPointsEnough' is assigned a value but never used.","'setIsPointsEnough' is assigned a value but never used.","'needsReset' is assigned a value but never used.","'setNeedsReset' is assigned a value but never used.","'Component' is defined but never used.","'useMemo' is defined but never used.","'CancelButton' is defined but never used.",{"range":"491","text":"490"},"React Hook useEffect has a missing dependency: 'userSignedIn'. Either include it or remove the dependency array.",["492"],"no-global-assign","no-unsafe-negation",{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},[751,751],"()",{"desc":"505","fix":"506"},[4225,4225]," rel=\"noreferrer\"",[744,744],{"desc":"507","fix":"508"},"Update the dependencies array to be: [getGuideInfo, needsRerender]",{"range":"509","text":"510"},"Update the dependencies array to be: [setLoading]",{"range":"511","text":"512"},"Update the dependencies array to be: [isRechargePaid, cartTotal, username, requestRecharge]",{"range":"513","text":"514"},"Update the dependencies array to be: [paymentMethod, points, needsReset, username, guideCost]",{"range":"515","text":"516"},"Update the dependencies array to be: [fetchDashboard, fetchPrivateData, loading, setLoading]",{"range":"517","text":"518"},"Update the dependencies array to be: [fetchPayments, needsReload]",{"range":"519","text":"520"},"Update the dependencies array to be: [fetchGuides]",{"range":"521","text":"522"},"Update the dependencies array to be: [userSignedIn]",{"range":"523","text":"524"},[3152,3167],"[getGuideInfo, needsRerender]",[760,762],"[setLoading]",[3335,3362],"[isRechargePaid, cartTotal, username, requestRecharge]",[18251,18286],"[paymentMethod, points, needsReset, username, guideCost]",[1440,1442],"[fetchDashboard, fetchPrivateData, loading, setLoading]",[740,753],"[fetchPayments, needsReload]",[748,750],"[fetchGuides]",[727,729],"[userSignedIn]"]