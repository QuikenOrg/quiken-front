[{"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/index.js":"1","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/App.js":"2","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/FulfillmentPagina.js":"3","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ContactoPagina.js":"4","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/SignUpPagina.js":"5","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/InicioPagina.js":"6","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ServiciosPagina.js":"7","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/RecargarSaldoPagina.js":"8","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/CreateGuidePagina.js":"9","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ForgotPasswordPagina.js":"10","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/UserDashboard.js":"11","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ResetPasswordPagina.js":"12","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewCotizar.js":"13","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewCreateGuide.js":"14","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewDashboard.js":"15","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/RastreoPagina.js":"16","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewRecargar.js":"17","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/SignInPagina.js":"18","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewGuias.js":"19","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/routing/PrivateRoute.js":"20","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/WhatsappBtn.js":"21","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/SubNavbar.js":"22","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/Navbar.js":"23","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/RastreaPedido.js":"24","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/ContactUs.js":"25","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/BtnMail.js":"26","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MilesDeGuias.js":"27","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Footer/Footer.js":"28","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/NuestrosVehiculos.js":"29","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/ContactForm.js":"30","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MasBeneficios.js":"31","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MapInicio.js":"32","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/AyudamosNegocios.js":"33","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Tracking/ShippingInformation.js":"34","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/styled_components/page_wrapper.js":"35","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Sidebar/Sidebar.js":"36","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/styled_components/mid_screen_wrapper.js":"37","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesTable.js":"38","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/AccountInfo.js":"39","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/DashboardMonitor.js":"40","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/Cotizador.js":"41","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuideCreator.js":"42","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/UserDashboard/GuideTable.js":"43","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Cart/Checkout.js":"44","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/BtnRegistro.js":"45","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Cart/Checkout2.js":"46","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/UserDashboard/CancelButton.js":"47","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js":"48","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/MyPayments.js":"49","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/PaymentsTable.js":"50"},{"size":154,"mtime":1652034517974,"results":"51","hashOfConfig":"52"},{"size":3661,"mtime":1654879298583,"results":"53","hashOfConfig":"52"},{"size":8051,"mtime":1652034517557,"results":"54","hashOfConfig":"52"},{"size":1244,"mtime":1652034517557,"results":"55","hashOfConfig":"52"},{"size":5230,"mtime":1652678668126,"results":"56","hashOfConfig":"52"},{"size":5541,"mtime":1652034517558,"results":"57","hashOfConfig":"52"},{"size":12879,"mtime":1652034517558,"results":"58","hashOfConfig":"52"},{"size":8264,"mtime":1652773271343,"results":"59","hashOfConfig":"52"},{"size":41923,"mtime":1654878212519,"results":"60","hashOfConfig":"52"},{"size":2405,"mtime":1652676142948,"results":"61","hashOfConfig":"52"},{"size":14282,"mtime":1654878263638,"results":"62","hashOfConfig":"52"},{"size":2811,"mtime":1652034517558,"results":"63","hashOfConfig":"52"},{"size":1093,"mtime":1653939021873,"results":"64","hashOfConfig":"52"},{"size":1977,"mtime":1653938641473,"results":"65","hashOfConfig":"52"},{"size":5351,"mtime":1654882712045,"results":"66","hashOfConfig":"52"},{"size":8751,"mtime":1652721164437,"results":"67","hashOfConfig":"52"},{"size":5694,"mtime":1653946064598,"results":"68","hashOfConfig":"52"},{"size":3840,"mtime":1654840883899,"results":"69","hashOfConfig":"52"},{"size":1203,"mtime":1653945826306,"results":"70","hashOfConfig":"52"},{"size":374,"mtime":1654809078284,"results":"71","hashOfConfig":"52"},{"size":671,"mtime":1652034517973,"results":"72","hashOfConfig":"52"},{"size":614,"mtime":1652034517973,"results":"73","hashOfConfig":"52"},{"size":4757,"mtime":1652721161256,"results":"74","hashOfConfig":"52"},{"size":2400,"mtime":1652200650306,"results":"75","hashOfConfig":"52"},{"size":1109,"mtime":1652034517973,"results":"76","hashOfConfig":"52"},{"size":239,"mtime":1652034517973,"results":"77","hashOfConfig":"52"},{"size":658,"mtime":1652200519960,"results":"78","hashOfConfig":"52"},{"size":2961,"mtime":1652200767367,"results":"79","hashOfConfig":"52"},{"size":2000,"mtime":1652200567258,"results":"80","hashOfConfig":"52"},{"size":7664,"mtime":1652034517972,"results":"81","hashOfConfig":"52"},{"size":3442,"mtime":1652200502771,"results":"82","hashOfConfig":"52"},{"size":3897,"mtime":1652200373992,"results":"83","hashOfConfig":"52"},{"size":1466,"mtime":1652472082263,"results":"84","hashOfConfig":"52"},{"size":1504,"mtime":1652034517974,"results":"85","hashOfConfig":"52"},{"size":161,"mtime":1653937906276,"results":"86","hashOfConfig":"52"},{"size":1622,"mtime":1654883613053,"results":"87","hashOfConfig":"52"},{"size":234,"mtime":1654883365624,"results":"88","hashOfConfig":"52"},{"size":7667,"mtime":1654878970172,"results":"89","hashOfConfig":"52"},{"size":447,"mtime":1652034517973,"results":"90","hashOfConfig":"52"},{"size":4095,"mtime":1654840857405,"results":"91","hashOfConfig":"52"},{"size":6140,"mtime":1652429307384,"results":"92","hashOfConfig":"52"},{"size":34976,"mtime":1653937681232,"results":"93","hashOfConfig":"52"},{"size":1228,"mtime":1652653006075,"results":"94","hashOfConfig":"52"},{"size":3260,"mtime":1652034517971,"results":"95","hashOfConfig":"52"},{"size":225,"mtime":1652034517972,"results":"96","hashOfConfig":"52"},{"size":3262,"mtime":1652034517971,"results":"97","hashOfConfig":"52"},{"size":753,"mtime":1654877802602,"results":"98","hashOfConfig":"52"},{"size":6025,"mtime":1653610543638,"results":"99","hashOfConfig":"52"},{"size":1067,"mtime":1654882654981,"results":"100","hashOfConfig":"52"},{"size":8225,"mtime":1654883233481,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1ck9g56",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"194","usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"202","usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/index.js",[],["218","219"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/App.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/FulfillmentPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ContactoPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/SignUpPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/InicioPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ServiciosPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/RecargarSaldoPagina.js",["220","221","222","223","224","225"],"import React, { useState, useEffect } from 'react'\nimport \"./RecargarSaldoPagina.scss\"\nimport Navbar from '../components/Navbar/Navbar'\nimport SubNavbar from '../components/Navbar/SubNavbar'\nimport Footer from '../components/Footer/Footer'\nimport CheckoutStripe2 from '../components/Cart/Checkout2'\nimport { AfterpayClearpayMessageElement } from '@stripe/react-stripe-js'\n\nconst RecargarSaldoPagina = () => {\n    //Initializing Variables and States\n    const [paymentMethodSelected, setPaymentMethodSelected] = useState(false)\n    const [paymentMethod, setPaymentMethod] = useState(\"\")\n    const [cartTotal, setCartTotal] = useState(0)\n    const [cart, setCart] = useState([])\n    const [isRechargePaid, setIsRechargePaid] = useState(false);\n    const [hasPaymentError, setHasPaymentError] = useState(false)\n    const [errorPayment, setErrorPayment] = useState(\"\")\n    const [userPoints, setUserPoints] = useState(0)\n\n    let username = localStorage.getItem('email')\n\n    const handleProductClick = async (cart, id) => {\n        console.log(cart);\n        if (cart.length < 5) {\n            const selectedProduct = await items.find(product => product.id === id)\n            cart.push(selectedProduct) \n            setCartTotal(cartTotal + selectedProduct.total)\n        }\n    }\n\n\n    const items = [\n        {id:100, total: 200},\n        {id:101, total: 1000},\n        {id:102, total: 10000}\n    ]\n\n    const requestGetPoints = async (username) => {\n        const url = 'api/user/getPoints/'\n        console.log(username, 'RUNNING THIS')\n        \n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify ({\n                'username': username\n            })\n        });\n        \n        const data = await response.json()\n        console.log(data)\n        console.log(response.status, 'STATUS')\n        if (response.status === 200) {\n            setUserPoints(data.data[0].points)\n        }\n        \n        \n    }\n\n    const requestRecharge = async (username, amount) => {\n        const url = 'api/user/updatePoints'\n        console.log(username, 'RUNNING THIS')\n        console.log('AMOUNT', amount);\n        \n        const response = await fetch(url, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify ({\n                'username': username,\n                'amount': amount \n            })\n        });\n        \n        const data = await response.json()\n        console.log(data)\n        console.log(response.status, 'STATUS')\n        if (response.status === 200) {\n            console.log(data)\n            alert('Tu recarga fue exitosa. Agradecemos tu compra')\n            resetState()\n        }   \n    }\n\n    const resetState = () => {\n        setUserPoints(0)\n        setErrorPayment(\"\")\n        setHasPaymentError(false)\n        setIsRechargePaid(false)\n        setCart([])\n        setCartTotal(0)\n        setPaymentMethod(\"\")\n        setHasPaymentError(false)\n    }\n\n    \n\n    useEffect(() => {\n        requestGetPoints(username)\n        if(isRechargePaid === true) {\n            requestRecharge(username, cartTotal)\n            setIsRechargePaid(false)\n        }\n        \n    }, [isRechargePaid, cartTotal])\n\n    \n    return (\n        <div>\n            <Navbar/>\n            \n            <div className=\"main-wrapper-recargar-saldo\">\n                <div className=\"main-wrapper-comprar-saldo\">\n\n                    <div className=\"wrapper-seleccionador paquetes\">\n                        <h1 className=\"saldo-actual-heading\">1. Recarga Saldo</h1>\n                        \n                        <div className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo Actual</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {userPoints}.00</h1>  \n                        </div>\n\n                        <div className=\"paquetes-de-puntos\">\n                            <label className=\"heading-agregar-puntos\">Da Click y Agrega Puntos!</label>\n                            \n                            <div className=\"card-agrega-credito\" \n                            onClick={() => {\n                                handleProductClick(cart, 100)\n                            }}>\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 200.00</h1>  \n                            </div>\n                            \n                            <div className=\"card-agrega-credito\"\n                            onClick={() => {\n                                handleProductClick(cart, 101)\n                            }}\n                            >\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 1000.00</h1>  \n                            </div>\n\n                            <div className=\"card-agrega-credito\"\n                            onClick={() => {\n                                handleProductClick(cart, 102)\n                            }}\n                            >\n                                <label className=\"agrega-credito-actual-subheading\">+ Agregar credito</label>\n                                <h1 className=\"agrega-credito-actual-big-number\">$ 10000.00</h1>  \n                            </div>\n                            \n\n                        </div>\n\n                    </div>\n                    \n                    <div className=\"wrapper-checkout-puntos\">\n                    <h1 className=\"saldo-actual-heading\">2. Checkout</h1>\n                        \n                        <div  className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo por recargar</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {cartTotal}.00</h1>  \n                        </div>\n\n                        <div  className=\"card-saldo-actual\">\n                            <label className=\"saldo-actual-subheading\">Saldo Nuevo</label>\n                            <h1 className=\"saldo-actual-big-number\">$ {cartTotal + userPoints}.00</h1>  \n                        </div>\n                        \n                        <h1 className=\"selecciona-metodo-pago-heading\">Selecciona tu metodo de pago</h1>\n                        \n                        <select className=\"payment-method-selector-saldo\"  onChange={(event) => {\n                            setPaymentMethodSelected(!paymentMethodSelected)\n                            setPaymentMethod(event.target.value)\n                            }}\n                            >\n                            <option value=\"\">Ninguno</option>\n                            <option value=\"tarjeta\">Tarjeta de credito/debito</option>\n                        </select>\n                        \n                    </div>\n                </div>\n                \n                <div>\n                        {\n                        paymentMethodSelected ?\n                            <div className=\"checkout-wrapper\">\n                                <h1 className=\"metodo-tarjeta-heading\">Favor de ingresar la información de su tarjeta.</h1>\n                                <h2 className=\"metodo-tarjeta-subheading\">Numero de Tarjeta, Codigo, Fecha de expiración, Codigo Postal</h2>\n                                <h2 className=\"metodo-tarjeta-subheading\">Aceptamos todo tipo de tarjeta (Visa, AMEX, MasterCard)</h2>\n                                <CheckoutStripe2 setErrorPayment={setErrorPayment} setHasPaymentError={setHasPaymentError} cartTotal={cartTotal} setIsRechargePaid={setIsRechargePaid} />\n                            </div>\n                        :\n                        <div></div>\n                        }\n                        \n                        \n                </div>\n                \n\n            </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default RecargarSaldoPagina\n","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/CreateGuidePagina.js",["226","227","228"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ForgotPasswordPagina.js",["229"],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ForgotPasswordPagina.scss\";\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst ForgotPasswordScreen = () => {\n  \n  const history = useHistory()\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n\n  const forgotPasswordHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n\n    let formData = new FormData();\n    formData.append('email', email); \n\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API_URL}/user/password/recovery`,\n        formData,\n        config\n      );\n\n      setSuccess(data.data);\n      console.log(data)\n      if (data.status == \"SUCCESS\") {\n        alert(\"Un email de recuperacion ha sido envidado a tu correo.\")\n        history.push(\"/\")\n      }\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail(\"\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar/>\n      <div className=\"forgotpassword-screen\">\n        <form\n          onSubmit={forgotPasswordHandler}\n          className=\"forgotpassword-screen__form\"\n        >\n          <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\n          {error && <span className=\"error-message\">{error}</span>}\n          {success && <span className=\"success-message\">{success}</span>}\n          <div className=\"form-group\">\n            <p className=\"forgotpassword-screen__subtext\">\n              Please enter the email address you register your account with.<br/> We\n              will send you reset password confirmation to this email\n            </p>\n            <label className=\"form-label\" htmlFor=\"email\">Email:</label>\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              required\n              id=\"email\"\n              placeholder=\"Email address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button id=\"btn\" type=\"submit\" className=\"btn-contact-form\">\n            Send\n          </button>\n        </form>\n      </div>\n      <Footer/>\n    </>\n  );\n};\n\nexport default ForgotPasswordScreen;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/UserDashboard.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/ResetPasswordPagina.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewCotizar.js",["245"],"import React, { useState } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport Cotizador from './Cotizador'\nimport styled from 'styled-components'\n\nconst NewCotizar = () => {\n    const [error, setError] = useState(true);\n  \n    return (\n    <PageWrapper>\n        <Navbar/>\n        <MidScreenWrapperCotizador>\n            <Sidebar setError={setError}/>\n            <CotizadorWrapper>\n                <Cotizador/>\n            </CotizadorWrapper>\n        </MidScreenWrapperCotizador>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\n\nconst MidScreenWrapperCotizador = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    min-height: 60vh;\n    height: 700px;\n    background-color: #DDE5ED;\n`\n\nconst CotizadorWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n`\n\nexport default NewCotizar;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewCreateGuide.js",["246","247","248"],"import React, { useState, useEffect } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport MidScreenWrapper from '../styled_components/mid_screen_wrapper'\nimport axios from 'axios'\nimport GuideCreator from './GuideCreator'\nimport styled from 'styled-components'\n\nconst NewCreateGuide = () => {\n    \n    useEffect(() => {\n        getUserInfo()\n    }, []);\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(true);\n    const [user, setUser] = useState(true);\n\n    const getUserInfo = async () => {\n        console.log(\"NewGuias, fetching private data\")\n        const config = {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n          },\n        };\n    \n        try {\n          //AQUI VAN LAS RUTAS DE LAS GUIAS\n          const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/user/info`, {} ,config);\n          setUser(data.user)\n          setLoading(false)\n        } catch (error) {\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"email\");\n          localStorage.removeItem(\"username\");\n          setError(true)\n        }\n      };\n\n      useEffect(() => {\n        getUserInfo()\n      }, []);\n\n    return (\n    <PageWrapper>\n        <Navbar/>\n        <MidScreenWrapper>\n          <Sidebar setError={setError}/>\n          { loading == false ?\n              <GuideCreator user={user}/>\n             : <></> \n          }\n        </MidScreenWrapper>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\nconst CreateGuideScreenWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    height: 700px;\n    box-sizing: border-box;\n    align-content: center;\n`\n\nexport default NewCreateGuide;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewDashboard.js",["249","250","251","252"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/RastreoPagina.js",["253","254"]," import React,  { useState, useEffect} from 'react'\nimport { useParams ,useHistory} from 'react-router'\nimport Navbar from '../components/Navbar/Navbar'\nimport './RastreoPagina.scss';\nimport styled from 'styled-components'\nimport IconoRastreo from '../assets/Inicio/Icono_rastreo-43.svg'\nimport Footer from '../components/Footer/Footer'\nimport ShippingInformation from '../components/Tracking/ShippingInformation';\nimport FloatingWhatsApp from '../components/Others/WhatsappBtn';\nimport { Helmet } from 'react-helmet'\n\nconst RasteroPagina = () => {\n  \n  const history = useHistory()\n\n  const [needsRerender, setNeedsRerender] = useState(true)\n  const [loading, setLoading] = useState(true)\n  const [guideInformation, setGuideInformation] = useState()\n  const [hasError, setHasError] = useState(false)\n  const [shipmentHistory, setShipmentHistory] = useState()\n  const [newTrackedGuide, setNewTrackedGuide] = useState({inputValue: \"\"})\n  const [error, setError] = useState()\n  const params = useParams()\n  const guideNumber = params.guide\n  console.log(guideNumber, 'guacamole')\n  \n  const handleChange = (event) => {\n    let value = event.target.value.replace(/\\D/g, '');\n    setNewTrackedGuide({inputValue: value})\n  }\n\n  const handleClick = () => {\n    if (newTrackedGuide.inputValue.length > 0) {\n      history.push(`/rastreo/${newTrackedGuide.inputValue}`)\n      setNeedsRerender(!needsRerender)\n    } else {\n      setError(\"Favor de ingresar un numéro de guia\")\n    }\n  }\n \n  const getGuideInfo = async () => {\n    const body = {\n      \"clientDetail\": {\n        \"accountName\": localStorage.getItem(\"email\"),\n        \"apiKey\": localStorage.getItem(\"api_key\")\n      },\n      \"trackingNumbers\": [\n        guideNumber\n      ]\n    }\n\n    const url = `${process.env.REACT_APP_API_URL}/track`\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(body)\n    })\n    \n    const data = await response.json()\n    console.log(data);\n    try {\n      setGuideInformation(data)\n      setShipmentHistory(data.data.shipments[0].shipmentHistory)\n    }\n    catch {      \n      console.log(data.description === \"No shipments found\")\n      \n      if (!guideNumber === true) {\n        setError('Por favor ingresa tu codigo de rastreo.')\n        setHasError(true)\n        \n      } \n      \n      else if (data.description === \"No shipments found\") {\n        console.log('this applies 1');\n        setError('Tu numéro de rastreo no fue encontrado. Favor de ingresarlo nuevamente.')\n        setHasError(true)\n      } \n      \n      else {\n        console.log('this applies 2');\n        // setError('Tu numéro de rastreo no fue encontrado. Favor de ingresarlo nuevamente.')\n        setHasError(true)\n      }\n      \n    }\n    setLoading(false)\n  }\n\n\n  useEffect(() => {\n    setLoading(true)\n    setHasError(false)\n    setError('')\n    getGuideInfo()  \n  }, [needsRerender])\n\n  \n  return (\n    <>\n      <Helmet>\n        <title>Quiken Rastreo</title>\n        <meta \n          name=\"description\"\n          content=\"Servicios de paqueteria y fulfilment en México, rastreo de guias\"\n        />\n        <meta\n          name=\"keywords\" content=\"Envios, Paqueteria, ecommerce, delivery\"\n        />\n      </Helmet>\n      <Navbar/>\n      <FloatingWhatsApp/>\n      <div className=\"request-body-wrapper\">\n\n        {loading ? \n        <div>...Loading</div> :\n        <div>\n          <div className=\"div-wrapper-rastero\">\n            <h1 className=\"request-header\">Rastreo y Seguimiento</h1>\n            <div>\n              <div className=\"div-tracking\">\n                <p className=\"rastreo-blue-letters\">Ingresa tu número de rastreo:</p>\n                <div className=\"rastreo-input-div\">\n                  <input id='input-rastreo' \n                  required\n                  className=\"tracking-number-input\"\n                  value={newTrackedGuide.inputValue} \n                  onChange={handleChange} \n                  placeholder=\"Código de rastreo\"></input>\n                  {/* <Link to={`/rastreo/${newTrackedGuide}`}> */}\n                    <PlaceHolderLookUp onClick={handleClick}>\n                      <img className=\"icono-rastreo\" src={IconoRastreo} alt=\"icono-rastreo\" ></img>\n                    </PlaceHolderLookUp>\n                  {/* </Link>   */}\n                \n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div>\n            {hasError ? \n            \n            <div className=\"main-wrapper-table-title\">\n              <a href='#input-rastreo'>\n                {\n                hasError === false ? \n                \n                <h1 className=\"estado-de-envio-heading-ingresa-guia\">\n                  Favor de ingresar un código de rastreo\n                </h1> : \n                \n                <h1 className=\"estado-de-envio-heading-ingresa-guia\">\n                  {error}\n                </h1>\n                }\n              </a>\n              \n              <div className=\"wrapper-table-titulo\">\n                <div>\n                  \n                  <h1 className=\"historial-pedido-heading\">Historial de Pedido</h1>\n                  \n                  <table className=\"tracking-table\">\n                    <thead>\n                      <tr>\n                        <th className=\"table-header-tracking\">Estatus</th>\n                        <th className=\"table-header-tracking\">Descripción</th>\n                        <th className=\"table-header-tracking\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"tbody-tracking-table\">\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                        <tr>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                          <td className=\"table-data-tracking\">-</td>\n                        </tr>\n                      \n                    </tbody>\n                  </table> \n                \n                </div>\n            </div>\n            \n            </div> : \n            \n            <div>\n              <ShippingInformation guideNumber={guideNumber} shipmentHistory={shipmentHistory}/>\n            </div> }\n              \n          </div>\n          \n          \n          {/* <>\n          <div>\n            <h1 className=\"estado-de-envio-heading\">Estado de envío</h1>\n            <h1 className=\"estado-de-pedido\">Status: <span>{guideNumber}</span> </h1>\n            <h1 className=\"estado-de-pedido\">Código de rastreo:  <span>{guideNumber}</span></h1>\n          </div>  \n\n          <div>\n            <h1 className=\"historial-pedido-heading\">Historial de Pedido</h1>\n            \n            <table className=\"tracking-table\">\n              <thead>\n                <tr>\n                  <th className=\"table-header-tracking\">Estatus</th>\n                  <th className=\"table-header-tracking\">Descripción</th>\n                  <th className=\"table-header-tracking\">Fecha</th>\n                </tr>\n              </thead>\n              <tbody className=\"tbody-tracking-table\">\n                {shipmentHistory.map((step) => {\n                  return (\n                    <tr>\n                    <td className=\"table-data-tracking\">{step.status}</td>\n                    <td className=\"table-data-tracking\">{step.description}</td>\n                    <td className=\"table-data-tracking\">{step.date}</td>\n                  </tr>)\n                })}\n              </tbody>\n            </table> \n          </div>\n          </> */}\n\n        </div>\n        \n      }\n      <Footer/>\n\n      </div>\n\n    </>  \n  )\n}\n\nconst PlaceHolderLookUp = styled.div`\nheight: 32px;\nwidth: 30px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center ;\nbackground-color: red;\nbackground-image: url(\"./\");\nborder-radius: 0px 5px 5px 0px;\n/* border: solid 1px black; */\n@media (max-width: 768px) {\n    height: 30px;\n    width: 50px;\n    align-self: center;\n    justify-self: center;\n    \n  } \n`\n\nexport default RasteroPagina;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewRecargar.js",["255","256","257","258"],"import React from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport MidScreenWrapper from '../styled_components/mid_screen_wrapper'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport MasterCard from '../assets/Recarga/master_card.png'\nimport Visa from '../assets/Recarga/Visa_Inc._logo.svg.png'\nimport Oxxo from '../assets/Recarga/oxxo.svg'\nimport Ecart from '../assets/Recarga/logo-negro.svg'\n\n\n\nconst NewGuias = () => {\n    const [error, setError] = useState(true);\n    const [amount, setAmount ] = useState(0);\n    const [ modal, setModal ] = useState(false);\n    const [ haveLink, setHaveLink] = useState(false);\n    const [paymentLink, setPaymentLink] = useState(\"\");\n\n    const createPayment = async () => {\n        const url = `${process.env.REACT_APP_API_URL}/user/pay`;\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n            \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n          },\n          body: JSON.stringify({\n              \"price\": amount\n          })\n        });\n        const data = await response.json();\n        if (data.status === \"SUCCESS\") {\n            setHaveLink(true)\n            setPaymentLink(data.pay_link)\n        } else if (data.status === \"ERROR\") {\n          console.log(data.description)\n        } \n      }\n\n    const handleChange = (e) => {\n        setAmount(e.target.value)\n    } \n\n    const upperSection = haveLink === false ? (\n        <PaymentSection>\n            <HeaderAgregaSaldo> AGREGA SALDO A TU CUENTA:</HeaderAgregaSaldo>\n            <SubHeadingAgregaSaldo> Ingresa la cantidad a abonar en MXN . <br/> Y paga comodamente con cualquiera de nuestros metodos de pago</SubHeadingAgregaSaldo>\n            <PaymentInput onChange={(e) => handleChange(e)} placeholder='Cantidad a abonar (MXN)'></PaymentInput>\n            <ButtonPayment onClick={() => createPayment()}>Aceptar</ButtonPayment>        \n        </PaymentSection>\n    ) : (\n     <PaymentSection>\n         <HeaderAgregaSaldo>Muchas gracias por realizar su pedido.</HeaderAgregaSaldo>\n         <SubHeadingAgregaSaldo> Da click en el siguiente link.<br/> Y completa tu pago</SubHeadingAgregaSaldo>\n            \n         <PaymentLink href={paymentLink}>\n            {paymentLink}\n         </PaymentLink>\n     </PaymentSection>   \n    )\n\n    return (\n    <PageWrapper>\n        <Navbar/>\n        <MidScreenWrapper>\n            <Sidebar setError={setError}/>\n            <RecargaWrapper>\n                \n                {upperSection}\n                           \n                <LogosWrapper>\n                    <img \n                        style={{\n                            width: `250px`,\n                            height: `100px`,\n                            }} \n                            alt=\"visa-logo\" \n                        src={Visa}/>\n\n                    <img alt=\"paypal-logo\" src={Ecart} \n                        style={{\n                            width: `250px`,\n                            height: `100px`,\n                            }}\n                    ></img>\n                    \n                    <img \n                    alt=\"oxxo-logo\"\n                    style={{\n                        width: `250px`,\n                        height: `100px`,\n                        }} \n                    src={Oxxo}/>\n                    <img \n                    alt=\"mastercard-logo\" \n                    src={MasterCard}\n                    style={{\n                        width: `250px`,\n                        height: `100px`,\n                        }}\n                    />\n                </LogosWrapper>\n          </RecargaWrapper>\n        </MidScreenWrapper>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\nconst PaymentSection = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\n\nconst RecargaWrapper = styled.div`\n    width: 100%; \n    display: flex;\n    flex-direction: column;\n    //align-items: center;\n    justify-content: center;\n`\n\nconst PaymentLink = styled.a`\n    &:hover {\n        color: red;\n        font-weight: 500;\n    }\n    color: #245188;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 20px;\n    font-weight: 400;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    \n`\n\nconst LogosWrapper = styled.div`\n    width: 90%; \n    display: flex;\n    flex-direction: row;\n    margin-top: 20px;\n    align-self: center;\n    justify-content: space-evenly;\n`\n\nconst HeaderAgregaSaldo = styled.h1`\n    color: #EE1F42;\n    font-size: 40px;\n    font-weight: 700;\n    font-family: 'Montserrat', sans-serif;\n    padding-bottom: 10px;\n`\nconst SubHeadingAgregaSaldo = styled.h1`\n    color: #245188;\n    font-size: 25px;\n    font-weight: 700;\n    font-family: 'Montserrat', sans-serif;\n    text-align: center;\n`\nconst WelcomeHeader = styled.h1`\n    color: white;\n    font-size: 25px;\n    font-weight: 500;\n`\n\nconst PaymentInput = styled.input`\n    color: black;\n    font-size: 15px;\n    box-sizing: border-box;\n    font-weight: 500;\n    width: 250px;\n    margin-top: 10px;\n    padding: 5px;\n    font-family: 'Montserrat', sans-serif;\n`\n\nconst ButtonPayment = styled.button`\n    height: 30px;\n    box-sizing: border-box;\n    font-weight: 500;\n    width: 150px;\n    font-size: 20px;\n    background-color: #245188;\n    margin-top: 10px;\n    border: none;\n    border-radius: 10px;\n    color: white;\n    font-family: 'Montserrat', sans-serif;\n`\n\nexport default NewGuias;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/SignInPagina.js",["259"],"import React, { useState, useEffect} from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport './SignInPagina.scss'\nimport { Link, useHistory } from 'react-router-dom'\nimport axios from 'axios'\n\nconst LoginPagina= (props) => {\n  let history = useHistory();\n  \n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [ goToDashboard, setGoToDashboard] = useState(false)\n\n  useEffect(() => {\n    userSignedIn()\n    if (goToDashboard) history.push(\"/newdashboard\") \n  },[]);\n\n  const userSignedIn = async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n    };\n\n    try {\n      //AQUI VAN LAS RUTAS DE LAS GUIAS\n      const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/user/info`, {} , config);\n      console.log(data)\n      setError(false)\n      setGoToDashboard(true)\n    } catch (error) {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"username\");\n      setError(true)\n    }\n  }\n\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    \n    let formData = new FormData();\n    formData.append('email', email);   //append the values with key, value pair\n    formData.append('password', password);\n\n    try {\n      const { data } = await axios.post(\n        `${process.env.REACT_APP_API_URL}/user/login`,\n        formData,\n        config\n      );\n      \n      localStorage.setItem(\"access_token\", data.data.access_token);\n      console.log(data.data.access_token)\n      localStorage.setItem(\"api_key\", data.data.user.api_key);\n      localStorage.setItem(\"email\", data.data.user.email);\n      localStorage.setItem(\"username\", data.data.user.username);\n      console.log(data.data.user.api_key)\n\n      history.push(\"/newdashboard\");\n    } catch (error) {\n      console.log(error)\n\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"page-content-wrapper\">\n        <div className=\"signup-main-wrapper\">\n          <form className=\"the-form\" onSubmit={loginHandler}>\n            <h3 className=\"main-heading-signup\">Accesa a tu cuenta</h3>\n            <h2 className=\"main-subheading-signup\">Y disfruta de los mejores precios envíos</h2>\n            <Link className=\"forgot-passwordlink\" to=\"/forgotpassword\">¿Olvidaste tu contraseña?</Link>\n            {error && <span className=\"login-screen-title\" >{error}</span>}\n            \n            <label className=\"form-label\">Email</label>\n            <input className=\"form-input\" \n                  required \n                  id=\"name\" \n                  value={email} \n                  onChange={(e) => setEmail(e.target.value)} \n                  type=\"text\" \n                  placeholder=\"Ingresa tu email\"/>\n\n            <label className=\"form-label\">Contraseña</label>\n            <input className=\"form-input\" \n                  required \n                  id=\"password\" \n                  value={password} \n                  onChange={(e) => setPassword(e.target.value)} \n                  type=\"password\" \n                  placeholder=\"Ingresa tu contaseña\"/>\n            \n            <button type=\"submit\" className=\"btn-register\">Enviar</button>\n          \n          <div className=\"wrapper-sign-in-link\">\n            <p className=\"ya-tienes-cuenta\">Ya tienes una cuenta?</p>\n            <Link className=\"da-click-aqui\" to=\"/signin\">¡Da click aqui!</Link>\n          </div>\n          </form>\n                  \n        </div>\n      </div>\n    <Footer/>\n\n    </>\n  )\n}\n\nexport default LoginPagina;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/NewGuias.js",["260","261"],"import React, { useState } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport PageWrapper from '../styled_components/page_wrapper'\nimport MidScreenWrapper from '../styled_components/mid_screen_wrapper'\nimport styled from 'styled-components'\nimport GuidesTable from './GuidesTable'\n\nconst NewGuias = () => {\n  \n    const [error, setError] = useState(true);\n    const [loading, setLoading] = useState(true);\n\n    return (\n    <PageWrapper>\n        <Navbar/>\n        <MidScreenWrapper>\n            <Sidebar setLoading={setLoading} setError={setError}/>\n            <WrapperTableGuias>\n                <h1 className=\"cotizador-rapido-main-header\">Guias Generadas</h1>\n                <GuidesTable/>\n            </WrapperTableGuias>\n        </MidScreenWrapper>\n        <Footer/>\n    </PageWrapper>\n  )\n}\n\n\nconst WrapperTableGuias = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    //height: 100%;\n    align-items: center;\n    padding-top: 50px;\n    box-sizing: border-box;\n    justify-content: center;\n    background-color: white;\n`\n\nexport default NewGuias;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/routing/PrivateRoute.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/WhatsappBtn.js",["262"],"import React from 'react'\nimport  FloatingWhatsApp from 'react-floating-whatsapp'\nimport 'react-floating-whatsapp/dist/index.css' \nimport './WhatsappBtn.scss'\n\nconst WhatsAppBtn = () => {\n    return (\n        <div>\n            <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"></link>\n            <a\n                href=\"https://wa.me/528116618597\"\n                className=\"whatsapp_float\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <i className=\"fa fa-whatsapp whatsapp-icon\"></i>\n            </a>\n        </div>\n    )\n}\n\nexport default WhatsAppBtn;\n","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/SubNavbar.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/Navbar.js",["263","264","265","266"],"import React, { useEffect } from 'react';\nimport BtnRegistro from './BtnRegistro';\nimport { Link } from 'react-router-dom';\nimport \"./Navbar.scss\";\nimport styled from 'styled-components'\n\nimport QuikenLogo from '../../assets/Inicio/Quiken_Logo_color-03.svg'\n\nconst Navbar = () => {\n  const [open, setOpen] = React.useState(false);\n  const node = React.useRef();\n\n  useEffect(() => {\n      var Tawk_API = Tawk_API||{},\n      Tawk_LoadStart = new Date();\n      (function(){\n      var s1=document.createElement(\"script\"),s0=document.getElementsByTagName(\"script\")[0];\n      s1.async=true;\n      s1.src='https://embed.tawk.to/5c631c1c6cb1ff3c14cc3564/default';\n      s1.charset='UTF-8';\n      s1.setAttribute('crossorigin', '*');\n      s0.parentNode.insertBefore(s1,s0);\n      })();\n      Tawk_API.onLoad = function () {\n        console.log(\"chat loaded\");\n        Tawk_API.setAttributes(\n          {\n            name: \"Test Name\",\n            email: \"email@email.com\",\n            hash: \"hash value\",\n          },\n          function (error) {}\n        );\n      };\n  }, []);\n\n  return (\n    <>\n      {/* <!--Start of Tawk.to Script--> */}\n      {/* <!--End of Tawk.to Script--> */}\n      <div className=\"navbar-main\">\n        <div className=\"navbar-logo-placeholder\">\n          <Link className=\"logo-link\" to=\"/\">\n            <img src={QuikenLogo} className=\"quiken-logo\" />\n          </Link>\n        </div>\n        \n        {/* //Desktop Menu */}\n        <div className=\"navbar-links-wrapper\">\n          <Link className=\"navbar-link\" to=\"/\">INICIO</Link>\n          <Link className=\"navbar-link\" to=\"/servicios\">SERVICIOS</Link>\n          <Link className=\"navbar-link\" to=\"/fulfillment\">FULFILLMENT</Link>\n          <Link className=\"navbar-link\" to=\"/rastreo\">RASTREO</Link>\n          <Link className=\"navbar-link\" to=\"/contacto\">CONTACTO</Link>\n          <Link className=\"navbar-link\" to=\"/signin\">\n            SIGN IN\n          </Link>\n          <Link to=\"/signup\">\n            <BtnRegistro/>\n          </Link>\n        </div>\n        {/* Mobile Menu */}\n        <Burger open={open} setOpen={setOpen}/>\n        <Menu open={open} setOpen={setOpen}/>\n        \n        \n\n      </div>\n    </>\n  );\n};\n\nconst Menu = ({ open }) => {\n  return (\n    <StyledMenu open={open}>\n          <Link className=\"navbar-link\"to=\"/\">INICIO</Link>\n          <Link className=\"navbar-link\" to=\"/servicios\">SERVICIOS</Link>\n          <Link className=\"navbar-link\" to=\"/fulfillment\">FULFILLMENT</Link>\n          <Link className=\"navbar-link\" to=\"/rastreo\">RASTREO</Link>\n          <Link className=\"navbar-link\" to=\"/contacto\">CONTACTO</Link>\n          <Link className=\"navbar-link\" to=\"/signin\">\n            SIGN IN\n          </Link>\n          <Link to=\"/signup\">\n            <BtnRegistro/>\n          </Link>\n    </StyledMenu>\n  )\n}\n\nconst StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #245188;\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(-100%)'};\n  height: 100vh;\n  text-align: left;\n  /* padding: 2rem; */\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  z-index: 30;\n\n  @media (max-width: 576px) {\n      width: 100%;\n    }\n\n  a {\n    font-size: 18px;\n    text-transform: uppercase;\n    padding: 1rem 0;\n    font-weight: bold;\n    letter-spacing: 0.5rem;\n    color: white;\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 1rem;\n      text-align: center;\n    }\n\n    &:hover {\n      color: red;\n    }\n  }\n`\n\nconst StyledBurger = styled.button`\n  /* position: absolute;\n  top: 5%;\n  left: 2rem; */\n  margin-right: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 30px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 31;\n\n  @media (min-width: 800px) {\n      display: none;\n    }\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.20rem;\n    background: ${({ open }) => open ? 'white' : '#245188'};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`\n\nconst Burger = ({ open, setOpen }) => {\n  return (\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\nexport default Navbar","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/RastreaPedido.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/ContactUs.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/BtnMail.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MilesDeGuias.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Footer/Footer.js",["267"],"import React from 'react'\nimport './Footer.scss'\nimport QuikenLogoFooter from '../../assets/Inicio/Quiken_Logo_Bco-44.svg'\nimport Facebook from '../../assets/Inicio/Iconos de redes sociales/Facebook-45.svg'\nimport Instagram from '../../assets/Inicio/Iconos de redes sociales/Instagram-47.svg'\nimport Twitter from '../../assets/Inicio/Iconos de redes sociales/Twitter-46.svg'\nimport locationIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_ubicacion-48.svg'\nimport phoneIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_Telefono-49.svg'\nimport mailIcon from '../../assets/Inicio/Iconos de Contacto/Quiken_Correo-50.svg'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer-main-wrapper\">\n            <div className=\"logo-links-wrapper\">\n                <div className=\"logo-quienes-somos-wrapper\">\n                    <img className=\"img-logo-footer\" alt=\"quiken-logo\" src={QuikenLogoFooter}></img>\n                    <h3 className=\"quienes-somos\">¿QUIENES SOMOS?</h3>\n                </div>\n                <div className=\"copy-icons-wrapper\">\n                    <p className=\"copy-quiken\">© 2021 Quiken Mx, Todos los derechos reservados.</p>\n                    <a target=\"_blank\" href=\"https://www.facebook.com/quikenmx\" rel=\"noreferrer\">\n                        <img src={Facebook} className=\"icon\" alt=\"facebook-icon\"/>\n                    </a>\n                    \n                    <a target=\"_blank\" href=\"https://www.facebook.com/quikenmx\" rel=\"noreferrer\">\n                    <img src={Twitter} className=\"icon\" alt=\"twitter-icon\"/>\n                    </a>\n                    \n                    \n                    <a target=\"_blank\" href=\"https://www.instagram.com/quikenmx/?hl=en\" rel=\"noreferrer\">\n                        <img src={Instagram} className=\"icon\" alt=\"instagram-icon\" />                    \n                    </a>\n                    \n                    \n                </div>\n            </div>\n            <div className=\"info-wrapper\">\n                <h2 className=\"contactanos-heading\">CONTÁCTANOS</h2>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={locationIcon} className=\"contact-icon\" />\n                    <p className=\"paragraph-contact\">Monte Alto No. 157, Fraccionamiento\n                    Parque 200, C.P 66368 Santa Catarina,\n                    Nuevo León, México.</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={phoneIcon} className=\"contact-icon\" alt=\"phone-icon\" />\n                    <p className=\"paragraph-contact\">(81) 1661 8597</p>\n                </div>\n                <div className=\"icon-text-row-wrapper\">\n                    <img src={mailIcon} className=\"contact-icon\" alt=\"mail-icon\" />\n                    <p className=\"paragraph-contact\">hola@quiken.mx</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/NuestrosVehiculos.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/ContactForm.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MasBeneficios.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/MapInicio.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Inicio/AyudamosNegocios.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Tracking/ShippingInformation.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/styled_components/page_wrapper.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Sidebar/Sidebar.js",["268"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/styled_components/mid_screen_wrapper.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesTable.js",["269","270","271","272","273","274","275","276","277","278"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Others/AccountInfo.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/DashboardMonitor.js",["279","280","281","282"],"import { background } from '@chakra-ui/react';\nimport React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport styled from 'styled-components';\nimport axios from 'axios' \n\nconst DashboardMonitor = ( \n    {\n        userPoints,\n        user, \n        dashboardData\n    }\n    ) => {\n    const history = useHistory();\n    const [date, setDate] = useState(\"\");\n\n    const logoutHandler = () => {\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('email');\n        localStorage.removeItem('username');\n        history.push('/signin')\n    }\n    console.log(dashboardData)\n\nuseEffect(() => {\n    let newDate = new Date\n    let options = { weekday:'long', day:'numeric', month:'long', year:'numeric' }\n    newDate = newDate.toLocaleDateString('es-MX', options);\n    setDate(newDate)\n    return () => {\n      \n    };\n}, []);\n    \n    return (\n        <BigWrapper>\n            <RowColumn>\n                <WelcomeHeader>Bienvenido a Quiken</WelcomeHeader>  \n                <MainHeaderDashboard>{user.email}</MainHeaderDashboard>  \n                <SubHeaderDashboard>{date}</SubHeaderDashboard>    \n            </RowColumn>\n            \n            <Row>\n                <Card>\n                    <label className=\"label-paquete-info\">Saldo disponible</label>\n                    <h1 className=\"featured-number\">$ {userPoints}</h1>\n                    <Link className=\"recargar-saldo-link\" to=\"/newrecargar\">\n                      Recagar Saldo {\">\"}\n                    </Link>\n                  </Card>\n                  \n                  <Card>\n                    <label className=\"label-paquete-info\">Total Recargas</label>\n                    <h1 className=\"featured-number\">$ {parseInt(dashboardData.total_refils)}.00</h1>\n                    <Link className=\"recargar-saldo-link\" to=\"/newrecargar\">Recagar Saldo {\">\"}</Link>\n                  </Card>\n                \n                  <Card>\n                    <label className=\"label-paquete-info\">Costo Promedio</label>\n                    <h1 className=\"featured-number\">${parseInt(dashboardData.average_cost)}.00</h1>\n                    <Link className=\"recargar-saldo-link\" disable style={{color: \"white\"}} to=\"/newrecargar\">Recagar Saldo {\">\"}</Link>\n                </Card>\n                \n                  <Card>\n                    <label className=\"label-paquete-info\">Peso Promedio</label>\n                    <h1 className=\"featured-number\">{dashboardData.average_weight.toFixed(2)} Kg</h1>\n                    <Link className=\"recargar-saldo-link\" disable style={{color: \"white\"}} to=\"/newrecargar\">Recagar Saldo {\">\"}</Link>\n                  </Card>\n            </Row>\n            <GraphBannerWrapper>\n                <GraphWrapper>\n                </GraphWrapper>\n            </GraphBannerWrapper> \n        </BigWrapper>\n  )\n}\n\n\n\nconst BigWrapper = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    background-color: white;\n`\nconst Card = styled.div`\n    height: 100%;\n    background-color: $quikenWhite;\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    padding: 5px;\n`   \n\n\nconst RowColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    font-family: 'Montserrat', sans-serif;\n    background-color: #245188;\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    padding: 20px;\n`\n\nconst GraphBannerWrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\nwidth: 100%;\nheight: 100%;\n\n`\n\nconst MainHeaderDashboard = styled.h1`\n    color: #EE1F42;\n    font-size: 40px;\n    font-weight: 700;\n`\nconst SubHeaderDashboard = styled.h1`\n    color: white;\n    font-size: 25px;\n    font-weight: 300;\n`\nconst WelcomeHeader = styled.h1`\n    color: white;\n    font-size: 25px;\n    font-weight: 500;\n`\n\nconst GraphWrapper = styled.div`\n    width: 100%;\n    background-color: white;\n`\n\nexport default DashboardMonitor","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/Cotizador.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuideCreator.js",["283","284","285","286","287","288","289","290","291","292","293","294","295"],"import { Input } from '@chakra-ui/react';\nimport React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst GuideCreator = ({\n  user\n  }\n) => {\n  console.log(user)\n  \n    //Username for fetching points\n  let username = localStorage.getItem('email')\n\n  //Create Guide Sucess\n  const [success, setSuccess] = useState(false)\n  \n  //Guide Data\n  const [apiGuide, setApiGuide] = useState()\n  \n  //Payment and Selected Guide\n  // const [selectedGuide, setSelectedGuide] = useState(false)\n  const [selectedService, setSelectedService] = useState()\n\n  //currentUser (HARDCODED)\n  // const [currentUser, setcurrentUser] = useState('')\n  const [guideCost, setguideCost] = useState(0)\n\n  //Types of Services\n  const [services, setServices] = useState()\n  const [loadingQuoteData, setLoadingQuoteData] = useState(true)\n\n  //User Points State\n  const [points, setPoints] = useState(100);\n  const [isPointsEnough, setIsPointsEnough] = useState(false)\n  const [needsReset, setNeedsReset] = useState(false)\n\n    //Origin STATES\n  const [fullNameSender, setFullNameSender] = useState('');\n  const [emailSender, setEmailSender] = useState('');\n  const [phoneNumberSender, setPhoneNumberSender] = useState('');\n  const [streetAndNumberSender, setStreetandNumberSender] = useState('');  \n  const [referenciasSender, setReferenciasSender] = useState('');\n  const [colonySender, setColonySender] = useState('');\n  const [postalCodeSender, setPostalCodeSender] = useState('');\n  const [citySender, setCitySender] = useState('');\n  const [mexicoStateSender, setMexicoStateSender] = useState('');\n    \n  // Origin Error\n  const [fullNameSenderError, setFullNameSenderError] = useState('');\n  const [emailSenderError, setEmailSenderError] = useState('');\n  const [phoneNumberSenderError, setPhoneNumberSenderError] = useState('');\n  const [streetAndNumberSenderError, setStreetandNumberSenderError] = useState('');\n  const [colonySenderError, setColonySenderError] = useState('');\n  const [postalCodeSenderError, setPostalCodeSenderError] = useState('');\n  const [citySenderError, setCitySenderError] = useState('');\n  const [errorQuote, setErrorQuote] = useState(\"\")\n\n    // \"\" STATES\n  const [fullNameReceiver, setFullNameReceiver] = useState('');\n  const [emailReceiver, setEmailReceiver] = useState('');\n  const [phoneNumberReceiver, setPhoneNumberReceiver] = useState('');\n  const [streetAndNumberReceiver, setStreetandNumberReceiver] = useState('');  \n  const [referenciasReceiver, setReferenciasReceiver] = useState('');\n  const [colonyReceiver, setColonyReceiver] = useState('');\n  const [postalCodeReceiver, setPostalCodeReceiver] = useState('');\n  const [cityReceiver, setCityReceiver] = useState('');\n  const [mexicoStateReceiver, setMexicoStateReceiver] = useState('');\n  \n  // To Errors\n  const [fullNameReceiverError, setFullNameReceiverError] = useState('');\n  const [emailReceiverError, setEmailReceiverError] = useState('');\n  const [phoneNumberReceiverError, setPhoneNumberReceiverError] = useState('');\n  const [streetAndNumberReceiverError, setStreetandNumberReceiverError] = useState('');\n  const [colonyReceiverError, setColonyReceiverError] = useState('');\n  const [postalCodeReceiverError, setPostalCodeReceiverError] = useState('');\n  const [cityReceiverError, setCityReceiverError] = useState('');\n  \n  //PACKAGE VALUES\n  const [packageLenght, setPackageLenght] = useState('');\n  const [packageWidth, setPackageWidth] = useState('');\n  const [packageHeight, setPackageHeight  ] = useState('');\n  const [packageWeight, setPackageWeight] = useState('');  \n  const [packageDescription, setPackageDescription] = useState('');\n    //PACKAGE ERRORS\n  const [packageLenghtError, setPackageLenghtError] = useState('');\n  const [packageWidthError, setPackageWidthError] = useState('');\n  const [packageHeightError, setPackageHeightError  ] = useState('');\n  const [packageWeightError, setPackageWeightError] = useState('');  \n  const [packageDescriptionError, setPackageDescriptionError] = useState('');\n  \n  const createGuide = async () => {\n    await createGuideApi() \n  }\n\n  //Step One Guide Creation\nconst createGuideApi = async () => {\n    const urlApiCreate = 'https://test.quiken.mx/generate';\n    const responseApi = await fetch(urlApiCreate, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n      },\n      body: JSON.stringify({\n        \"clientDetail\": {\n          \"accountName\": localStorage.getItem('email'),\n          \"apiKey\": localStorage.getItem('api_key')\n        },\n        \"origin\": {\n          \"name\": fullNameSender,\n          \"company\": fullNameSender,\n          \"email\": emailSender,\n          \"phone\": phoneNumberSender,\n          \"street\": streetAndNumberSender,\n          \"ext_number\": \"col\",\n          \"int_number\": \"\",\n          \"district\": \"\",\n          \"city\": citySender,\n          \"state\": mexicoStateSender,\n          \"country\": \"MX\",\n          \"postalCode\": postalCodeSender,\n          \"reference\": referenciasSender\n        },\n        \"destination\": {\n          \"name\": fullNameSender,\n          \"company\": fullNameReceiver,\n          \"email\": emailReceiver,\n          \"phone\": phoneNumberReceiver,\n          \"street\": streetAndNumberReceiver,\n          \"ext_number\": \"col\",\n          \"int_number\": \"\",\n          \"district\": \"\",\n          \"city\": cityReceiver,\n          \"state\": mexicoStateReceiver,\n          \"country\": \"MX\",\n          \"postalCode\": postalCodeReceiver,\n          \"reference\": referenciasReceiver\n        },\n        \"package\": {\n          \"content\": packageDescription,\n          \"type\": 1,\n          \"dimensions\": {\n            \"length\": packageLenght,\n            \"width\": packageWidth,\n            \"height\": packageHeight\n          },\n          \"weight\": packageWeight\n        },\n        \"shipment\": {\n          \"service\": selectedService\n        },\n        \"settings\": {\n          \"labelFormat\": \"pdf\"\n        }\n      })\n    });\n\n    const data = await responseApi.json()\n    setApiGuide(data)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = formValidation();\n    if (isValid) {\n      await calculateNewGuidePrice()\n    }\n    }\n    \n    const formValidation = () => {\n        const fullNameSenderError = {};\n        const emailSenderError = {};\n        const phoneNumberSenderError = {};\n        const streetAndNumberSenderError = {};\n        const colonySenderError = {};\n        const postalCodeSenderError = {};\n        const citySenderError = {};\n        const fullNameReceiverError = {};\n        const emailReceiverError = {};\n        const phoneNumberReceiverError = {};\n        const streetAndNumberReceiverError = {};\n        const colonyReceiverError = {};\n        const postalCodeReceiverError = {};\n        const cityReceiverError = {};\n        const packageLenghtError = {};\n        const packageWidthError = {};\n        const packageHeightError = {};\n        const packageWeightError = {};\n        const packageDescriptionError = {};\n        \n    \n        let isValid = true;\n        \n        //Name Validation Origin\n        if (fullNameSender.trim().length < 5) {\n          fullNameSenderError.FullNameSenderShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n          isValid = false;\n          console.log(\"name too short\")\n        }\n    \n        if (fullNameSender.trim().match(/[0-9]/)) {\n          fullNameSenderError.FullNameLong = \"Favor de ingresar solamente letras\";\n          isValid = false;\n        }\n    \n        setFullNameSenderError(fullNameSenderError)\n    \n        //REGEX Email Validation \n        \n        if (emailIsValid(emailSender) === false) {\n          emailSenderError.EmailError = \"El email no es valido\"\n          isValid = false;\n          console.log(\"The email is not valid\")\n        }\n    \n        setEmailSenderError(emailSenderError)\n        \n        if (phoneNumberSender.trim().length < 10) {\n          phoneNumberSenderError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n          console.log(\"el telefono es muy corto\")\n          isValid = false;\n        }\n        \n    \n        if (hasLetters(phoneNumberSender) === false) {\n          phoneNumberSenderError.PhoneTooShort = \"Favor de introducir solo numeros\"\n          isValid = false;\n        }\n    \n        setPhoneNumberSenderError(phoneNumberSenderError)\n    \n        if (streetAndNumberSender.trim().length < 5) {\n          streetAndNumberSenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n          isValid = false;\n        }\n    \n        setStreetandNumberSenderError(streetAndNumberSenderError)\n    \n        if (colonySender.trim().length < 5) {\n          colonySenderError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n          isValid = false;\n        }\n    \n        setColonySenderError(colonySenderError)\n    \n        if (postalCodeSender.trim().length < 4) {\n          postalCodeSenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n          isValid = false;\n        }\n    \n        if (postalCodeSender.trim().length > 11) {\n          postalCodeSenderError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n          isValid = false;\n        }\n        \n        setPostalCodeSenderError(postalCodeSenderError)\n    \n        if (citySender.trim().length < 5) {\n          citySenderError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n          isValid = false;\n        }\n    \n        setCitySenderError(citySenderError)\n    \n        // To Section Validation\n    \n        if (fullNameReceiver.trim().length < 5) {\n            fullNameReceiverError.FullNameReceiverShort = \"El nombre complete tiene que tener más de 5 caracteres\";\n            isValid = false;\n            console.log(\"name too short\")\n          }\n      \n        if (fullNameReceiver.trim().match(/[0-9]/)) {\n            fullNameReceiverError.FullNameLong = \"Favor de ingresar solamente letras\";\n            isValid = false;\n          }\n      \n        setFullNameReceiverError(fullNameReceiverError)\n        \n        if (emailIsValid(emailReceiver) === false) {\n            emailReceiverError.EmailError = \"El email no es valido\"\n            isValid = false;\n            console.log(\"The email is not valid\")\n          }\n      \n          setEmailReceiverError(emailReceiverError)\n          \n        if (phoneNumberReceiver.trim().length < 10) {\n            phoneNumberReceiverError.PhoneTooShort = \"El télefono tiene que tener minimo 10 digitos\"\n            console.log(\"el telefono es muy corto\")\n            isValid = false;\n          }\n    \n          if (hasLetters(phoneNumberReceiver) === false) {\n            phoneNumberReceiverError.PhoneTooShort = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPhoneNumberReceiverError(phoneNumberReceiverError)\n      \n          if (streetAndNumberReceiver.trim().length < 5) {\n            streetAndNumberReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n            isValid = false;\n          }\n      \n          setStreetandNumberReceiverError(streetAndNumberReceiverError)\n      \n          if (colonyReceiver.trim().length < 5) {\n            colonyReceiverError.FieldToShort = \"El campo debe tener más de 5 caracteres\";\n            isValid = false;\n          }\n      \n          setColonyReceiverError(colonyReceiverError)\n      \n          if (postalCodeReceiver.trim().length < 4) {\n            postalCodeReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n            isValid = false;\n          }\n      \n          if (postalCodeReceiver.trim().length > 11) {\n            postalCodeReceiverError.FieldTooLong = \"El campo debe tener max 11 caracteres\";\n            isValid = false;\n          }\n          \n          setPostalCodeReceiverError(postalCodeReceiverError)\n      \n          if (cityReceiver.trim().length < 5) {\n            cityReceiverError.FieldTooShort = \"El campo debe tener min 5 caracteres\";\n            isValid = false;\n          }\n      \n          setCityReceiverError(cityReceiverError)\n          \n          if (packageLenght.length === 0) {\n            packageLenghtError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          if (hasLetters(packageLenght) === false) {\n            console.log(\"solo numeros\")\n            packageLenghtError.PackageLenghtLetters = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPackageLenghtError(packageLenghtError)\n      \n          if (packageWidth.length === 0) {\n            packageWidthError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          if (hasLetters(packageWidth) === false) {\n            console.log(\"solo numeros\")\n            packageWidthError.PackageWidthLetters = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPackageWidthError(packageWidthError)\n          \n          if (packageHeight.length === 0) {\n            packageHeightError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          if (hasLetters(packageHeight) === false) {\n            console.log(\"solo numeros\")\n            packageHeightError.PackageHeightLetters = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPackageHeightError(packageHeightError)\n      \n          if (packageWeight.length === 0) {\n            packageWeightError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          if (hasLetters(packageWeight) === false) {\n            console.log(\"solo numeros\")\n            packageWeightError.PackageWeightLetters = \"Favor de introducir solo numeros\"\n            isValid = false;\n          }\n      \n          setPackageWeightError(packageWeightError)\n          \n          if (packageDescription.length === 0) {\n            packageDescriptionError.NoValue = \"Favor de ingresar un valor\"\n          }\n      \n          setPackageDescriptionError(packageDescriptionError)\n    \n        return isValid\n    }\n\n    // Guide Cost Function\nconst calculateNewGuidePrice = async () => {\n    const url = `${process.env.REACT_APP_API_URL}/rate`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n      body: JSON.stringify({\n          \"clientDetail\": {\n             \"accountName\": localStorage.getItem(\"email\"),\n             \"apiKey\": localStorage.getItem(\"api_key\")\n           },\n           \"origin\": {\n             \"name\": fullNameSender,\n             \"company\": \"Default Value\",\n             \"email\": emailSender,\n             \"phone\": phoneNumberSender,\n             \"country\": \"MX\",\n             \"postalCode\": postalCodeSender\n           },\n           \"destination\": {\n             \"name\": fullNameReceiver,\n             \"company\": \"Default Value\",\n             \"email\": emailReceiver,\n             \"phone\": phoneNumberReceiver,\n             \"country\": \"MX\",\n             \"postalCode\": postalCodeReceiver\n           },\n           \"package\": {\n             \"content\": packageDescription,\n             \"type\": 1,\n             \"dimensions\": {\n               \"length\": parseInt(packageLenght),\n               \"width\": parseInt(packageWidth),\n               \"height\": parseInt(packageHeight)\n             },\n             \"weight\": parseInt(packageWeight)\n           }\n      })\n    });\n    const data = await response.json();\n    if (data.status === \"SUCCESS\") {\n      console.log(data.data.services, 'DATA DATA SERVICES');\n      setServices(data.data.services)\n      console.log(\"QUOTED GUIDE\")\n      setLoadingQuoteData(false)\n      \n    } else if (data.status === \"ERROR\") {\n      setErrorQuote(data.description)\n      setLoadingQuoteData(false)\n    }\n    \n  }\n\n  function hasLetters (phone) {\n    return /^\\d+$/.test(phone)\n  }\n\n  function emailIsValid (email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n  }\n\n  const handleSelectGuide = (servicio) => {\n    setSelectedService(servicio.code)\n    console.log(servicio.code)\n    setguideCost(servicio.totalPrice)\n    console.log(\"selected guide\")\n  }\n\n\n    return (\n        <MainDiv>                    \n            \n        <SectionWrapper>              \n          {/* ORIGIN SECTION */}\n          <SubsectionWrapper>\n          <SubsectionHeading> 1. ORIGEN:</SubsectionHeading>\n              \n              <LabelInputWrapper>\n              {/* <label className=\"form-label\" style={{display:'block'}}>Nombre Completo <span style={{color: \"red\"}}>*</span></label> */}\n                <LabelStyled >Nombre Completo</LabelStyled>\n                <InputStyled value={fullNameSender}\n                    onChange= {event => setFullNameSender(event.target.value)}\n                    type=\"text\" placeholder=\"Nombre Completo\" />\n                {Object.keys(fullNameSenderError).map((key) => {return <div>{fullNameSenderError[key] }</div>})}\n              </LabelInputWrapper>\n                                  \n              <LabelInputWrapper>\n                  <LabelStyled>Correo Electrónico</LabelStyled>\n                  <InputStyled value={emailSender} onChange={(event) => setEmailSender(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                  {Object.keys(emailSenderError).map((key) => { return <div>{emailSenderError[key]}</div> })}  \n              </LabelInputWrapper>                \n                  \n              <LabelInputWrapper>\n                  <LabelStyled >Teléfono</LabelStyled>\n                  <InputStyled value={phoneNumberSender} onChange={(event) => setPhoneNumberSender(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                  {Object.keys(phoneNumberSenderError).map((key) => {return <div>{phoneNumberSenderError[key] }</div>})}\n              </LabelInputWrapper>\n              \n              <LabelInputWrapper>\n                  <LabelStyled >Calle y Número</LabelStyled>\n                  <InputStyled value={streetAndNumberSender} onChange={(event) => setStreetandNumberSender(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                  {Object.keys(streetAndNumberSenderError).map((key) => {return <div>{streetAndNumberSenderError[key] }</div>})}\n              </LabelInputWrapper>\n              \n              <LabelInputWrapper>\n                  <LabelStyled >Referencia</LabelStyled>\n                  <InputStyled value={referenciasSender} onChange={(event) => setReferenciasSender(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n              </LabelInputWrapper>\n                  \n              <LabelInputWrapper>\n                  <LabelStyled >Colonia</LabelStyled>\n                  <InputStyled value={colonySender} onChange={(event) => setColonySender(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                  {Object.keys(colonySenderError).map((key) => {return <div>{colonySenderError[key] }</div>})}\n              </LabelInputWrapper>\n              \n              <LabelInputWrapper>\n                  <LabelStyled >Código Postal</LabelStyled>\n                  <InputStyled value={postalCodeSender} onChange={(event) => setPostalCodeSender(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                  {Object.keys(postalCodeSenderError).map((key) => {return <div>{postalCodeSenderError[key] }</div>})}\n              </LabelInputWrapper>\n\n              <LabelInputWrapper>\n                  <LabelStyled >Ciudad</LabelStyled>\n                  <InputStyled value={citySender} onChange={(event) => setCitySender(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                  {Object.keys(citySenderError).map((key) => {return <div>{citySenderError[key] }</div>})}\n              </LabelInputWrapper>\n\n              <LabelInputWrapper className=\"field-holder\">\n                  <LabelStyled >Estado</LabelStyled>\n                  <select placeholder=\"Estado\" onChange ={(event) => setMexicoStateSender(event.target.value)}>\n                    <option value=\"no\">Seleccione Estado.</option>\n                    {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                    <option value=\"Baja California\">Baja California</option>\n                    <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                    {/* <option value=\"Campeche\">Campeche</option>\n                    <option value=\"Chiapas\">Chiapas</option> */}\n                    <option value=\"CH\">Chihuahua</option>\n                    <option value=\"CX\">Ciudad de México</option>\n                    <option value=\"CO\">Coahuila</option>\n                    {/* <option value=\"Colima\">Colima</option> */}\n                    <option value=\"DG\">Durango</option>\n                    {/* <option value=\"Estado de México\">Estado de México</option> */}\n                    <option value=\"GT\">Guanajuato</option>\n                    {/* <option value=\"Guerrero\">Guerrero</option> */}\n                    <option value=\"HG\">Hidalgo</option>\n                    <option value=\"JL\">Jalisco</option>\n                    {/* <option value=\"Michoacán\">Michoacán</option>\n                    <option value=\"Morelos\">Morelos</option>\n                    <option value=\"Nayarit\">Nayarit</option> */}\n                    <option value=\"NL\">Nuevo León</option>\n                    {/* <option value=\"Oaxaca\">Oaxaca</option>\n                    <option value=\"Puebla\">Puebla</option> */}\n                    <option value=\"QT\">Querétaro</option>\n                    {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                    <option value=\"SL\">San Luis Potosí</option>\n                    {/* <option value=\"Sinaloa\">Sinaloa</option>\n                    <option value=\"Sonora\">Sonora</option>\n                    <option value=\"Tabasco\">Tabasco</option> */}\n                    <option value=\"TM\">Tamaulipas</option>\n                    {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                    <option value=\"VE\">Veracruz</option>\n                    {/* <option value=\"Yucatán\">Yucatán</option>\n                    <option value=\"Zacatecas\">Zacatecas</option> */}\n                </select>\n              </LabelInputWrapper>\n          </SubsectionWrapper>\n\n          {/* TO SECTION */}\n          <SubsectionWrapper>\n            <SubsectionHeading>2. DESTINO:</SubsectionHeading>\n              <LabelInputWrapper >\n                  <LabelStyled>Nombre Completo</LabelStyled>\n                  <InputStyled\n                  value={fullNameReceiver}\n                  onChange= {event => setFullNameReceiver(event.target.value)}\n                  type=\"text\" placeholder=\"Nombre Completo\" />\n                  {Object.keys(fullNameReceiverError).map((key) => {return <div>{fullNameReceiverError[key] }</div>})}\n              </LabelInputWrapper>\n                                  \n              <LabelInputWrapper>\n                  <LabelStyled>Correo Electrónico</LabelStyled>\n                  <InputStyled value={emailReceiver} onChange={(event) => setEmailReceiver(event.target.value)} type=\"email\" placeholder=\"Correo Electrónico\" />\n                  {Object.keys(emailReceiverError).map((key) => { return <div>{emailReceiverError[key]}</div> })}  \n              </LabelInputWrapper>                \n                  \n              <LabelInputWrapper>\n                  <LabelStyled>Teléfono</LabelStyled>\n                  <InputStyled value={phoneNumberReceiver} onChange={(event) => setPhoneNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Teléfono\" />\n                  {Object.keys(phoneNumberReceiverError).map((key) => {return <div>{phoneNumberReceiverError[key] }</div>})}\n              </LabelInputWrapper>\n              \n              <LabelInputWrapper>\n                  <LabelStyled>Calle y Número</LabelStyled>\n                  <InputStyled value={streetAndNumberReceiver} onChange={(event) => setStreetandNumberReceiver(event.target.value)} type=\"text\" placeholder=\"Calle y Número\" />\n                  {Object.keys(streetAndNumberReceiverError).map((key) => {return <div>{streetAndNumberReceiverError[key] }</div>})}\n              </LabelInputWrapper>\n              \n              <LabelInputWrapper>\n                  <LabelStyled>Referencias</LabelStyled>\n                  <InputStyled value={referenciasReceiver} onChange={(event) => setReferenciasReceiver(event.target.value)} type=\"text\" placeholder=\"Referencias\" />\n              </LabelInputWrapper>\n                  \n              <LabelInputWrapper>\n                  <LabelStyled>Colonia</LabelStyled>\n                  <InputStyled value={colonyReceiver} onChange={(event) => setColonyReceiver(event.target.value)} type=\"text\" placeholder=\"Colonia\" />\n                  {Object.keys(colonyReceiverError).map((key) => {return <div>{colonyReceiverError[key] }</div>})}\n              </LabelInputWrapper>\n              \n              <LabelInputWrapper>\n                <LabelStyled>Código Postal</LabelStyled>\n                  <InputStyled value={postalCodeReceiver} onChange={(event) => setPostalCodeReceiver(event.target.value)} type=\"text\" placeholder=\"Codigo Postal\" />\n                  {Object.keys(postalCodeReceiverError).map((key) => {return <div>{postalCodeReceiverError[key] }</div>})}\n              </LabelInputWrapper>\n\n              <LabelInputWrapper>\n                  <LabelStyled>Ciudad</LabelStyled>\n                  <InputStyled value={cityReceiver} onChange={(event) => setCityReceiver(event.target.value)} type=\"text\" placeholder=\"Ciudad\" />\n                  {Object.keys(cityReceiverError).map((key) => {return <div>{cityReceiverError[key] }</div>})}\n              </LabelInputWrapper>\n\n              <LabelInputWrapper>\n                  <LabelStyled>Estado</LabelStyled>\n                  <select name=\"Estado\" placeholder=\"Estado\" onChange ={(event) => setMexicoStateReceiver(event.target.value)}>\n                  <option value=\"no\">Seleccione Estado.</option>\n                  {/* <option value=\"Aguascalientes\">Aguascalientes</option>\n                  <option value=\"Baja California\">Baja California</option>\n                  <option value=\"Baja California Sur\">Baja California Sur</option> */}\n                  {/* <option value=\"Campeche\">Campeche</option>\n                  <option value=\"Chiapas\">Chiapas</option> */}\n                  <option value=\"CH\">Chihuahua</option>\n                  <option value=\"CX\">Ciudad de México</option>\n                  <option value=\"CO\">Coahuila</option>\n                  {/* <option value=\"Colima\">Colima</option> */}\n                  <option value=\"DG\">Durango</option>\n                  {/* <option value=\"Estado de México\">Estado de México</option> */}\n                  <option value=\"GT\">Guanajuato</option>\n                  {/* <option value=\"Guerrero\">Guerrero</option> */}\n                  <option value=\"HG\">Hidalgo</option>\n                  <option value=\"JL\">Jalisco</option>\n                  {/* <option value=\"Michoacán\">Michoacán</option>\n                  <option value=\"Morelos\">Morelos</option>\n                  <option value=\"Nayarit\">Nayarit</option> */}\n                  <option value=\"NL\">Nuevo León</option>\n                  {/* <option value=\"Oaxaca\">Oaxaca</option>\n                  <option value=\"Puebla\">Puebla</option> */}\n                  <option value=\"QT\">Querétaro</option>\n                  {/* <option value=\"Quintana Roo\">Quintana Roo</option> */}\n                  <option value=\"SL\">San Luis Potosí</option>\n                  {/* <option value=\"Sinaloa\">Sinaloa</option>\n                  <option value=\"Sonora\">Sonora</option>\n                  <option value=\"Tabasco\">Tabasco</option> */}\n                  <option value=\"TM\">Tamaulipas</option>\n                  {/* <option value=\"Tlaxcala\">Tlaxcala</option> */}\n                  <option value=\"VE\">Veracruz</option>\n                  {/* <option value=\"Yucatán\">Yucatán</option>\n                  <option value=\"Zacatecas\">Zacatecas</option> */}\n                  </select>\n              </LabelInputWrapper>\n          </SubsectionWrapper>\n          \n          {/* TO PACKAGE INFO */}\n          <SubsectionWrapper>\n          <SubsectionHeading>3. INFORMACIÓN DEL PAQUETE</SubsectionHeading>\n              \n              <LabelInputWrapper>\n                  <LabelStyled >Largo (cm)</LabelStyled>\n                  <InputStyled value={packageLenght} \n                  onChange={(event) => {\n                    setPackageLenght(event.target.value)\n                  }} \n                  type=\"text\" placeholder=\"Largo (cm)\" \n                  />\n                  {Object.keys(packageLenghtError).map((key) => {return <div>{packageLenghtError[key]}</div>})}\n              </LabelInputWrapper>\n                                  \n              <LabelInputWrapper>\n                  <LabelStyled >Ancho (cm)</LabelStyled>\n                  <InputStyled value={packageWidth} \n                  onChange={(event) => {\n                    setPackageWidth(event.target.value)\n                  }} \n                  type=\"email\" placeholder=\"Ancho (cm)\" />\n                  {Object.keys(packageWidthError).map((key) => {return <div>{packageWidthError[key]}</div>})}\n              </LabelInputWrapper>                \n                  \n              <LabelInputWrapper>\n                  <LabelStyled >Alto (cm)</LabelStyled >\n                  <InputStyled value={packageHeight} \n                  onChange={(event) => {\n                    setPackageHeight(event.target.value)\n                  }} \n                  type=\"text\" placeholder=\"Alto (cm)\" />\n                  {Object.keys(packageHeightError).map((key) => {return <div>{packageHeightError[key]}</div>})}\n              </LabelInputWrapper>\n              \n                  {/* <h4>Peso del paquete que envías</h4> */}\n                  \n              <LabelInputWrapper>\n                  <LabelStyled>Peso del paquete (kg)</LabelStyled>\n                  <InputStyled value={packageWeight} \n                  onChange={(event) => {\n                    setPackageWeight(event.target.value)\n                  }}\n                  type=\"text\" placeholder=\"Peso del paquete en (kg)\" />\n                  {Object.keys(packageWeightError).map((key) => {return <div>{packageWeightError[key]}</div>})}\n              </LabelInputWrapper>\n              \n                  {/* <h4>¿Que envías?</h4> */}\n                  \n              <LabelInputWrapper>\n                  <LabelStyled>Contenido del paquete (Descripción corta)</LabelStyled>\n                  <InputStyled value={packageDescription} \n                  onChange={(event) => {\n                    setPackageDescription(event.target.value)}\n                    } \n                    type=\"text\" placeholder=\"Contenido del paquete (Descripción corta)\" />\n                    {Object.keys(packageDescriptionError).map((key) => {return <div>{packageDescriptionError[key]}</div>})}\n              </LabelInputWrapper>\n            \n            <div className=\"buttons-wrapper-row\">\n              <Link to=\"/userdashboard\">\n                {/* <button id=\"blue\" className=\"btn-create-guide-form\" >Regresar</button> */}\n              </Link>\n                  <button className=\"btn-create-guide-form\" onClick={(event) => {handleSubmit(event)}}>Cotizar</button>\n            </div>\n              \n            \n          </SubsectionWrapper>\n          \n          {/* PAYMENT */}\n          <SubsectionWrapper>\n            <div className=\"payment-section\">\n            <SubsectionHeading> \n              4. SELECCIONA TU TIPO DE ENVIO:\n            </SubsectionHeading>\n            <div className=\"table-holder\">{ loadingQuoteData ? <div className=\"cotizar-paragraph\">Llena todo los campos y da click en Cotizar!</div>:\n              <table>\n                <tr className=\"table-row-heading\">\n                  <th></th>\n                  <th>Servicio</th>\n                  <th>Tiempo Entrega</th>\n                  <th>Precio</th>\n                </tr>\n                {\n                  services.map((servicio, i) => {\n                    return (\n                    <tr className=\"table-data-row\" onClick={() => handleSelectGuide(servicio)}>\n                      <td>{i+1}</td>\n                      <td>{servicio.type.toUpperCase()}</td>\n                      <td>{servicio.estimateDelivery}</td>\n                      <td>${servicio.totalPrice}.99</td>\n                    </tr>)\n                  })}\n              \n              </table>  \n              }  \n            \n            </div>\n\n            <div className=\"wrapper-guide-cost\">\n                  <div>\n                    \n                  </div>\n\n                  <label className=\"heading-guide-cost\">Costo de tu Guia</label>\n                  <br></br>\n                  <label className=\"price-guide-cost\" >{guideCost}.00</label>\n            </div>\n\n            <div className=\"wrapper-guide-cost\">\n                  <div>\n                  </div>\n                  <label className=\"heading-guide-cost\">Saldo Disponible</label>\n                  <br></br>\n                  <label className=\"price-guide-cost\" >{user.balance}</label>\n            </div>\n            \n            { selectedService ? \n                guideCost < user.balance ? \n                <button onClick={() => createGuideApi() }>Pagar</button> :\n                <>\n                  <button disabled >Pagar</button>\n                  <h2>Cuentas con saldo insuficiente</h2>\n                </>\n              : \n              <></>\n            }\n            \n              \n            </div>\n          </SubsectionWrapper>\n\n        </SectionWrapper>\n\n        \n      </MainDiv>\n    )\n}\n\nconst MainDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  //background-color: grey;\n` \n\nconst SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  padding: 20px;\n`\n\nconst SubsectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 10px;\n  width: 250px;\n`\n\nconst SubsectionHeading = styled.h1`\n  font-size: 22spx;\n  color: #EE1F42;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 700;\n  \n`\n\nconst LabelInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding-top: 5px;\n  font-size: 12px;\n  color: #245188;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 800;\n`\n\nconst LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n`\n\nconst InputStyled = styled.input`\n  display: flex;\n  flex-direction: column;\n  height: 10px;\n  font-size: 12px;\n  font-family: 'Montserrat', sans-serif;\n  height: 14px;\n  color: #1f2430;\n  font-weight: 500;\n`\n\nexport default GuideCreator;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/UserDashboard/GuideTable.js",["296","297","298","299","300"],"\nimport React, { Component, useMemo } from 'react'\nimport CancelButton from './CancelButton'\nimport './GuideTable.scss'\nimport { Link } from 'react-router-dom'\n\nconst GuideTable = (props) => {\n  \n  const data = props.userGuides\n  \n  const columns = [ \n    'Tracking Num.',\n    'User',\n    'Precio',\n    'Status'\n  ] \n\n  const renderRow = (guide, index) => {\n\n    return (\n      <tr className=\"tr-element\" key={index}>\n        <td>{guide.trackingNumber}</td>\n        <td>{guide.currentUser}</td>\n        <td>{guide.guideCost}</td>\n        {/* <td>{guide.guideStatus}</td> */}\n        {/* <td>\n          <CancelButton userGuide={guide}>Descargar</CancelButton>\n        </td> */}\n        <td>\n          <a href={`${guide.fileUrl}`} target=\"_blank\">\n            <button id=\"red\" className=\"btn-cancel-guide\">Imprimir</button>\n          </a>\n        </td>\n      </tr>\n    )\n  }; \n \n  return (\n    <div>\n      <table className=\"table-element\">\n        <thead className=\" thead-element\">\n          {columns.map((colName) => {\n            return (<th>{colName}</th>)\n          })}\n        </thead>\n        <tbody className=\"\">\n          {data.map(renderRow)}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default GuideTable;\n","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Cart/Checkout.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Navbar/BtnRegistro.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/Cart/Checkout2.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/components/UserDashboard/CancelButton.js",[],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/GuidesChart.js",["301","302","303","304","305","306","307"],"import React, {useState, useEffect, useRef} from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { CategoryScale } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport styled from \"styled-components\";\n\nconst GuidesChart = (\n  {\n    dashboardData\n  }\n) => {\n\n  const yearTag = useRef(null);\n  const typeTag = useRef(null);\n\n  const yearsShipments = Object.keys(dashboardData.shipments).sort((a, b) => b - a)\n  const yearsRecargas = Object.keys(dashboardData.refils).sort((a, b) => b - a)\n\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(setInitialData());\n  const [yearsToSelect, setYearsToSelect] = useState(yearsShipments);\n  \n  Chart.register(CategoryScale);\n  const barChartData = {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Mar\",\"Abr\",\"May\",\"Jun\",\"Jul\",\n    \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"\n  ],\n    datasets: [\n      {\n        data: data,\n        borderColor: \"#3333ff\",\n        backgroundColor: \"pink\",\n        fill: true\n      },\n    ]\n  };\n\n  function setInitialData() {\n    const year = yearsShipments[0]\n    let newData = Array(12).fill(0)\n    dashboardData.shipments[year].forEach((entry) => {\n      switch (entry.Mes) {\n    case \"January\":\n      newData[0] = entry.total\n      return\n    case 'February':\n      newData[1] = entry.total\n      return \n    case \"March\":\n      newData[2] = entry.total\n      return \n    case \"April\":\n      newData[3] = entry.total\n        return\n    case \"May\":\n      newData[4] = entry.total\n      return\n    case \"June\":\n      newData[5] = entry.total\n        return\n    case \"July\":\n      newData[6] = entry.total\n      return\n    case \"August\":\n      newData[7] = entry.total\n        return\n    case \"September\":\n      newData[8] = entry.total\n      return\n    case \"October\":\n      newData[9] = entry.total\n        return\n    case \"November\":\n      newData[10] = entry.total\n      return\n    case \"December\":\n      newData[11] = entry.total\n      return  \n    }\n    })\n    return newData\n  }\n  \n  function updateChart() {\n    const year = yearTag.current.value\n    const type = typeTag.current.value\n    let newData = Array(12).fill(0)\n    console.log(dashboardData)\n    if (type == \"Envios\") {\n      dashboardData.shipments[year].forEach((entry) => {\n        switch (entry.Mes) {\n      case \"January\":\n        newData[0] = entry.total\n        return\n      case 'February':\n        newData[1] = entry.total\n        return \n      case \"March\":\n        newData[2] = entry.total\n        return \n      case \"April\":\n        newData[3] = entry.total\n          return\n      case \"May\":\n        newData[4] = entry.total\n        return\n      case \"June\":\n        newData[5] = entry.total\n          return\n      case \"July\":\n        newData[6] = entry.total\n        return\n      case \"August\":\n        newData[7] = entry.total\n          return\n      case \"September\":\n        newData[8] = entry.total\n        return\n      case \"October\":\n        newData[9] = entry.total\n          return\n      case \"November\":\n        newData[10] = entry.total\n        return\n      case \"December\":\n        newData[11] = entry.total\n        return  \n      }\n      })  \n    }\n\n    if (type == \"Recargas\") {\n      console.log(dashboardData.refils.length)\n      if (dashboardData.refils.length === 0) {\n        console.log(newData)\n      } else {\n        dashboardData.refils[year].forEach((entry) => {\n        switch (entry.Mes) {\n        case \"January\":\n          newData[0] = entry.total\n          return\n        case 'February':\n          newData[1] = entry.total\n          return \n        case \"March\":\n          newData[2] = entry.total\n          return \n        case \"April\":\n          newData[3] = entry.total\n            return\n        case \"May\":\n          newData[4] = entry.total\n          return\n        case \"June\":\n          newData[5] = entry.total\n            return\n        case \"July\":\n          newData[6] = entry.total\n          return\n        case \"August\":\n          newData[7] = entry.total\n            return\n        case \"September\":\n          newData[8] = entry.total\n          return\n        case \"October\":\n          newData[9] = entry.total\n            return\n        case \"November\":\n          newData[10] = entry.total\n          return\n        case \"December\":\n          newData[11] = entry.total\n          return  \n        }\n        })  \n      }\n    }\n    setData(newData)\n  }\n\n  const barChart = (\n    <Bar\n      type=\"bar\"\n      width={70}\n      height={20}\n      options={{\n        title: {\n          display: false,\n          text: \"COVID-19 Cases of Last 3 Months\",\n          fontSize: 15\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n        \n      }}\n      data={barChartData}\n    />\n  );\n\n  useEffect(() => {\n    setLoading(false)\n    console.log(\"runnig this\")\n  }, [loading]);\n\n  console.log(yearsToSelect)\n\n  return (\n  <ChartWrapper>\n    {\n        loading ? <></> :\n        <>\n        <SelectWrapper>\n          <Select ref={yearTag} onChange={(e) => updateChart(e, {type: \"year\"})}>\n              { yearsToSelect.map((year) => {\n                return <option >{year}</option>\n              })}\n          </Select>\n          <Select ref={typeTag} onChange={(e) => updateChart(e, { type: \"graph\"})}>\n                        <option>\n                          Envios\n                        </option>\n                        <option>\n                          Recargas\n                        </option>\n          </Select>\n        </SelectWrapper>\n        {barChart}\n        </>\n    }\n    \n  </ChartWrapper>\n  );\n};\n\nconst Select = styled.select`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n  align-self: flex-end;\n  margin-right: 30px\n`\n\nconst SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: flex-end;\n  justify-content: flex-end;\n`\n\nconst ChartWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 50px;\n`\n\n\nexport default GuidesChart;","/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/MyPayments.js",["308"],"/Users/flacocodes/Coding/quicken/QuikenFrontend/src/Pages/PaymentsTable.js",["309","310","311","312","313","314","315","316","317","318"],{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","severity":1,"message":"324","line":4,"column":8,"nodeType":"325","messageId":"326","endLine":4,"endColumn":17},{"ruleId":"323","severity":1,"message":"327","line":7,"column":10,"nodeType":"325","messageId":"326","endLine":7,"endColumn":40},{"ruleId":"323","severity":1,"message":"328","line":12,"column":12,"nodeType":"325","messageId":"326","endLine":12,"endColumn":25},{"ruleId":"323","severity":1,"message":"329","line":16,"column":12,"nodeType":"325","messageId":"326","endLine":16,"endColumn":27},{"ruleId":"323","severity":1,"message":"330","line":17,"column":12,"nodeType":"325","messageId":"326","endLine":17,"endColumn":24},{"ruleId":"331","severity":1,"message":"332","line":108,"column":8,"nodeType":"333","endLine":108,"endColumn":35,"suggestions":"334"},{"ruleId":"323","severity":1,"message":"335","line":18,"column":10,"nodeType":"325","messageId":"326","endLine":18,"endColumn":18},{"ruleId":"323","severity":1,"message":"336","line":58,"column":10,"nodeType":"325","messageId":"326","endLine":58,"endColumn":20},{"ruleId":"331","severity":1,"message":"337","line":588,"column":4,"nodeType":"333","endLine":588,"endColumn":39,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":38,"column":23,"nodeType":"341","messageId":"342","endLine":38,"endColumn":25},{"ruleId":"323","severity":1,"message":"324","line":8,"column":8,"nodeType":"325","messageId":"326","endLine":8,"endColumn":17},{"ruleId":"323","severity":1,"message":"343","line":13,"column":23,"nodeType":"325","messageId":"326","endLine":13,"endColumn":37},{"ruleId":"323","severity":1,"message":"344","line":18,"column":10,"nodeType":"325","messageId":"326","endLine":18,"endColumn":21},{"ruleId":"323","severity":1,"message":"345","line":18,"column":23,"nodeType":"325","messageId":"326","endLine":18,"endColumn":37},{"ruleId":"323","severity":1,"message":"346","line":20,"column":22,"nodeType":"325","messageId":"326","endLine":20,"endColumn":35},{"ruleId":"323","severity":1,"message":"347","line":23,"column":10,"nodeType":"325","messageId":"326","endLine":23,"endColumn":19},{"ruleId":"323","severity":1,"message":"348","line":23,"column":21,"nodeType":"325","messageId":"326","endLine":23,"endColumn":33},{"ruleId":"323","severity":1,"message":"349","line":24,"column":25,"nodeType":"325","messageId":"326","endLine":24,"endColumn":41},{"ruleId":"323","severity":1,"message":"350","line":25,"column":10,"nodeType":"325","messageId":"326","endLine":25,"endColumn":27},{"ruleId":"323","severity":1,"message":"351","line":25,"column":29,"nodeType":"325","messageId":"326","endLine":25,"endColumn":49},{"ruleId":"323","severity":1,"message":"352","line":26,"column":10,"nodeType":"325","messageId":"326","endLine":26,"endColumn":27},{"ruleId":"323","severity":1,"message":"353","line":26,"column":29,"nodeType":"325","messageId":"326","endLine":26,"endColumn":49},{"ruleId":"323","severity":1,"message":"354","line":27,"column":10,"nodeType":"325","messageId":"326","endLine":27,"endColumn":21},{"ruleId":"323","severity":1,"message":"355","line":27,"column":23,"nodeType":"325","messageId":"326","endLine":27,"endColumn":37},{"ruleId":"323","severity":1,"message":"356","line":127,"column":9,"nodeType":"325","messageId":"326","endLine":127,"endColumn":23},{"ruleId":"323","severity":1,"message":"357","line":10,"column":12,"nodeType":"325","messageId":"326","endLine":10,"endColumn":17},{"ruleId":"323","severity":1,"message":"357","line":18,"column":12,"nodeType":"325","messageId":"326","endLine":18,"endColumn":17},{"ruleId":"339","severity":1,"message":"340","line":52,"column":21,"nodeType":"341","messageId":"342","endLine":52,"endColumn":23},{"ruleId":"323","severity":1,"message":"358","line":62,"column":7,"nodeType":"325","messageId":"326","endLine":62,"endColumn":31},{"ruleId":"323","severity":1,"message":"349","line":19,"column":27,"nodeType":"325","messageId":"326","endLine":19,"endColumn":43},{"ruleId":"323","severity":1,"message":"359","line":21,"column":12,"nodeType":"325","messageId":"326","endLine":21,"endColumn":29},{"ruleId":"323","severity":1,"message":"360","line":21,"column":31,"nodeType":"325","messageId":"326","endLine":21,"endColumn":51},{"ruleId":"331","severity":1,"message":"361","line":35,"column":6,"nodeType":"333","endLine":35,"endColumn":8,"suggestions":"362"},{"ruleId":"323","severity":1,"message":"363","line":18,"column":10,"nodeType":"325","messageId":"326","endLine":18,"endColumn":26},{"ruleId":"331","severity":1,"message":"364","line":100,"column":6,"nodeType":"333","endLine":100,"endColumn":21,"suggestions":"365"},{"ruleId":"323","severity":1,"message":"357","line":17,"column":12,"nodeType":"325","messageId":"326","endLine":17,"endColumn":17},{"ruleId":"323","severity":1,"message":"366","line":19,"column":13,"nodeType":"325","messageId":"326","endLine":19,"endColumn":18},{"ruleId":"323","severity":1,"message":"367","line":19,"column":20,"nodeType":"325","messageId":"326","endLine":19,"endColumn":28},{"ruleId":"323","severity":1,"message":"368","line":167,"column":7,"nodeType":"325","messageId":"326","endLine":167,"endColumn":20},{"ruleId":"331","severity":1,"message":"369","line":19,"column":5,"nodeType":"333","endLine":19,"endColumn":7,"suggestions":"370"},{"ruleId":"323","severity":1,"message":"357","line":12,"column":12,"nodeType":"325","messageId":"326","endLine":12,"endColumn":17},{"ruleId":"323","severity":1,"message":"371","line":13,"column":12,"nodeType":"325","messageId":"326","endLine":13,"endColumn":19},{"ruleId":"323","severity":1,"message":"372","line":2,"column":9,"nodeType":"325","messageId":"326","endLine":2,"endColumn":25},{"ruleId":"323","severity":1,"message":"373","line":11,"column":9,"nodeType":"325","messageId":"326","endLine":11,"endColumn":13},{"ruleId":"374","severity":1,"message":"375","line":14,"column":22,"nodeType":"325","messageId":"376","endLine":14,"endColumn":30},{"ruleId":"323","severity":1,"message":"377","line":15,"column":7,"nodeType":"325","messageId":"326","endLine":15,"endColumn":21},{"ruleId":"378","severity":1,"message":"379","line":44,"column":13,"nodeType":"380","endLine":44,"endColumn":61},{"ruleId":"378","severity":1,"message":"379","line":40,"column":21,"nodeType":"380","endLine":40,"endColumn":72},{"ruleId":"323","severity":1,"message":"381","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":26},{"ruleId":"323","severity":1,"message":"382","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":14},{"ruleId":"323","severity":1,"message":"383","line":3,"column":16,"nodeType":"325","messageId":"326","endLine":3,"endColumn":23},{"ruleId":"323","severity":1,"message":"384","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":17},{"ruleId":"331","severity":1,"message":"385","line":18,"column":6,"nodeType":"333","endLine":18,"endColumn":8,"suggestions":"386"},{"ruleId":"331","severity":1,"message":"387","line":44,"column":19,"nodeType":"388","endLine":44,"endColumn":32},{"ruleId":"339","severity":1,"message":"340","line":133,"column":92,"nodeType":"341","messageId":"342","endLine":133,"endColumn":94},{"ruleId":"389","severity":1,"message":"390","line":145,"column":21,"nodeType":"380","messageId":"391","endLine":146,"endColumn":148,"fix":"392"},{"ruleId":"323","severity":1,"message":"393","line":243,"column":7,"nodeType":"325","messageId":"326","endLine":243,"endColumn":9},{"ruleId":"323","severity":1,"message":"394","line":248,"column":7,"nodeType":"325","messageId":"326","endLine":248,"endColumn":21},{"ruleId":"323","severity":1,"message":"395","line":349,"column":7,"nodeType":"325","messageId":"326","endLine":349,"endColumn":21},{"ruleId":"323","severity":1,"message":"396","line":1,"column":10,"nodeType":"325","messageId":"326","endLine":1,"endColumn":20},{"ruleId":"323","severity":1,"message":"397","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":13},{"ruleId":"323","severity":1,"message":"398","line":17,"column":11,"nodeType":"325","messageId":"326","endLine":17,"endColumn":24},{"ruleId":"399","severity":1,"message":"400","line":26,"column":19,"nodeType":"401","messageId":"402","endLine":26,"endColumn":27,"fix":"403"},{"ruleId":"323","severity":1,"message":"404","line":1,"column":10,"nodeType":"325","messageId":"326","endLine":1,"endColumn":15},{"ruleId":"323","severity":1,"message":"405","line":13,"column":7,"nodeType":"325","messageId":"326","endLine":13,"endColumn":15},{"ruleId":"323","severity":1,"message":"406","line":16,"column":10,"nodeType":"325","messageId":"326","endLine":16,"endColumn":17},{"ruleId":"323","severity":1,"message":"407","line":16,"column":19,"nodeType":"325","messageId":"326","endLine":16,"endColumn":29},{"ruleId":"323","severity":1,"message":"335","line":19,"column":10,"nodeType":"325","messageId":"326","endLine":19,"endColumn":18},{"ruleId":"323","severity":1,"message":"408","line":34,"column":10,"nodeType":"325","messageId":"326","endLine":34,"endColumn":16},{"ruleId":"323","severity":1,"message":"409","line":34,"column":18,"nodeType":"325","messageId":"326","endLine":34,"endColumn":27},{"ruleId":"323","severity":1,"message":"410","line":35,"column":10,"nodeType":"325","messageId":"326","endLine":35,"endColumn":24},{"ruleId":"323","severity":1,"message":"411","line":35,"column":26,"nodeType":"325","messageId":"326","endLine":35,"endColumn":43},{"ruleId":"323","severity":1,"message":"412","line":36,"column":10,"nodeType":"325","messageId":"326","endLine":36,"endColumn":20},{"ruleId":"323","severity":1,"message":"413","line":36,"column":22,"nodeType":"325","messageId":"326","endLine":36,"endColumn":35},{"ruleId":"323","severity":1,"message":"336","line":57,"column":10,"nodeType":"325","messageId":"326","endLine":57,"endColumn":20},{"ruleId":"323","severity":1,"message":"414","line":92,"column":9,"nodeType":"325","messageId":"326","endLine":92,"endColumn":20},{"ruleId":"323","severity":1,"message":"415","line":2,"column":17,"nodeType":"325","messageId":"326","endLine":2,"endColumn":26},{"ruleId":"323","severity":1,"message":"416","line":2,"column":28,"nodeType":"325","messageId":"326","endLine":2,"endColumn":35},{"ruleId":"323","severity":1,"message":"417","line":3,"column":8,"nodeType":"325","messageId":"326","endLine":3,"endColumn":20},{"ruleId":"323","severity":1,"message":"382","line":5,"column":10,"nodeType":"325","messageId":"326","endLine":5,"endColumn":14},{"ruleId":"389","severity":1,"message":"390","line":30,"column":11,"nodeType":"380","messageId":"391","endLine":30,"endColumn":56,"fix":"418"},{"ruleId":"323","severity":1,"message":"419","line":17,"column":9,"nodeType":"325","messageId":"326","endLine":17,"endColumn":22},{"ruleId":"323","severity":1,"message":"420","line":21,"column":25,"nodeType":"325","messageId":"326","endLine":21,"endColumn":41},{"ruleId":"421","severity":1,"message":"422","line":42,"column":7,"nodeType":"423","messageId":"424","endLine":79,"endColumn":6},{"ruleId":"339","severity":1,"message":"340","line":89,"column":14,"nodeType":"341","messageId":"342","endLine":89,"endColumn":16},{"ruleId":"421","severity":1,"message":"422","line":91,"column":9,"nodeType":"423","messageId":"424","endLine":128,"endColumn":8},{"ruleId":"339","severity":1,"message":"340","line":132,"column":14,"nodeType":"341","messageId":"342","endLine":132,"endColumn":16},{"ruleId":"421","severity":1,"message":"422","line":138,"column":9,"nodeType":"423","messageId":"424","endLine":175,"endColumn":10},{"ruleId":"323","severity":1,"message":"425","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":25},{"ruleId":"323","severity":1,"message":"382","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":14},{"ruleId":"323","severity":1,"message":"383","line":3,"column":16,"nodeType":"325","messageId":"326","endLine":3,"endColumn":23},{"ruleId":"323","severity":1,"message":"384","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":17},{"ruleId":"331","severity":1,"message":"426","line":18,"column":6,"nodeType":"333","endLine":18,"endColumn":8,"suggestions":"427"},{"ruleId":"331","severity":1,"message":"387","line":46,"column":19,"nodeType":"388","endLine":46,"endColumn":32},{"ruleId":"339","severity":1,"message":"340","line":152,"column":92,"nodeType":"341","messageId":"342","endLine":152,"endColumn":94},{"ruleId":"323","severity":1,"message":"428","line":153,"column":25,"nodeType":"325","messageId":"326","endLine":153,"endColumn":40},{"ruleId":"323","severity":1,"message":"393","line":264,"column":7,"nodeType":"325","messageId":"326","endLine":264,"endColumn":9},{"ruleId":"323","severity":1,"message":"394","line":269,"column":7,"nodeType":"325","messageId":"326","endLine":269,"endColumn":21},{"ruleId":"323","severity":1,"message":"395","line":370,"column":7,"nodeType":"325","messageId":"326","endLine":370,"endColumn":21},"no-native-reassign",["429"],"no-negated-in-lhs",["430"],"no-unused-vars","'SubNavbar' is defined but never used.","Identifier","unusedVar","'AfterpayClearpayMessageElement' is defined but never used.","'paymentMethod' is assigned a value but never used.","'hasPaymentError' is assigned a value but never used.","'errorPayment' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'requestRecharge' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["431"],"'apiGuide' is assigned a value but never used.","'errorQuote' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'guideCost' and 'username'. Either include them or remove the dependency array.",["432"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCompanyName' is assigned a value but never used.","'privateData' is assigned a value but never used.","'setPrivateData' is assigned a value but never used.","'setUserPoints' is assigned a value but never used.","'userSaldo' is assigned a value but never used.","'setUserSaldo' is assigned a value but never used.","'setTotalRecargas' is assigned a value but never used.","'pesoPromedioGuias' is assigned a value but never used.","'setPesoPromedioGuias' is assigned a value but never used.","'averageCostGuides' is assigned a value but never used.","'setAverageCostGuides' is assigned a value but never used.","'averageCost' is assigned a value but never used.","'setAverageCost' is assigned a value but never used.","'loadUserGuides' is assigned a value but never used.","'error' is assigned a value but never used.","'CreateGuideScreenWrapper' is assigned a value but never used.","'paymentsToConfirm' is assigned a value but never used.","'setPaymentsToConfirm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchDashboard' and 'fetchPrivateData'. Either include them or remove the dependency array.",["433"],"'guideInformation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getGuideInfo'. Either include it or remove the dependency array.",["434"],"'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'WelcomeHeader' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'goToDashboard' and 'history'. Either include them or remove the dependency array.",["435"],"'loading' is assigned a value but never used.","'FloatingWhatsApp' is defined but never used.","'node' is assigned a value but never used.","no-use-before-define","'Tawk_API' was used before it was defined.","usedBeforeDefined","'Tawk_LoadStart' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'userEvent' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchGuides'. Either include it or remove the dependency array.",["436"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"437","text":"438"},"'Td' is assigned a value but never used.","'PaginationLink' is assigned a value but never used.","'SectionWrapper' is assigned a value but never used.","'background' is defined but never used.","'axios' is defined but never used.","'logoutHandler' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"439","text":"440"},"'Input' is defined but never used.","'username' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'points' is assigned a value but never used.","'setPoints' is assigned a value but never used.","'isPointsEnough' is assigned a value but never used.","'setIsPointsEnough' is assigned a value but never used.","'needsReset' is assigned a value but never used.","'setNeedsReset' is assigned a value but never used.","'createGuide' is assigned a value but never used.","'Component' is defined but never used.","'useMemo' is defined but never used.","'CancelButton' is defined but never used.",{"range":"441","text":"438"},"'yearsRecargas' is assigned a value but never used.","'setYearsToSelect' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPayments'. Either include it or remove the dependency array.",["442"],"'tracking_number' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},[3758,3758]," rel=\"noreferrer\"",[684,684],"()",[744,744],{"desc":"455","fix":"456"},"Update the dependencies array to be: [isRechargePaid, cartTotal, username, requestRecharge]",{"range":"457","text":"458"},"Update the dependencies array to be: [paymentMethod, points, needsReset, username, guideCost]",{"range":"459","text":"460"},"Update the dependencies array to be: [fetchDashboard, fetchPrivateData]",{"range":"461","text":"462"},"Update the dependencies array to be: [getGuideInfo, needsRerender]",{"range":"463","text":"464"},"Update the dependencies array to be: [goToDashboard, history]",{"range":"465","text":"466"},"Update the dependencies array to be: [fetchGuides]",{"range":"467","text":"468"},"Update the dependencies array to be: [fetchPayments]",{"range":"469","text":"470"},[3335,3362],"[isRechargePaid, cartTotal, username, requestRecharge]",[18251,18286],"[paymentMethod, points, needsReset, username, guideCost]",[1153,1155],"[fetchDashboard, fetchPrivateData]",[3075,3090],"[getGuideInfo, needsRerender]",[612,614],"[goToDashboard, history]",[518,520],"[fetchGuides]",[526,528],"[fetchPayments]"]